var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ALD_JDKL_Event_JDKL_Def;
(function (ALD_JDKL_Event_JDKL_Def) {
    ALD_JDKL_Event_JDKL_Def["None"] = "";
    ALD_JDKL_Event_JDKL_Def["ReportAdClickSuccess"] = "\u5E7F\u544A\u5BFC\u51FA\u6210\u529F";
    ALD_JDKL_Event_JDKL_Def["ReportAdClickFail"] = "\u5E7F\u544A\u5BFC\u51FA\u5931\u8D25";
    //todo:添加你自己的阿拉丁事件
})(ALD_JDKL_Event_JDKL_Def = exports.ALD_JDKL_Event_JDKL_Def || (exports.ALD_JDKL_Event_JDKL_Def = {}));
//阿拉丁相关接口
var AL_JDKL_D_JDKL_ = /** @class */ (function () {
    function AL_JDKL_D_JDKL_() {
    }
    AL_JDKL_D_JDKL_.ald_JDKL_Send_JDKL_OpenId = function (openid) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
    };
    AL_JDKL_D_JDKL_.ald_JDKL_SendEvent = function (event, data) {
        var eventName = event;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendEvent(eventName, data);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendEvent(eventName, data);
        }
    };
    AL_JDKL_D_JDKL_.aldSend_JDKL_ReportAdClick_JDKL_Success = function (data) {
        var type = ALD_JDKL_Event_JDKL_Def.ReportAdClickSuccess + " " + data.title + ":" + String(data.appid);
        var ald = AL_JDKL_D_JDKL_;
        ald.ald_JDKL_SendEvent(type, {
            "导出成功": data.title + ":" + String(data.appid)
        });
    };
    AL_JDKL_D_JDKL_.ald_JDKL_SendReport_JDKL_AdClickFail = function (data) {
        var type = ALD_JDKL_Event_JDKL_Def.ReportAdClickFail + " " + data.title + ":" + String(data.appid);
        var ald = AL_JDKL_D_JDKL_;
        ald.ald_JDKL_SendEvent(type, {
            "导出失败": data.title + ":" + String(data.appid)
        });
    };
    return AL_JDKL_D_JDKL_;
}());
exports.default = AL_JDKL_D_JDKL_;
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig = /** @class */ (function () {
    function AppConfig() {
    }
    AppConfig.App_JDKL_ID = "wx1be6847990bc2531";
    AppConfig.Res_JDKL_Server = "https://oss.renyouwangluo.cn/jjkl"; //资源服务器地址
    AppConfig.Local_JDKL_Test_JDKL_ReServer = "https://oss.renyouwangluo.cn/jjkl"; //本地测试资源服务器地址
    AppConfig.Versions_JDKL_ = "0.0.0";
    AppConfig.on_JDKL_TTMiniGame = false; //是否是头条小游戏
    return AppConfig;
}());
exports.default = AppConfig;
},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var Cached_JDKL_WXBannerAd = /** @class */ (function () {
    function Cached_JDKL_WXBannerAd() {
    }
    Cached_JDKL_WXBannerAd.pre_JDKL_loadBanner = function () {
        var wxWuDianBanners = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().wxWuDian_JDKL_Banners;
        var bannerTodayBannerMax = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().banner_JDKL_TodayBannerMax;
        var preLoadBanners = new Array();
        for (var i = 0; i < wxWuDianBanners.length; ++i) {
            preLoadBanners.push(wxWuDianBanners[i]);
        }
        if (preLoadBanners.length > bannerTodayBannerMax) {
            var delNum = preLoadBanners.length - bannerTodayBannerMax;
            for (var i = 0; i < delNum; ++i) {
                preLoadBanners.splice(Math.floor(Math.random() * preLoadBanners.length), 1);
            }
        }
        console.log("开始预创建微信Bannaer", preLoadBanners);
        console.log("Bannaer 最大数限制 ：", bannerTodayBannerMax);
        var counter = 0;
        Laya.timer.loop(2000, Cached_JDKL_WXBannerAd._preLoopObj, function () {
            if (counter >= preLoadBanners.length) {
                Laya.timer.clearAll(Cached_JDKL_WXBannerAd._preLoopObj);
                return;
            }
            var bannerid = preLoadBanners[counter];
            var banner = Cached_JDKL_WXBannerAd._banner_JDKL_Cache[bannerid];
            if (null == banner) {
                banner = Cached_JDKL_WXBannerAd.create_JDKL_(bannerid);
                if (null != banner) {
                    Cached_JDKL_WXBannerAd._banner_JDKL_Cache[bannerid] = banner;
                    console.log("预创建微信Bannaer", bannerid, "完成");
                }
            }
            ++counter;
        });
    };
    Cached_JDKL_WXBannerAd.get_JDKL_Banner = function (bannerid) {
        if (null == bannerid || "" == bannerid)
            return null;
        var banner = Cached_JDKL_WXBannerAd._banner_JDKL_Cache[bannerid];
        if (null == banner) {
            banner = Cached_JDKL_WXBannerAd.create_JDKL_(bannerid);
            if (null != banner) {
                Cached_JDKL_WXBannerAd._banner_JDKL_Cache[bannerid] = banner;
            }
        }
        return banner;
    };
    Cached_JDKL_WXBannerAd.create_JDKL_ = function (bannerid) {
        if (Laya.Browser.onMiniGame) {
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerid,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: (Laya.stage.height - 240) / Laya.stage.height * sh,
                    width: sw,
                }
            });
            if (banner) {
                banner.onLoad(function (res) {
                    console.log("CachedWXBanner 广告 加载完成", bannerid);
                    console.log(res);
                });
                banner.onError(function (err) {
                    console.log("CachedWXBanner 广告 加载失败", bannerid);
                    console.log(err);
                });
                banner.onResize(function (res) {
                    console.log(banner.style.realWidth, banner.style.realHeight);
                });
            }
            return banner;
        }
        else {
            return null;
        }
    };
    Cached_JDKL_WXBannerAd.show_JDKL_ = function () {
        if (null != Cached_JDKL_WXBannerAd._cur_JDKL_Banner) {
            Cached_JDKL_WXBannerAd._cur_JDKL_Banner.hide();
            Cached_JDKL_WXBannerAd._cur_JDKL_Banner = null;
        }
        var wuDianBanners = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().wxWuDian_JDKL_Banners;
        var bannerid = wuDianBanners[Math.floor(Math.random() * wuDianBanners.length)];
        var banner = Cached_JDKL_WXBannerAd.get_JDKL_Banner(bannerid);
        if (banner) {
            Cached_JDKL_WXBannerAd._cur_JDKL_Banner = banner;
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            Cached_JDKL_WXBannerAd._cur_JDKL_Banner.style.top = (Laya.stage.height - 240) / Laya.stage.height * sh;
            Cached_JDKL_WXBannerAd._cur_JDKL_Banner.show();
            console.log("CachedWXBanner 广告显示 bannerid ： ", bannerid);
        }
        var time = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().banner_JDKL_FreshTimer;
        //Laya.timer.once(time * 1000,CachedWXBannerAd,CachedWXBannerAd.changeShow);
    };
    Cached_JDKL_WXBannerAd.hide_JDKL_ = function () {
        Laya.timer.clearAll(Cached_JDKL_WXBannerAd);
        if (null != Cached_JDKL_WXBannerAd._cur_JDKL_Banner) {
            Cached_JDKL_WXBannerAd._cur_JDKL_Banner.hide();
            Cached_JDKL_WXBannerAd._cur_JDKL_Banner = null;
        }
        console.log("CachedWXBanner 广告隐藏");
    };
    Cached_JDKL_WXBannerAd.change_JDKL_Show = function () {
        if (null != Cached_JDKL_WXBannerAd._cur_JDKL_Banner) {
            Cached_JDKL_WXBannerAd._cur_JDKL_Banner.hide();
            Cached_JDKL_WXBannerAd._cur_JDKL_Banner = null;
        }
        Cached_JDKL_WXBannerAd.show_JDKL_();
    };
    Cached_JDKL_WXBannerAd.clear_JDKL_ = function () {
        Laya.timer.clearAll(Cached_JDKL_WXBannerAd);
        for (var key in Cached_JDKL_WXBannerAd._banner_JDKL_Cache) {
            var banner = Cached_JDKL_WXBannerAd._banner_JDKL_Cache[key];
            if (null != banner) {
                banner.destroy();
            }
            Cached_JDKL_WXBannerAd._banner_JDKL_Cache[key] = null;
        }
    };
    Cached_JDKL_WXBannerAd._banner_JDKL_Cache = {};
    Cached_JDKL_WXBannerAd._cur_JDKL_Banner = null;
    Cached_JDKL_WXBannerAd._preLoopObj = {};
    return Cached_JDKL_WXBannerAd;
}());
exports.default = Cached_JDKL_WXBannerAd;
},{"./Config/AppSwitchConfig":4}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var App_JDKL_SwitchData = /** @class */ (function () {
    function App_JDKL_SwitchData() {
        this.version = "";
        this.banner = 0;
        this.wudian = 0;
        this.wudianAvailableTime = {
            "0": 0, "1": 0, "2": 0, "3": 0,
            "4": 0, "5": 0, "6": 0, "7": 0,
            "8": 0, "9": 0, "10": 0, "11": 0,
            "12": 0, "13": 0, "14": 0, "15": 0,
            "16": 0, "17": 0, "18": 0, "19": 0,
            "20": 0, "21": 0, "22": 0, "23": 0
        };
        this.mailiang = 1;
        this.mailiang_JDKL_list = new Array();
        this.mailiang_JDKL_SceneList = new Array();
        this.wxWuDian_JDKL_Banners = new Array();
        this.btnMoveTimer = 1;
        this.banner_JDKL_MoveTimer = 0.5;
        this.banner_JDKL_FreshTimer = 200;
        this.banner_JDKL_CreateFailNum = 3;
        this.banner_JDKL_TodayBannerMax = 10;
        this.adSwitch = 1;
        this.wudianSceneList = new Array();
        this.btnDelayTime = 0;
    }
    Object.defineProperty(App_JDKL_SwitchData.prototype, "wudian_JDKL_TimeAvaliable", {
        /**
         * 得到当前时间开关是否打开
         *
         * @readonly
         * @type {boolean}
         * @memberof AppSwitchData
         */
        get: function () {
            return this.wudianAvailableTime[new Date().getHours()] == 1;
        },
        enumerable: true,
        configurable: true
    });
    return App_JDKL_SwitchData;
}());
exports.App_JDKL_SwitchData = App_JDKL_SwitchData;
var AppSwitch_JDKL_Config = /** @class */ (function () {
    function AppSwitch_JDKL_Config() {
        this._data = new Array();
    }
    AppSwitch_JDKL_Config.get_JDKL_Instance = function () {
        if (null == AppSwitch_JDKL_Config._instance) {
            AppSwitch_JDKL_Config._instance = AppSwitch_JDKL_Config.load();
        }
        return AppSwitch_JDKL_Config._instance;
    };
    AppSwitch_JDKL_Config.load = function () {
        var config = new AppSwitch_JDKL_Config();
        var json = Laya.loader.getRes(AppConfig_1.default.Res_JDKL_Server + "/json/appswitch.json");
        if (json) {
            for (var i = 0; i < json.length; ++i) {
                var row = json[i];
                var rowData = new App_JDKL_SwitchData();
                rowData.version = String(row["version"]);
                rowData.banner = Number(row["banner"]);
                rowData.wudian = Number(row["wudian"]);
                rowData.wudianAvailableTime = Object(row["wudianTime"]);
                rowData.mailiang = Number(row["mailiang"]);
                var mailianglist = row["mailianglist"];
                if (null != mailianglist) {
                    for (var j = 0; j < mailianglist.length; ++j) {
                        var flag = Number(mailianglist[j]);
                        rowData.mailiang_JDKL_list.push(flag);
                    }
                }
                var mailiangScenelist = row["mailiangScenelist"];
                if (null != mailiangScenelist) {
                    for (var j = 0; j < mailiangScenelist.length; ++j) {
                        var sceneValue = Number(mailiangScenelist[j]);
                        rowData.mailiang_JDKL_SceneList.push(sceneValue);
                    }
                }
                var wxwudianbanners = row["wxwudianbanners"];
                if (null != wxwudianbanners) {
                    for (var j = 0; j < wxwudianbanners.length; ++j) {
                        var bannerid = String(wxwudianbanners[j]);
                        rowData.wxWuDian_JDKL_Banners.push(bannerid);
                    }
                }
                rowData.btnMoveTimer = Number(row["btnMoveTimer"]);
                rowData.banner_JDKL_MoveTimer = Number(row["bannerMoveTimer"]);
                rowData.banner_JDKL_CreateFailNum = Number(row["createFailNum"]);
                rowData.banner_JDKL_FreshTimer = Number(row["bannerFreshTimer"]);
                rowData.banner_JDKL_TodayBannerMax = Number(row["todayBannerMax"]);
                rowData.adSwitch = Number(row["adSwitch"]);
                var wudianSceneList = row["wudianSceneList"];
                if (null != wudianSceneList) {
                    for (var j = 0; j < wudianSceneList.length; ++j) {
                        var wudianSceneValue = Number(wudianSceneList[j]);
                        rowData.wudianSceneList.push(wudianSceneValue);
                    }
                }
                rowData.btnDelayTime = Number(row["btnDelayTime"]);
                config._data.push(rowData);
            }
            return config;
        }
        else {
            config._data.push(new App_JDKL_SwitchData());
            return config;
        }
    };
    AppSwitch_JDKL_Config.prototype.getApp_JDKL_SwitchData = function () {
        return this._data[0];
    };
    return AppSwitch_JDKL_Config;
}());
exports.default = AppSwitch_JDKL_Config;
},{"../AppConfig":2}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var Game_JDKL_ConfigData = /** @class */ (function () {
    function Game_JDKL_ConfigData() {
        this.getDiamond = 0;
        this.newUserDiamond = 0;
        this.playerBasicHp = 0;
        this.singleMonsterBornTime = [];
        this.wellenMonsterBornTime = [];
        this.behaviorRandomTime = [];
        this.behaviorTime = [];
        this.monsterHpFilter = 0;
        this.monsterDamageFilter = 0;
        this.playerHpFilter = 0;
        this.hpTrigger = 0;
        this.playerDamageStrengthen = 0;
        this.playerDamageStrengthenTime = 5;
    }
    return Game_JDKL_ConfigData;
}());
exports.Game_JDKL_ConfigData = Game_JDKL_ConfigData;
var Game_JDKL_CommonConfig = /** @class */ (function () {
    function Game_JDKL_CommonConfig() {
        this._data = new Array();
    }
    Game_JDKL_CommonConfig.get_JDKL_Instance = function () {
        if (null == Game_JDKL_CommonConfig._instance) {
            Game_JDKL_CommonConfig._instance = Game_JDKL_CommonConfig.load();
        }
        return Game_JDKL_CommonConfig._instance;
    };
    Game_JDKL_CommonConfig.load = function () {
        var config = new Game_JDKL_CommonConfig();
        var json = Laya.loader.getRes(AppConfig_1.default.Res_JDKL_Server + "/json/gameConfig.json");
        if (json) {
            for (var i = 0; i < json.length; ++i) {
                var row = json[i];
                var rowData = new Game_JDKL_ConfigData();
                rowData.getDiamond = row.getDiamond;
                rowData.newUserDiamond = row.newUserDiamond;
                rowData.playerBasicHp = row.playerBasicHp;
                rowData.singleMonsterBornTime = row.singleMonsterBornTime;
                rowData.wellenMonsterBornTime = row.wellenMonsterBornTime;
                rowData.behaviorRandomTime = row.behaviorRandomTime;
                rowData.behaviorTime = row.behaviorTime;
                rowData.monsterHpFilter = row.monsterHpFilter;
                rowData.monsterDamageFilter = row.monsterDamageFilter;
                rowData.playerHpFilter = row.playerHpFilter;
                rowData.hpTrigger = row.hpTrigger;
                rowData.playerDamageStrengthen = row.playerDamageStrengthen;
                rowData.playerDamageStrengthenTime = row.playerDamageStrengthenTime;
                config._data.push(rowData);
            }
            return config;
        }
        else {
            config._data.push(new Game_JDKL_ConfigData());
            return config;
        }
    };
    Game_JDKL_CommonConfig.prototype.getGameConfigData = function () {
        return this._data[0];
    };
    Game_JDKL_CommonConfig.prototype.getSingleMonsterBornTime = function () {
        return this._data[0].singleMonsterBornTime[Math.floor(Math.random() * this._data[0].singleMonsterBornTime.length)] * 1000;
    };
    Game_JDKL_CommonConfig.prototype.getWellenMonsterBornTime = function () {
        return this._data[0].wellenMonsterBornTime[Math.floor(Math.random() * this._data[0].wellenMonsterBornTime.length)] * 1000;
    };
    return Game_JDKL_CommonConfig;
}());
exports.default = Game_JDKL_CommonConfig;
},{"../AppConfig":2}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var LevelConfigData = /** @class */ (function () {
    function LevelConfigData() {
        this.levelId = 0;
        this.reward = 0;
        this.monsterConfig = new Array();
        this.bossIcon = "";
    }
    return LevelConfigData;
}());
exports.LevelConfigData = LevelConfigData;
var LevelConfig = /** @class */ (function () {
    function LevelConfig() {
        this._data = new Array();
    }
    LevelConfig.getInstance = function () {
        if (null == LevelConfig._instance) {
            LevelConfig._instance = LevelConfig.load();
        }
        return LevelConfig._instance;
    };
    LevelConfig.load = function () {
        var config = new LevelConfig();
        var json = Laya.loader.getRes(AppConfig_1.default.Res_JDKL_Server + "/json/levelConfig.json");
        if (json) {
            for (var i = 0; i < json.length; ++i) {
                var row = json[i];
                var rowData = new LevelConfigData();
                rowData.levelId = Number(row["levelId"]);
                rowData.reward = Number(row["reward"]);
                rowData.monsterConfig = row.monsterConfig;
                rowData.bossIcon = row["bossIcon"];
                config._data.push(rowData);
            }
        }
        return config;
    };
    LevelConfig.prototype.getLevelConfigDataByLevelNum = function (levelNum) {
        for (var i = 0; i < this._data.length; ++i) {
            var d = this._data[i];
            if (d.levelId == levelNum) {
                return d;
            }
        }
        return null;
    };
    LevelConfig.prototype.getLevelCount = function () {
        return this._data.length;
    };
    return LevelConfig;
}());
exports.default = LevelConfig;
},{"../AppConfig":2}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var MonsterConfigData = /** @class */ (function () {
    function MonsterConfigData() {
        this.monsterName = "";
        this.monsterBasicHp = 0;
        this.monsterBasicDamage = 0;
    }
    return MonsterConfigData;
}());
exports.MonsterConfigData = MonsterConfigData;
var MonsterConfig = /** @class */ (function () {
    function MonsterConfig() {
        this._data = new Array();
    }
    MonsterConfig.getInstance = function () {
        if (null == MonsterConfig._instance) {
            MonsterConfig._instance = MonsterConfig.load();
        }
        return MonsterConfig._instance;
    };
    MonsterConfig.load = function () {
        var config = new MonsterConfig();
        var json = Laya.loader.getRes(AppConfig_1.default.Res_JDKL_Server + "/json/monsterConfig.json");
        if (json) {
            for (var i = 0; i < json.length; ++i) {
                var row = json[i];
                var rowData = new MonsterConfigData();
                rowData.monsterName = row["monsterName"];
                rowData.monsterBasicHp = Number(row["monsterBasicHp"]);
                rowData.monsterBasicDamage = Number(row["monsterBasicDamage"]);
                config._data.push(rowData);
            }
        }
        return config;
    };
    MonsterConfig.prototype.getMonsterConfigDataByName = function (name) {
        for (var i = 0; i < this._data.length; ++i) {
            var d = this._data[i];
            if (d.monsterName == name) {
                return d;
            }
        }
        return null;
    };
    return MonsterConfig;
}());
exports.default = MonsterConfig;
},{"../AppConfig":2}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var WeaponConfigData = /** @class */ (function () {
    function WeaponConfigData() {
        this.weaponId = 0;
        this.weaponName = "";
        this.weaponDamage = [];
        this.weaponUpLevel = [];
        this.gunSound = "";
    }
    return WeaponConfigData;
}());
exports.WeaponConfigData = WeaponConfigData;
var WeaponConfig = /** @class */ (function () {
    function WeaponConfig() {
        this._data = new Array();
    }
    WeaponConfig.getInstance = function () {
        if (null == WeaponConfig._instance) {
            WeaponConfig._instance = WeaponConfig.load();
        }
        return WeaponConfig._instance;
    };
    WeaponConfig.load = function () {
        var config = new WeaponConfig();
        var json = Laya.loader.getRes(AppConfig_1.default.Res_JDKL_Server + "/json/weaponConfig.json");
        for (var i = 0; i < json.length; ++i) {
            var row = json[i];
            var rowData = new WeaponConfigData();
            rowData.weaponId = row.weaponId;
            rowData.weaponName = row.weaponName;
            rowData.weaponDamage = row.weaponDamage;
            rowData.weaponUpLevel = row.weaponUpLevel;
            rowData.gunSound = row.gunSound;
            config._data.push(rowData);
        }
        return config;
    };
    WeaponConfig.prototype.getWeaponConfigDataById = function (id) {
        for (var i = 0; i < this._data.length; ++i) {
            var data = this._data[i];
            if (data.weaponId == id) {
                return data;
            }
        }
    };
    Object.defineProperty(WeaponConfig.prototype, "AllIds", {
        get: function () {
            var temp = [];
            for (var i = 0; i < this._data.length; ++i) {
                var data = this._data[i];
                temp.push(data.weaponId);
            }
            return temp;
        },
        enumerable: true,
        configurable: true
    });
    WeaponConfig.prototype.getWeaponMaxLevelById = function (id) {
        var maxLevel = 0;
        var data = this.getWeaponConfigDataById(id);
        if (null != data) {
            maxLevel = data.weaponUpLevel.length;
        }
        return maxLevel;
    };
    return WeaponConfig;
}());
exports.default = WeaponConfig;
},{"../AppConfig":2}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Event_JDKL_Def;
(function (Event_JDKL_Def) {
    Event_JDKL_Def[Event_JDKL_Def["None"] = 0] = "None";
    Event_JDKL_Def[Event_JDKL_Def["App_CloseFirst_JDKL_LoadingView"] = 500] = "App_CloseFirst_JDKL_LoadingView";
    Event_JDKL_Def[Event_JDKL_Def["AD_On_JDKL_ShareAdFail"] = 501] = "AD_On_JDKL_ShareAdFail";
    //当界面打开
    Event_JDKL_Def[Event_JDKL_Def["Game_OnView_JDKL_Open"] = 600] = "Game_OnView_JDKL_Open";
    //当界面关闭
    Event_JDKL_Def[Event_JDKL_Def["Game_OnView_JDKL_Close"] = 601] = "Game_OnView_JDKL_Close";
    //当玩家金币变动
    Event_JDKL_Def[Event_JDKL_Def["Game_OnUserMoney_JDKL_Change"] = 701] = "Game_OnUserMoney_JDKL_Change";
    //当玩家钻石变动
    Event_JDKL_Def[Event_JDKL_Def["Game_OnUserCrystal_JDKL_Change"] = 702] = "Game_OnUserCrystal_JDKL_Change";
    //当关卡开始
    Event_JDKL_Def[Event_JDKL_Def["Game_OnLevel_JDKL_Start"] = 1000] = "Game_OnLevel_JDKL_Start";
    //当关卡结束
    Event_JDKL_Def[Event_JDKL_Def["Game_OnLevel_JDKL_Complate"] = 1001] = "Game_OnLevel_JDKL_Complate";
    //误点预加载完毕
    Event_JDKL_Def[Event_JDKL_Def["AD_WudianBanner_Load_JDKL_Complete"] = 2217] = "AD_WudianBanner_Load_JDKL_Complete";
    //显示误点Banner
    Event_JDKL_Def[Event_JDKL_Def["AD_Wudian_JDKL_Banner_Show"] = 2218] = "AD_Wudian_JDKL_Banner_Show";
    //影藏误点Banner
    Event_JDKL_Def[Event_JDKL_Def["AD_Wudian_JDKL_Banner_Hide"] = 2219] = "AD_Wudian_JDKL_Banner_Hide";
    //预加载Banner
    Event_JDKL_Def[Event_JDKL_Def["AD_Wudian_JDKL_Banner_PreLoad"] = 2220] = "AD_Wudian_JDKL_Banner_PreLoad";
    //Tips:在这条添加定义你自己需要的事件，从10000号开始。记得分段分类管理不同类型事件。如果事件有传递参数 "必须" 在事件后面用注释写明事件参数结构。
    Event_JDKL_Def[Event_JDKL_Def["Game_OnMoveInput"] = 10000] = "Game_OnMoveInput";
    Event_JDKL_Def[Event_JDKL_Def["Game_OnMoveInputRelease"] = 10001] = "Game_OnMoveInputRelease";
    Event_JDKL_Def[Event_JDKL_Def["Game_OnWeaponUnlock"] = 10100] = "Game_OnWeaponUnlock";
    Event_JDKL_Def[Event_JDKL_Def["Game_OnWeaponLevelChange"] = 10101] = "Game_OnWeaponLevelChange";
    Event_JDKL_Def[Event_JDKL_Def["Game_OnEquipWeaponChange"] = 10102] = "Game_OnEquipWeaponChange";
    Event_JDKL_Def[Event_JDKL_Def["Game_OnEnemyDead"] = 10200] = "Game_OnEnemyDead";
    Event_JDKL_Def[Event_JDKL_Def["Game_OnPlayerDead"] = 10201] = "Game_OnPlayerDead";
    Event_JDKL_Def[Event_JDKL_Def["Game_OnLevelProcessChange"] = 10202] = "Game_OnLevelProcessChange";
    Event_JDKL_Def[Event_JDKL_Def["Game_OnPlayerHpChange"] = 10203] = "Game_OnPlayerHpChange";
    Event_JDKL_Def[Event_JDKL_Def["Game_OnGunFireCheckSomething"] = 10204] = "Game_OnGunFireCheckSomething";
    Event_JDKL_Def[Event_JDKL_Def["Game_OnPlayerRevive"] = 10205] = "Game_OnPlayerRevive";
    Event_JDKL_Def[Event_JDKL_Def["Game_OnEnemyHpChange"] = 10206] = "Game_OnEnemyHpChange";
    Event_JDKL_Def[Event_JDKL_Def["Game_OnEnemyActive"] = 10207] = "Game_OnEnemyActive";
    Event_JDKL_Def[Event_JDKL_Def["Game_OnHeanderShoot"] = 10208] = "Game_OnHeanderShoot";
    Event_JDKL_Def[Event_JDKL_Def["Game_EnterPowerState"] = 10209] = "Game_EnterPowerState";
    Event_JDKL_Def[Event_JDKL_Def["Game_UI_UpdateLevelNum"] = 20000] = "Game_UI_UpdateLevelNum";
})(Event_JDKL_Def = exports.Event_JDKL_Def || (exports.Event_JDKL_Def = {}));
},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventDispatcher = laya.events.EventDispatcher;
var Event_JDKL_Mgr = /** @class */ (function (_super) {
    __extends(Event_JDKL_Mgr, _super);
    function Event_JDKL_Mgr() {
        return _super.call(this) || this;
    }
    ;
    //广播事件
    Event_JDKL_Mgr.prototype.dispatch_JDKL_ = function (InName, agv) {
        Event_JDKL_Mgr.eventDispatcher.event(InName, agv);
    };
    //注册事件
    Event_JDKL_Mgr.prototype.reg_JDKL_Evemt = function (InName, caller, listener, arg) {
        Event_JDKL_Mgr.eventDispatcher.on(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //注册单次事件
    Event_JDKL_Mgr.prototype.reg_JDKL_Once_JDKL_Event = function (InName, caller, listener, arg) {
        Event_JDKL_Mgr.eventDispatcher.once(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //移除事件注册
    Event_JDKL_Mgr.prototype.remove_JDKL_Event = function (InName, caller, listener, arg) {
        Event_JDKL_Mgr.eventDispatcher.off(InName, caller, listener);
    };
    Event_JDKL_Mgr.eventDispatcher = new EventDispatcher();
    Event_JDKL_Mgr.instance = new Event_JDKL_Mgr();
    return Event_JDKL_Mgr;
}(EventDispatcher));
exports.default = Event_JDKL_Mgr;
},{}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameMgr_1 = require("./Mgr/GameMgr");
var ViewAutoScaleByW_1 = require("./View/Tools/ViewAutoScaleByW");
var MiddleAnchor_1 = require("./View/Tools/MiddleAnchor");
var ViewAutoScale_1 = require("./View/Tools/ViewAutoScale");
var TopZone_1 = require("./View/TopZone");
var Input_1 = require("./View/BattleView/Input");
var BattleView_1 = require("./View/BattleView/BattleView");
var EnemyTag_1 = require("./View/BattleView/EnemyTag");
var LoopAdBox_1 = require("./ShareAd/View/LoopAdBox");
var HorizontalLoopAdView_1 = require("./ShareAd/View/HorizontalLoopAdView");
var TwinkleSprite_1 = require("./View/TwinkleSprite");
var ClickGetPrize_1 = require("./View/ClickGetPrize/ClickGetPrize");
var LoopAdView_1 = require("./ShareAd/View/LoopAdView");
var ButtonAnim_1 = require("./View/ButtonAnim");
var BannerAdView_1 = require("./ShareAd/View/BannerAdView");
var GameOverView_1 = require("./View/GameOverView/GameOverView");
var GameOverRewardView_1 = require("./View/GameOverRewardView/GameOverRewardView");
var PopAdView_1 = require("./ShareAd/View/PopAdView");
var LeftPopAdView_1 = require("./View/LeftPopAdView/LeftPopAdView");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var LevelBox_1 = require("./View/MainView/LevelBox");
var CrystalTips_1 = require("./View/Common/CrystalTips");
var ScaleBreathingAni_1 = require("./View/ScaleBreathingAni");
var MySingleAdView_1 = require("./ShareAd/View/MySingleAdView");
var SingleAniADView_1 = require("./ShareAd/View/SingleAniADView");
var UniversalBottomZone_1 = require("./View/Common/UniversalBottomZone");
var MainView_1 = require("./View/MainView/MainView");
var MoreGameView_1 = require("./View/MoreGameView/MoreGameView");
var ReviveView_1 = require("./View/ReviveView/ReviveView");
var TipsView_1 = require("./View/TipsView/TipsView");
var WeaponBox_1 = require("./View/WeaponView/WeaponBox");
var WeaponView_1 = require("./View/WeaponView/WeaponView");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("Mgr/GameMgr.ts", GameMgr_1.default);
        reg("View/Tools/ViewAutoScaleByW.ts", ViewAutoScaleByW_1.default);
        reg("View/Tools/MiddleAnchor.ts", MiddleAnchor_1.default);
        reg("View/Tools/ViewAutoScale.ts", ViewAutoScale_1.default);
        reg("View/TopZone.ts", TopZone_1.default);
        reg("View/BattleView/Input.ts", Input_1.default);
        reg("View/BattleView/BattleView.ts", BattleView_1.default);
        reg("View/BattleView/EnemyTag.ts", EnemyTag_1.default);
        reg("ShareAd/View/LoopAdBox.ts", LoopAdBox_1.default);
        reg("ShareAd/View/HorizontalLoopAdView.ts", HorizontalLoopAdView_1.default);
        reg("View/TwinkleSprite.ts", TwinkleSprite_1.default);
        reg("View/ClickGetPrize/ClickGetPrize.ts", ClickGetPrize_1.default);
        reg("ShareAd/View/LoopAdView.ts", LoopAdView_1.default);
        reg("View/ButtonAnim.ts", ButtonAnim_1.default);
        reg("ShareAd/View/BannerAdView.ts", BannerAdView_1.default);
        reg("View/GameOverView/GameOverView.ts", GameOverView_1.default);
        reg("View/GameOverRewardView/GameOverRewardView.ts", GameOverRewardView_1.default);
        reg("ShareAd/View/PopAdView.ts", PopAdView_1.default);
        reg("View/LeftPopAdView/LeftPopAdView.ts", LeftPopAdView_1.default);
        reg("View/LoadingView/LoadingView.ts", LoadingView_1.default);
        reg("View/MainView/LevelBox.ts", LevelBox_1.default);
        reg("View/Common/CrystalTips.ts", CrystalTips_1.default);
        reg("View/ScaleBreathingAni.ts", ScaleBreathingAni_1.default);
        reg("ShareAd/View/MySingleAdView.ts", MySingleAdView_1.default);
        reg("ShareAd/View/SingleAniADView.ts", SingleAniADView_1.default);
        reg("View/Common/UniversalBottomZone.ts", UniversalBottomZone_1.default);
        reg("View/MainView/MainView.ts", MainView_1.default);
        reg("View/MoreGameView/MoreGameView.ts", MoreGameView_1.default);
        reg("View/ReviveView/ReviveView.ts", ReviveView_1.default);
        reg("View/TipsView/TipsView.ts", TipsView_1.default);
        reg("View/WeaponView/WeaponBox.ts", WeaponBox_1.default);
        reg("View/WeaponView/WeaponView.ts", WeaponView_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "GameMain.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = true;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./Mgr/GameMgr":39,"./ShareAd/View/BannerAdView":51,"./ShareAd/View/HorizontalLoopAdView":52,"./ShareAd/View/LoopAdBox":53,"./ShareAd/View/LoopAdView":54,"./ShareAd/View/MySingleAdView":55,"./ShareAd/View/PopAdView":56,"./ShareAd/View/SingleAniADView":58,"./View/BattleView/BattleView":62,"./View/BattleView/EnemyTag":63,"./View/BattleView/Input":64,"./View/ButtonAnim":65,"./View/ClickGetPrize/ClickGetPrize":66,"./View/Common/CrystalTips":67,"./View/Common/UniversalBottomZone":68,"./View/GameOverRewardView/GameOverRewardView":69,"./View/GameOverView/GameOverView":70,"./View/LeftPopAdView/LeftPopAdView":71,"./View/LoadingView/LoadingView":72,"./View/MainView/LevelBox":73,"./View/MainView/MainView":74,"./View/MoreGameView/MoreGameView":75,"./View/ReviveView/ReviveView":76,"./View/ScaleBreathingAni":77,"./View/TipsView/TipsView":78,"./View/Tools/MiddleAnchor":79,"./View/Tools/ViewAutoScale":80,"./View/Tools/ViewAutoScaleByW":81,"./View/TopZone":82,"./View/TwinkleSprite":83,"./View/WeaponView/WeaponBox":85,"./View/WeaponView/WeaponView":86}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Damage = /** @class */ (function () {
    function Damage(damageValue) {
        this.value = 0;
        this.value = damageValue;
    }
    return Damage;
}());
exports.default = Damage;
},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Effect = /** @class */ (function (_super) {
    __extends(Effect, _super);
    function Effect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._ownerSprite3d = null;
        _this._type = null;
        _this._mgr = null;
        return _this;
    }
    Object.defineProperty(Effect.prototype, "Sprite3D", {
        get: function () {
            return this._ownerSprite3d;
        },
        enumerable: true,
        configurable: true
    });
    Effect.prototype.OnInit = function (type, mgr) {
        this._type = type;
        this._mgr = mgr;
        this._ownerSprite3d = this.owner;
    };
    Effect.prototype.getOwnerSprite = function () {
        return this._ownerSprite3d;
    };
    Effect.prototype.setDestroyTime = function (time) {
        var self = this;
        Laya.timer.once(time, this, function () {
            self.recover();
        }, null, true);
    };
    Effect.prototype.recover = function () {
        Laya.timer.clearAll(this);
        this._mgr.Pool.recover(this);
    };
    Effect.prototype.setPos = function (x, y, z) {
        if (null == this._ownerSprite3d || this._ownerSprite3d.destroyed)
            return;
        this._ownerSprite3d.transform.localPositionX = x ? x : this._ownerSprite3d.transform.position.x;
        this._ownerSprite3d.transform.localPositionY = y ? y : this._ownerSprite3d.transform.position.y;
        this._ownerSprite3d.transform.localPositionZ = z ? z : this._ownerSprite3d.transform.position.z;
    };
    Effect.prototype.setPosByV3 = function (v3) {
        if (null == this._ownerSprite3d || this._ownerSprite3d.destroyed)
            return;
        this._ownerSprite3d.transform.localPositionX = v3.x;
        this._ownerSprite3d.transform.localPositionY = v3.y;
        this._ownerSprite3d.transform.localPositionZ = v3.z;
    };
    Effect.prototype.OP_Key = function () {
        return this._type;
    };
    Effect.prototype.OP_Init = function () {
        this._ownerSprite3d.active = true;
    };
    Effect.prototype.OP_Reset = function () {
        this._ownerSprite3d.active = false;
    };
    Effect.prototype.OP_OnClear = function () {
    };
    Effect.prototype.onDestroy = function () {
        Laya.timer.clearAll(this);
    };
    return Effect;
}(Laya.Script));
exports.default = Effect;
},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Effect_1 = require("./Effect");
var ObjPool_1 = require("../../ObjPool/ObjPool");
var EffectMgr = /** @class */ (function () {
    function EffectMgr(level, effctRoot) {
        this.Pool = new ObjPool_1.default();
        this._level = level;
        this._effectRoot = effctRoot;
    }
    EffectMgr.prototype.playEffect = function (type, time) {
        if (null == this._effectRoot)
            return null;
        var effect = this.Pool.get(type);
        if (null == effect) {
            var name = type;
            var template = null;
            for (var i = 0; i < this._effectRoot.numChildren; ++i) {
                var child = this._effectRoot.getChildAt(i);
                if (child.name == name) {
                    template = child;
                    break;
                }
            }
            if (template) {
                var effObj = Laya.Sprite3D.instantiate(template, this._level.owner);
                effObj.transform.localPosition = new Laya.Vector3(0, 0, 0);
                effect = effObj.addComponent(Effect_1.default);
                effect.OnInit(type, this);
            }
        }
        if (effect) {
            time = null == time ? 2000 : time;
            effect.setDestroyTime(time);
        }
        return effect;
    };
    return EffectMgr;
}());
exports.default = EffectMgr;
},{"../../ObjPool/ObjPool":48,"./Effect":13}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EffectType;
(function (EffectType) {
    EffectType["None"] = "";
    EffectType["baozha"] = "baozha";
    EffectType["daji"] = "daji";
    EffectType["danke"] = "danke";
    EffectType["qiang"] = "qiang";
    EffectType["chuanson"] = "chuanson";
    EffectType["baozha_fly"] = "baozha_fly";
})(EffectType = exports.EffectType || (exports.EffectType = {}));
},{}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UnitType_1 = require("./Unit/UnitType");
var GameConfig_1 = require("../Config/GameConfig");
var MonsterConfig_1 = require("../Config/MonsterConfig");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var EffectType_1 = require("./Effect/EffectType");
var EnemyNames;
(function (EnemyNames) {
    EnemyNames["\u666E\u901A\u5C0F\u602A"] = "\u666E\u901A\u5C0F\u602A";
    EnemyNames["\u76FE\u724C\u5C0F\u602A"] = "\u76FE\u724C\u5C0F\u602A";
    EnemyNames["\u4F1E\u5175\u5C0F\u602A"] = "\u4F1E\u5175\u5C0F\u602A";
    EnemyNames["\u9738\u738B\u9F99"] = "\u9738\u738B\u9F99";
    EnemyNames["\u50F5\u5C38\u738B"] = "\u50F5\u5C38\u738B";
})(EnemyNames = exports.EnemyNames || (exports.EnemyNames = {}));
var EnemyMgr = /** @class */ (function () {
    function EnemyMgr(level) {
        this._level = null;
        this._data = null;
        this._runing = false;
        this._wheelCounter = 0;
        this._curWheelEnemys = new Array();
        this._leftEnemyCount = 0;
        this._totalEnemyCount = 0;
        this._level = level;
    }
    Object.defineProperty(EnemyMgr.prototype, "Process", {
        get: function () {
            if (0 == this._totalEnemyCount)
                return 0;
            return 1 - (this._leftEnemyCount / this._totalEnemyCount);
        },
        enumerable: true,
        configurable: true
    });
    EnemyMgr.prototype.start = function (data) {
        this._data = data;
        this._runing = true;
        this._totalEnemyCount = 0;
        for (var i = 0; i < this._data.monsterConfig.length; ++i) {
            var arry = this._data.monsterConfig[i];
            for (var j = 0; j < arry.length; ++j) {
                this._totalEnemyCount += 1;
            }
        }
        this._leftEnemyCount = this._totalEnemyCount;
        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnLevelProcessChange, { process: this.Process });
    };
    EnemyMgr.prototype.reset = function () {
        this._data = null;
        this._runing = false;
    };
    EnemyMgr.prototype.run = function () {
        for (var i = 0; i < this._curWheelEnemys.length; ++i) {
            if (this._curWheelEnemys[i].isDead) {
                this._curWheelEnemys.splice(i, 1);
                --i;
                this._leftEnemyCount -= 1;
                EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnLevelProcessChange, { process: this.Process });
            }
        }
        if (!this._runing || null == this._data || this._wheelCounter >= this._data.monsterConfig.length)
            return;
        if (this._curWheelEnemys.length <= 0) {
            var wheelArray = this._data.monsterConfig[this._wheelCounter];
            if (null != wheelArray) {
                var nextWheelTime = GameConfig_1.default.get_JDKL_Instance().getWellenMonsterBornTime();
                var _loop_1 = function (i_1) {
                    var enemyName = wheelArray[i_1];
                    var enemy = this_1.createEnemy(enemyName);
                    enemy.transform.position = new Laya.Vector3(9999, 0, 9999);
                    enemy.Sprite3D.active = false;
                    this_1._curWheelEnemys.push(enemy);
                    var time = GameConfig_1.default.get_JDKL_Instance().getSingleMonsterBornTime();
                    var self_1 = this_1;
                    Laya.timer.once(time + nextWheelTime, enemy, function () {
                        enemy.Sprite3D.active = true;
                        var agent = self_1._level.NavigationMgr.createAgent(enemy.Sprite3D);
                        if (enemyName == EnemyNames.伞兵小怪) {
                            agent.setPath(self_1._level.NavigationMgr.getRandomAirborneRoadPath());
                        }
                        else if (enemyName == EnemyNames.霸王龙 || enemyName == EnemyNames.僵尸王) {
                            agent.setPath(self_1._level.NavigationMgr.BossRoadPath);
                        }
                        else {
                            var path = self_1._level.NavigationMgr.getRandomNormalRoadPath();
                            agent.setPath(path);
                        }
                        var effect = self_1._level.EffectMgr.playEffect(EffectType_1.EffectType.chuanson, 1250);
                        effect.setPosByV3(enemy.Sprite3D.transform.position);
                        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnEnemyActive, { enemy: enemy });
                    }, null, false);
                };
                var this_1 = this;
                for (var i_1 = 0; i_1 < wheelArray.length; ++i_1) {
                    _loop_1(i_1);
                }
                ++this._wheelCounter;
            }
        }
    };
    EnemyMgr.prototype.createEnemy = function (enemyName) {
        var enemy = null;
        switch (enemyName) {
            case EnemyNames.普通小怪:
                enemy = this._level.addUnit(UnitType_1.UnitType.Enemy);
                break;
            case EnemyNames.盾牌小怪:
                enemy = this._level.addUnit(UnitType_1.UnitType.ShieldEnemy);
                break;
            case EnemyNames.伞兵小怪:
                enemy = this._level.addUnit(UnitType_1.UnitType.AirborneEnemy);
                break;
            case EnemyNames.霸王龙:
                enemy = this._level.addUnit(UnitType_1.UnitType.DinosaurBoss);
                break;
            case EnemyNames.僵尸王:
                enemy = this._level.addUnit(UnitType_1.UnitType.ZombieKing);
                break;
            default:
                enemy = this._level.addUnit(UnitType_1.UnitType.Enemy);
                break;
        }
        var monsterConfigData = MonsterConfig_1.default.getInstance().getMonsterConfigDataByName(enemyName);
        enemy.initEnemy(monsterConfigData);
        return enemy;
    };
    return EnemyMgr;
}());
exports.default = EnemyMgr;
},{"../Config/GameConfig":5,"../Config/MonsterConfig":7,"../Event/EventDef":9,"../Event/EventMgr":10,"./Effect/EffectType":15,"./Unit/UnitType":36}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Damage_1 = require("../Damage");
var EffectType_1 = require("../Effect/EffectType");
var Bullet = /** @class */ (function (_super) {
    __extends(Bullet, _super);
    function Bullet() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._sprite3D = null;
        _this._gun = null;
        _this._forward = new Laya.Vector3();
        _this._lastPos = new Laya.Vector3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);
        _this._hitResult = new Laya.HitResult();
        return _this;
    }
    Object.defineProperty(Bullet.prototype, "Sprite3D", {
        get: function () {
            return this._sprite3D;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Bullet.prototype, "Gun", {
        get: function () {
            return this._gun;
        },
        enumerable: true,
        configurable: true
    });
    Bullet.prototype.onAwake = function () {
        this._sprite3D = this.owner;
    };
    Bullet.prototype.init = function (gun) {
        this._gun = gun;
    };
    Bullet.prototype.onUpdate = function () {
        if (this._sprite3D.active) {
            this._sprite3D.transform.getForward(this._forward);
            this._lastPos.x = this._sprite3D.transform.position.x;
            this._lastPos.y = this._sprite3D.transform.position.y;
            this._lastPos.z = this._sprite3D.transform.position.z;
            this._sprite3D.transform.position = new Laya.Vector3(this._sprite3D.transform.position.x + this._forward.x * Bullet.FlySpeed * Math.min(Laya.timer.delta, 50) / 1000, this._sprite3D.transform.position.y + this._forward.y * Bullet.FlySpeed * Math.min(Laya.timer.delta, 50) / 1000, this._sprite3D.transform.position.z + this._forward.z * Bullet.FlySpeed * Math.min(Laya.timer.delta, 50) / 1000);
        }
    };
    Bullet.prototype.onLateUpdate = function () {
        if (this._sprite3D.active
            && this._lastPos.x != Number.MAX_VALUE
            && this._lastPos.y != Number.MAX_VALUE
            && this._lastPos.z != Number.MAX_VALUE) {
            this.hitCheck();
        }
    };
    Bullet.prototype.hitCheck = function () {
        var from = this._lastPos;
        var to = this.Sprite3D.transform.position;
        this._hitResult.succeeded = false;
        this.Gun.Level.Scene3D.physicsSimulation.raycastFromTo(from, to, this._hitResult);
        if (this._hitResult.succeeded) {
            var sp3d = this._hitResult.collider.owner;
            var coms = sp3d._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (null != element.onHit && typeof (element.onHit) == "function") {
                        element.onHit(new Damage_1.default(this.Gun.getDamage()));
                        this._gun.recoverBullet(this);
                        var effect = this._gun.Level.EffectMgr.playEffect(EffectType_1.EffectType.daji, 500);
                        effect.setPosByV3(this._hitResult.point);
                        return;
                    }
                }
            }
        }
    };
    Bullet.prototype.OP_Key = function () {
    };
    Bullet.prototype.OP_Init = function () {
        var _this = this;
        this._sprite3D.active = true;
        var self = this;
        Laya.timer.once(1000, this, function () {
            self.Gun.recoverBullet(_this);
        });
        this._lastPos.x = Number.MAX_VALUE;
        this._lastPos.y = Number.MAX_VALUE;
        this._lastPos.z = Number.MAX_VALUE;
    };
    Bullet.prototype.OP_Reset = function () {
        this._sprite3D.active = false;
        Laya.timer.clearAll(this);
        this._lastPos.x = Number.MAX_VALUE;
        this._lastPos.y = Number.MAX_VALUE;
        this._lastPos.z = Number.MAX_VALUE;
    };
    Bullet.prototype.OP_OnClear = function () {
        this._sprite3D.destroy(true);
    };
    Bullet.FlySpeed = 50;
    return Bullet;
}(Laya.Script3D));
exports.default = Bullet;
},{"../Damage":12,"../Effect/EffectType":15}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var ObjPool_1 = require("../../ObjPool/ObjPool");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var Utilit_1 = require("../../Utilit");
var GunRunTimeData_1 = require("./GunRunTimeData");
var GameConfig_1 = require("../../Config/GameConfig");
var EffectType_1 = require("../Effect/EffectType");
var Damage_1 = require("../Damage");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var GunHitData = /** @class */ (function () {
    function GunHitData(obj, point) {
        this.CanHitObj = null;
        this.HitPoint = null;
        this.CanHitObj = obj;
        this.HitPoint = point;
    }
    return GunHitData;
}());
exports.GunHitData = GunHitData;
var Gun = /** @class */ (function (_super) {
    __extends(Gun, _super);
    function Gun() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._redLineObj = null;
        _this._throwPoint = null;
        _this._level = null;
        _this._pool = new ObjPool_1.default();
        _this._minFireCycle = 200;
        _this._moveSpeed = 180;
        _this._lastFireTime = 0;
        _this._fireCheckHitResult = new Laya.HitResult();
        _this._targetAngle = new Laya.Vector2();
        _this._forward = new Laya.Vector3();
        _this._ray = new Laya.Ray(new Laya.Vector3(), new Laya.Vector3());
        _this._gunRunTimeData = null;
        _this._hp = 0;
        _this._maxHp = 0;
        _this._powerStateLeftTime = 0;
        return _this;
    }
    Object.defineProperty(Gun.prototype, "Level", {
        get: function () {
            return this._level;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Gun.prototype, "GunRuntimeData", {
        get: function () {
            return this._gunRunTimeData;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Gun.prototype, "Hp", {
        get: function () {
            return this._hp;
        },
        set: function (value) {
            var last = this._hp;
            this._hp = value;
            EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnPlayerHpChange, {
                last: last,
                cur: this._hp,
                max: this._maxHp
            });
            if (this._hp <= 0) {
                this._hp = 0;
                if (last > 0) {
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnPlayerDead, this);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Gun.prototype, "isDead", {
        get: function () {
            return this._hp <= 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Gun.prototype, "MaxHp", {
        get: function () {
            return this._maxHp;
        },
        enumerable: true,
        configurable: true
    });
    Gun.prototype.onAwake = function () {
        this._guns = this.owner.getChildByName("Guns");
        //this._pool.setCreateFunc(this,this.createBullet);
    };
    Gun.prototype.onEnable = function () {
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnMoveInput, this, this.onMove);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnMoveInputRelease, this, this.onMoveStop);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnPlayerHpChange, this, this.onPlayerHpChange);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_EnterPowerState, this, this.onEnterPowerState);
    };
    Gun.prototype.onDisable = function () {
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnMoveInput, this, this.onMove);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnMoveInputRelease, this, this.onMoveStop);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnPlayerHpChange, this, this.onPlayerHpChange);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_EnterPowerState, this, this.onEnterPowerState);
    };
    Gun.prototype.onUpdate = function () {
        this._powerStateLeftTime = Math.max(0, this._powerStateLeftTime - Laya.timer.delta);
        var roateSpeed = 5000;
        if (this._targetAngle.x == 0 && this._targetAngle.y == 0) {
            roateSpeed = 500;
        }
        if (this.isDead) {
            this._targetAngle.x = -45;
            this._targetAngle.y = 0;
        }
        else {
            this._targetAngle.x = Utilit_1.default.Clamp_JDKL_(this._targetAngle.x, -20, 30);
            this._targetAngle.y = Utilit_1.default.Clamp_JDKL_(this._targetAngle.y, -30, 35);
        }
        this._guns.transform.localRotationEulerX = //this._targetAngle.x;
            Utilit_1.default.Clamp_JDKL_(Utilit_1.default.lerp_JDKL_EulerAngle_JDKL_Free(this._guns.transform.localRotationEulerX, this._targetAngle.x, Laya.timer.delta / 1000 * roateSpeed), -20, 30);
        this._guns.transform.localRotationEulerY = //this._targetAngle.y;
            Utilit_1.default.Clamp_JDKL_(Utilit_1.default.lerp_JDKL_EulerAngle_JDKL_Free(this._guns.transform.localRotationEulerY, this._targetAngle.y, Laya.timer.delta / 1000 * roateSpeed), -30, 35);
        if (!this.isDead) {
            var hitData = this.fireCheck();
            if (null != hitData) {
                if (null != hitData.CanHitObj) {
                    this.shoot(hitData);
                }
            }
        }
    };
    Gun.prototype.init = function (level) {
        this._level = level;
        var gameConfigData = GameConfig_1.default.get_JDKL_Instance().getGameConfigData();
        this._hp = gameConfigData.playerBasicHp + this._level.LevelConfigData.levelId * gameConfigData.playerHpFilter;
        this._maxHp = this._hp;
    };
    Gun.prototype.setGun = function (config, weaponData) {
        this._gunRunTimeData = new GunRunTimeData_1.default(config, weaponData);
        for (var i = 0; i < this._guns.numChildren; ++i) {
            var gunObj = this._guns.getChildAt(i);
            gunObj.active = gunObj.name == config.weaponName;
            if (gunObj.active) {
                this._firePoint = gunObj.getChildByName("FirePoint");
                this._redLineObj = gunObj.getChildByName("RenLine");
                this._redLineObj.transform.localScaleZ = 100;
                this._throwPoint = gunObj.getChildByName("ThrowPoint");
            }
        }
    };
    Gun.prototype.shoot = function (data) {
        if (Laya.timer.currTimer - this._lastFireTime < this._minFireCycle)
            return;
        this._lastFireTime = Laya.timer.currTimer;
        data.CanHitObj.onHit(new Damage_1.default(this.getDamage()));
        // var bullet : Bullet  = this._pool.get() as Bullet;
        // bullet.Sprite3D.transform.position = this._firePoint.transform.position.clone();
        // bullet.Sprite3D.transform.rotationEuler = this._firePoint.transform.rotationEuler.clone();
        var effect = this._level.EffectMgr.playEffect(EffectType_1.EffectType.qiang, 500);
        effect.Sprite3D.transform.position = this._firePoint.transform.position.clone();
        effect.Sprite3D.transform.rotationEuler = this._firePoint.transform.rotationEuler.clone();
        var hitEffect = this._level.EffectMgr.playEffect(EffectType_1.EffectType.daji, 500);
        hitEffect.setPosByV3(data.HitPoint);
        var dankeEffect = this._level.EffectMgr.playEffect(EffectType_1.EffectType.danke, 1200);
        dankeEffect.setPosByV3(this._throwPoint.transform.position);
        SoundMgr_1.default.instance.play_JDKL_Sound(this._gunRunTimeData.weaponConfigData.gunSound);
    };
    Gun.prototype.createBullet = function () {
        var prefabsRoot = this._level.PrefabsRoot;
        var bulletTemplate = prefabsRoot.getChildByName("Bullet");
        var ins = Laya.Sprite3D.instantiate(bulletTemplate, this._level.Sprite3D);
        var bullet = ins.addComponent(Bullet_1.default);
        bullet.init(this);
        bullet.Sprite3D.transform.position = this._firePoint.transform.position.clone();
        bullet.OP_Init();
        return bullet;
    };
    Gun.prototype.recoverBullet = function (bullet) {
        if (bullet.Gun == this) {
            this._pool.recover(bullet);
        }
    };
    Gun.prototype.onMove = function (para) {
        var dir = para.dir;
        var dis = Laya.Vector2.scalarLength(dir);
        var scale = 0.05;
        // if(dis < 15)
        // {
        //     scale = 0.035;
        // }
        dir.x *= scale;
        dir.y *= scale;
        this._targetAngle.x -= dir.y;
        this._targetAngle.y -= dir.x;
    };
    Gun.prototype.onMoveStop = function () {
        this._targetAngle.x = 0;
        this._targetAngle.y = 0;
    };
    Gun.prototype.fireCheck = function () {
        var canHitObj = null;
        this._ray.origin.x = this._firePoint.transform.position.x;
        this._ray.origin.y = this._firePoint.transform.position.y;
        this._ray.origin.z = this._firePoint.transform.position.z;
        this._firePoint.transform.getForward(this._forward);
        Laya.Vector3.normalize(this._forward, this._forward);
        this._ray.direction.x = -this._forward.x;
        this._ray.direction.y = -this._forward.y;
        this._ray.direction.z = -this._forward.z;
        this._fireCheckHitResult.succeeded = false;
        this._level.Scene3D.physicsSimulation.rayCast(this._ray, this._fireCheckHitResult);
        if (this._fireCheckHitResult.succeeded) {
            this._redLineObj.transform.localScaleZ = Laya.Vector3.distance(this._fireCheckHitResult.point, this._ray.origin);
            var sp3d = this._fireCheckHitResult.collider.owner;
            var coms = sp3d._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (null != element.onHit && typeof (element.onHit) == "function") {
                        canHitObj = element;
                        break;
                    }
                }
            }
            var hitData = new GunHitData(canHitObj, this._fireCheckHitResult.point.clone());
            EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnGunFireCheckSomething, { hitData: hitData });
            return hitData;
        }
        else {
            this._redLineObj.transform.localScaleZ = 100;
        }
        return null;
    };
    Gun.prototype.getDamage = function () {
        var damageValue = this._gunRunTimeData.Damage;
        var gameConfigData = GameConfig_1.default.get_JDKL_Instance().getGameConfigData();
        if ((this.Hp / this._maxHp) <= gameConfigData.hpTrigger && this._powerStateLeftTime > 0) {
            damageValue = damageValue * gameConfigData.playerDamageStrengthen;
        }
        return damageValue;
    };
    Gun.prototype.onPlayerHpChange = function (para) {
        var last = para.last;
        var cur = para.cur;
        var max = para.max;
        if (cur < last) {
            SoundMgr_1.default.instance.play_JDKL_Sound("damaged");
        }
    };
    Gun.prototype.onEnterPowerState = function () {
        this._powerStateLeftTime = GameConfig_1.default.get_JDKL_Instance().getGameConfigData().playerDamageStrengthenTime * 1000;
    };
    return Gun;
}(Laya.Script3D));
exports.default = Gun;
},{"../../Config/GameConfig":5,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../Mgr/SoundMgr":40,"../../ObjPool/ObjPool":48,"../../Utilit":61,"../Damage":12,"../Effect/EffectType":15,"./Bullet":17,"./GunRunTimeData":19}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GunRuntimeData = /** @class */ (function () {
    function GunRuntimeData(config, weaponData) {
        this.weaponConfigData = null;
        this.weaponData = null;
        this.weaponConfigData = config;
        this.weaponData = weaponData;
    }
    Object.defineProperty(GunRuntimeData.prototype, "Damage", {
        get: function () {
            var damage = this.weaponConfigData.weaponDamage[this.weaponData.level - 1];
            return damage;
        },
        enumerable: true,
        configurable: true
    });
    return GunRuntimeData;
}());
exports.default = GunRuntimeData;
},{}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UnitFactory_1 = require("./Unit/UnitFactory");
var EffectMgr_1 = require("./Effect/EffectMgr");
var EventDef_1 = require("../Event/EventDef");
var ViewMgr_1 = require("../Mgr/ViewMgr");
var Gun_1 = require("./Gun/Gun");
var EnemyMgr_1 = require("./EnemyMgr");
var LevelConfig_1 = require("../Config/LevelConfig");
var NavigationMgr_1 = require("./Navigation/NavigationMgr");
var User_1 = require("../User/User");
var WeaponConfig_1 = require("../Config/WeaponConfig");
var EventMgr_1 = require("../Event/EventMgr");
var GameMgr_1 = require("../Mgr/GameMgr");
var SoundMgr_1 = require("../Mgr/SoundMgr");
var Level = /** @class */ (function (_super) {
    __extends(Level, _super);
    function Level() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._cameraCtrlNode = null;
        _this._units = new Array();
        _this._enemyMgr = null;
        _this._levelConfigData = null;
        _this._navigationRoot = null;
        _this._navigationMgr = null;
        _this._gun = null;
        _this._isComplate = false;
        return _this;
    }
    Object.defineProperty(Level.prototype, "Sprite3D", {
        get: function () {
            return this._ownerSprite3D;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Level.prototype, "Scene3D", {
        get: function () {
            return this._scene3d;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Level.prototype, "PrefabsRoot", {
        get: function () {
            return this._prefabsRoot;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Level.prototype, "EffectMgr", {
        get: function () {
            return this._effectMgr;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Level.prototype, "CameraCtrlPoint", {
        get: function () { return this._cameraCtrlNode; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Level.prototype, "Camera", {
        get: function () { return this._camera; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Level.prototype, "LevelConfigData", {
        get: function () {
            return this._levelConfigData;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Level.prototype, "NavigationMgr", {
        get: function () {
            return this._navigationMgr;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Level.prototype, "Gun", {
        get: function () {
            return this._gun;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Level.prototype, "IsComplate", {
        get: function () {
            return this._isComplate;
        },
        enumerable: true,
        configurable: true
    });
    Level.prototype.onAwake = function () {
        this._ownerSprite3D = this.owner;
        this._scene3d = this.owner;
        this._prefabsRoot = this._ownerSprite3D.getChildByName("Prefabs");
        var effectRoot = this._ownerSprite3D.getChildByName("Effects");
        this._unitFactory = new UnitFactory_1.default(this, this._prefabsRoot);
        this._effectMgr = new EffectMgr_1.default(this, effectRoot);
        this._camera = this._ownerSprite3D.getChildByName("Main Camera");
        this._enemyMgr = new EnemyMgr_1.default(this);
        this._navigationRoot = this.owner.getChildByName("NavigationRoot");
        this._navigationMgr = new NavigationMgr_1.default(this._navigationRoot);
    };
    Level.prototype.onEnable = function () {
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnLevelProcessChange, this, this.onLevelProcessChange);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnPlayerDead, this, this.onPlayerDead);
    };
    Level.prototype.onDisable = function () {
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnLevelProcessChange, this, this.onLevelProcessChange);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnPlayerDead, this, this.onPlayerDead);
    };
    Level.prototype.onUpdate = function () {
        if (!this._gun.isDead) {
            this._enemyMgr.run();
            this._navigationMgr.onUpdate();
        }
    };
    Level.prototype.startGame = function (data) {
        this._levelConfigData = data;
        this._enemyMgr.start(this._levelConfigData);
        this.initGun();
        this.switchGun(User_1.default.getCurWeaponData());
    };
    Level.prototype.addUnit = function (unitType, prefabName) {
        var unit = null;
        unit = this._unitFactory.create(unitType, prefabName);
        if (unit) {
            this._units.push(unit);
        }
        return unit;
    };
    Level.prototype.removeUnit = function (unit) {
        unit.Sprite3D.removeSelf();
        unit.Sprite3D.destroy(true);
    };
    Level.prototype.getUnitsByType = function (type) {
        var result = new Array();
        for (var i = 0; i < this._units.length; ++i) {
            var unit = this._units[i];
            if (unit.Type == type) {
                result.push(unit);
            }
        }
        return result;
    };
    Level.prototype.initGun = function () {
        var gunRoot = this.Sprite3D.getChildByName("GunRoot");
        this._gun = gunRoot.addComponent(Gun_1.default);
        this._gun.init(this);
    };
    Level.prototype.switchGun = function (weaponData) {
        var configData = WeaponConfig_1.default.getInstance().getWeaponConfigDataById(weaponData.id);
        this._gun.setGun(configData, weaponData);
    };
    Level.prototype.Revive = function () {
        this._isComplate = false;
        this._gun.Hp = this._gun.MaxHp;
        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnPlayerRevive);
    };
    Level.prototype.onLevelProcessChange = function (para) {
        var process = para.process;
        if (process >= 1 && !this._isComplate) {
            this._isComplate = true;
            var self_1 = this;
            Laya.timer.once(2000, this, function () {
                if (self_1.Gun.Hp > 0) {
                    var maxLevelNum = LevelConfig_1.default.getInstance().getLevelCount();
                    var nextLevelNum = Math.min(maxLevelNum, User_1.default.get_JDKL_LeveNum() + 1);
                    User_1.default.set_JDKL_LeveNum(nextLevelNum);
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnLevel_JDKL_Complate, { level: self_1, isWin: true });
                    ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.More_JDKL_GameView, {
                        showContinue: true,
                        onContinue: function () {
                            ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.GameOver_JDKL_RewardView, {
                                levelNum: self_1.LevelConfigData.levelId,
                                rewardNum: self_1.LevelConfigData.reward,
                            }, function (v) {
                                ViewMgr_1.default.instance.close_JDKL_View(ViewMgr_1.View_JDKL_Def.More_JDKL_GameView);
                            });
                            SoundMgr_1.default.instance.play_JDKL_Sound("win");
                        }
                    }, function (v) {
                        GameMgr_1.default.get_JDKL_Instance().destroyGame();
                        ViewMgr_1.default.instance.close_JDKL_View(ViewMgr_1.View_JDKL_Def.Battle_JDKL_View);
                    });
                }
                else {
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnLevel_JDKL_Complate, { level: self_1, isWin: false });
                    ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.GameOver_JDKL_View, { isWin: false }, function () {
                        GameMgr_1.default.get_JDKL_Instance().destroyGame();
                        ViewMgr_1.default.instance.close_JDKL_View(ViewMgr_1.View_JDKL_Def.Battle_JDKL_View);
                    });
                    SoundMgr_1.default.instance.play_JDKL_Sound("lose");
                }
            });
        }
    };
    Level.prototype.onPlayerDead = function () {
        if (!this._isComplate) {
            this._isComplate = true;
            Laya.timer.once(1000, this, function () {
                ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.Revive_JDKL_View, null, function () {
                });
            });
        }
    };
    return Level;
}(Laya.Script3D));
exports.default = Level;
},{"../Config/LevelConfig":6,"../Config/WeaponConfig":8,"../Event/EventDef":9,"../Event/EventMgr":10,"../Mgr/GameMgr":39,"../Mgr/SoundMgr":40,"../Mgr/ViewMgr":41,"../User/User":60,"./Effect/EffectMgr":14,"./EnemyMgr":16,"./Gun/Gun":18,"./Navigation/NavigationMgr":23,"./Unit/UnitFactory":35}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RoadPath_1 = require("./RoadPath");
var BossRoadPath = /** @class */ (function (_super) {
    __extends(BossRoadPath, _super);
    function BossRoadPath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BossRoadPath.prototype.onAwake = function () {
        this.Random();
    };
    BossRoadPath.prototype.Random = function () {
        this._pathPoints.splice(0);
        for (var i = 0; i < this.owner.numChildren; ++i) {
            var points = this.owner.getChildAt(i);
            var pointIndex = Math.floor(Math.random() * points.numChildren);
            var point = points.getChildAt(pointIndex);
            this._pathPoints.push(point);
        }
    };
    return BossRoadPath;
}(RoadPath_1.default));
exports.default = BossRoadPath;
},{"./RoadPath":24}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NavigationAgent = /** @class */ (function (_super) {
    __extends(NavigationAgent, _super);
    function NavigationAgent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._mgr = null;
        _this._iNavigation = null;
        _this._sprite3d = null;
        _this._curLoadPath = null;
        _this._curTargetPoint = null;
        _this._lastPos = new Laya.Vector3();
        _this._pause = false;
        return _this;
    }
    NavigationAgent.prototype.init = function (mgr) {
        this._mgr = mgr;
        this._sprite3d = this.owner;
        var coms = this.owner._components;
        for (var index = 0; index < coms.length; index++) {
            var element = coms[index];
            var move = element.move;
            if (null != move && typeof (move) == 'function') {
                this._iNavigation = element;
                break;
            }
        }
    };
    NavigationAgent.prototype.setPath = function (path) {
        this._curLoadPath = path;
        this._curTargetPoint = this._curLoadPath.PathPoints[0];
        this._sprite3d.transform.position = this._curTargetPoint.transform.position.clone();
        this._pause = false;
        this._lastPos.x = this._curTargetPoint.transform.position.x;
        this._lastPos.y = this._curTargetPoint.transform.position.y;
        this._lastPos.z = this._curTargetPoint.transform.position.z;
    };
    NavigationAgent.prototype.resetPath = function () {
        this._curLoadPath = null;
        this._curTargetPoint = null;
        this._pause = false;
        this._lastPos.x = 0;
        this._lastPos.y = 0;
        this._lastPos.z = 0;
    };
    NavigationAgent.prototype.pause = function () {
        this._pause = true;
    };
    NavigationAgent.prototype.continue = function () {
        this._pause = false;
    };
    NavigationAgent.prototype.curPointTargetIsComplate = function () {
        if (null != this._lastPos && null != this._curTargetPoint) {
            var curPos = this._sprite3d.transform.position.clone();
            var targetPos = this._curTargetPoint.transform.position.clone();
            var lastDir = new Laya.Vector3();
            var targetDir = new Laya.Vector3();
            Laya.Vector3.subtract(curPos, this._lastPos, lastDir);
            Laya.Vector3.subtract(curPos, targetPos, targetDir);
            var dotValue = Laya.Vector3.dot(lastDir, targetDir);
            return dotValue >= 0;
        }
        return null;
    };
    NavigationAgent.prototype.onNavigationUpdate = function () {
        if (null != this._curLoadPath
            && null != this._curTargetPoint
            && !this._pause) {
            if (this.curPointTargetIsComplate()) {
                //当前点已经走到了，切换到下一个点
                this._iNavigation.onTargetPointComplate(this._curLoadPath.getPointIndex(this._curTargetPoint));
                this._curTargetPoint = this._curLoadPath.getNextPoint(this._curTargetPoint);
            }
            if (null != this._curTargetPoint) {
                this._lastPos.x = this._sprite3d.transform.position.x;
                this._lastPos.y = this._sprite3d.transform.position.y;
                this._lastPos.z = this._sprite3d.transform.position.z;
                var curPos = this._sprite3d.transform.position.clone();
                var targetPos = this._curTargetPoint.transform.position.clone();
                var targetDir = new Laya.Vector3();
                Laya.Vector3.subtract(targetPos, curPos, targetDir);
                this._iNavigation.move(targetDir);
            }
            else {
                //todo:到达终点
                this._iNavigation.onMoveEnd();
            }
        }
    };
    NavigationAgent.prototype.onDestroy = function () {
        this._mgr.removeAgent(this);
    };
    return NavigationAgent;
}(Laya.Script3D));
exports.default = NavigationAgent;
},{}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RoadPath_1 = require("./RoadPath");
var NavigationAgent_1 = require("./NavigationAgent");
var BossRoadPath_1 = require("./BossRoadPath");
var RoadPathType;
(function (RoadPathType) {
    RoadPathType["Normal"] = "Normal";
    RoadPathType["Airborne"] = "Airborne";
    RoadPathType["Boss"] = "Boss";
})(RoadPathType = exports.RoadPathType || (exports.RoadPathType = {}));
var NavigationMgr = /** @class */ (function () {
    function NavigationMgr(root) {
        this._normalRoadPaths = new Array();
        this._airborneRoadPaths = new Array();
        this._bossRoadPath = null;
        this._agents = new Array();
        this._pathRoot = root;
        this.initRoadPath();
    }
    Object.defineProperty(NavigationMgr.prototype, "BossRoadPath", {
        get: function () {
            return this._bossRoadPath;
        },
        enumerable: true,
        configurable: true
    });
    NavigationMgr.prototype.initRoadPath = function () {
        for (var i = 0; i < this._pathRoot.numChildren; ++i) {
            var pathRoot = this._pathRoot.getChildAt(i);
            var roadData = pathRoot.name.split("_");
            var id = Number(roadData[0]);
            var type = roadData[1];
            if (type == RoadPathType.Normal) {
                var roadPath = pathRoot.addComponent(RoadPath_1.default);
                roadPath.setIndex(id);
                this._normalRoadPaths.push(roadPath);
            }
            else if (type == RoadPathType.Airborne) {
                var roadPath = pathRoot.addComponent(RoadPath_1.default);
                roadPath.setIndex(id);
                this._airborneRoadPaths.push(roadPath);
            }
            else if (type == RoadPathType.Boss) {
                var roadPath = pathRoot.addComponent(BossRoadPath_1.default);
                roadPath.setIndex(id);
                this._bossRoadPath = roadPath;
            }
        }
    };
    NavigationMgr.prototype.getRandomNormalRoadPath = function () {
        var roadPath = this._normalRoadPaths[Math.floor(Math.random() * this._normalRoadPaths.length)];
        return roadPath;
    };
    NavigationMgr.prototype.getRandomAirborneRoadPath = function () {
        var roadPath = this._airborneRoadPaths[Math.floor(Math.random() * this._airborneRoadPaths.length)];
        return roadPath;
    };
    NavigationMgr.prototype.createAgent = function (target) {
        var agent = target.getComponent(NavigationAgent_1.default);
        if (null != agent)
            return agent;
        agent = target.addComponent(NavigationAgent_1.default);
        agent.init(this);
        this._agents.push(agent);
        return agent;
    };
    NavigationMgr.prototype.removeAgent = function (agent) {
        for (var i = 0; i < this._agents.length; ++i) {
            var a = this._agents[i];
            if (a == agent) {
                this._agents.splice(i, 1);
                if (!a.destroyed) {
                    a.destroy();
                }
                break;
            }
        }
    };
    NavigationMgr.prototype.onUpdate = function () {
        for (var i = 0; i < this._agents.length; ++i) {
            var agent = this._agents[i];
            if (null != agent) {
                agent.onNavigationUpdate();
            }
        }
    };
    return NavigationMgr;
}());
exports.default = NavigationMgr;
},{"./BossRoadPath":21,"./NavigationAgent":22,"./RoadPath":24}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RoadPath = /** @class */ (function (_super) {
    __extends(RoadPath, _super);
    function RoadPath() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._index = 0;
        _this._pathPoints = new Array();
        return _this;
    }
    Object.defineProperty(RoadPath.prototype, "Index", {
        get: function () {
            return this._index;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RoadPath.prototype, "PathPoints", {
        get: function () {
            return this._pathPoints;
        },
        enumerable: true,
        configurable: true
    });
    RoadPath.prototype.onAwake = function () {
        for (var i = 0; i < this.owner.numChildren; ++i) {
            var point = this.owner.getChildByName(String(i));
            this._pathPoints.push(point);
        }
    };
    RoadPath.prototype.setIndex = function (index) {
        this._index = index;
    };
    RoadPath.prototype.getNextPoint = function (curPoint) {
        for (var i = 0; i < this._pathPoints.length; ++i) {
            var point = this._pathPoints[i];
            if (curPoint == point) {
                return this._pathPoints[i + 1];
            }
        }
        return null;
    };
    RoadPath.prototype.getPointIndex = function (curPoint) {
        for (var i = 0; i < this._pathPoints.length; ++i) {
            var point = this._pathPoints[i];
            if (curPoint == point) {
                return i;
            }
        }
        return null;
    };
    return RoadPath;
}(Laya.Script3D));
exports.default = RoadPath;
},{}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UnitBase_1 = require("../UnitBase");
var ActorData_1 = require("./ActorData");
var ActorAniStateCtrl_1 = require("./ActorAniStateCtrl");
var NavigationAgent_1 = require("../../Navigation/NavigationAgent");
var Actor = /** @class */ (function (_super) {
    __extends(Actor, _super);
    function Actor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._meshRoot = null;
        _this._actorAniStateCtrl = null;
        _this._actorData = new ActorData_1.default();
        return _this;
    }
    Object.defineProperty(Actor.prototype, "MeshRoot", {
        get: function () {
            return this._meshRoot;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Actor.prototype, "ActorAniStateCtrl", {
        get: function () {
            return this._actorAniStateCtrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Actor.prototype, "NavAgent", {
        get: function () {
            return this.owner.getComponent(NavigationAgent_1.default);
        },
        enumerable: true,
        configurable: true
    });
    Actor.prototype.onInit = function (level, unitType) {
        _super.prototype.onInit.call(this, level, unitType);
        this._meshRoot = this.Sprite3D.getChildByName("Mesh");
        this._actorAniStateCtrl = this._meshRoot.addComponent(ActorAniStateCtrl_1.default);
        this._actorAniStateCtrl.init(this);
    };
    Actor.prototype.move = function (dir) {
        Laya.Vector3.normalize(dir, dir);
        var nextPos = new Laya.Vector3(this.transform.position.x + dir.x * this._actorData.moveSpeed * Math.min(50, Laya.timer.delta) / 1000, this.transform.position.y + dir.y * this._actorData.moveSpeed * Math.min(50, Laya.timer.delta) / 1000, this.transform.position.z + dir.z * this._actorData.moveSpeed * Math.min(50, Laya.timer.delta) / 1000);
        this.xzLookAtByV3(nextPos);
        this.transform.position = nextPos;
    };
    Actor.prototype.onMoveEnd = function () {
    };
    Actor.prototype.onTargetPointComplate = function (index) {
    };
    Actor.prototype.onHit = function (damage) {
    };
    Actor.prototype.onWeakPointHit = function (weak, damage) {
    };
    Actor.prototype.onAnimationComplate = function (name) {
    };
    return Actor;
}(UnitBase_1.default));
exports.default = Actor;
},{"../../Navigation/NavigationAgent":22,"../UnitBase":34,"./ActorAniStateCtrl":26,"./ActorData":27}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ActorAniStates;
(function (ActorAniStates) {
    ActorAniStates["run"] = "run";
    ActorAniStates["walk"] = "walk";
    ActorAniStates["idel"] = "idel";
    ActorAniStates["onhit"] = "onhit";
    ActorAniStates["dead"] = "dead";
    ActorAniStates["dead2"] = "dead2";
})(ActorAniStates = exports.ActorAniStates || (exports.ActorAniStates = {}));
var ActorStateCtrl = /** @class */ (function (_super) {
    __extends(ActorStateCtrl, _super);
    function ActorStateCtrl() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._animator = null;
        _this._actor = null;
        return _this;
    }
    Object.defineProperty(ActorStateCtrl.prototype, "Animator", {
        get: function () {
            return this._animator;
        },
        enumerable: true,
        configurable: true
    });
    ActorStateCtrl.prototype.onAwake = function () {
        this._animator = this.owner.getComponent(Laya.Animator);
    };
    ActorStateCtrl.prototype.init = function (actor) {
        var _this = this;
        this._actor = actor;
        if (null != this._animator) {
            var ac = this._animator.getControllerLayer();
            var _loop_1 = function () {
                var state = ac._states[i];
                //console.log(this._actor.Type +  "动画 : ",state.name);
                this_1[state.name] = function () { _this._actor.onAnimationComplate(state.name); };
            };
            var this_1 = this;
            for (var i = 0; i < ac._states.length; ++i) {
                _loop_1();
            }
        }
    };
    ActorStateCtrl.prototype.changeState = function (state) {
        if (null != this._animator) {
            this._animator.crossFade(String(state), 0.2);
        }
    };
    ActorStateCtrl.prototype.pause = function () {
        if (null != this._animator) {
            this._animator.speed = 0;
        }
    };
    ActorStateCtrl.prototype.continue = function () {
        if (null != this._animator) {
            this._animator.speed = 1;
        }
    };
    return ActorStateCtrl;
}(Laya.Script3D));
exports.default = ActorStateCtrl;
},{}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ActorData = /** @class */ (function () {
    function ActorData() {
        this.moveSpeed = 3;
    }
    return ActorData;
}());
exports.default = ActorData;
},{}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ActorWeakPoint = /** @class */ (function (_super) {
    __extends(ActorWeakPoint, _super);
    function ActorWeakPoint() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._actor = null;
        _this._collider = null;
        return _this;
    }
    Object.defineProperty(ActorWeakPoint.prototype, "Collider", {
        get: function () {
            return this._collider;
        },
        enumerable: true,
        configurable: true
    });
    ActorWeakPoint.prototype.init = function (actor) {
        this._actor = actor;
        this._collider = this.owner.getComponent(Laya.PhysicsCollider);
    };
    ActorWeakPoint.prototype.onHit = function (damage) {
        if (null != this._actor) {
            this._actor.onWeakPointHit(this, damage);
        }
    };
    return ActorWeakPoint;
}(Laya.Script3D));
exports.default = ActorWeakPoint;
},{}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Enemy_1 = require("./Enemy");
var ActorAniStateCtrl_1 = require("./ActorAniStateCtrl");
var EffectType_1 = require("../../Effect/EffectType");
var AirborneEnemy = /** @class */ (function (_super) {
    __extends(AirborneEnemy, _super);
    function AirborneEnemy() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._parachuteObj = null;
        _this._dropComplate = false;
        return _this;
    }
    AirborneEnemy.prototype.onInit = function (level, unitType) {
        _super.prototype.onInit.call(this, level, unitType);
        this._parachuteObj = this.Sprite3D.getChildByName("parachute_0");
        this.DefaultState = Enemy_1.EnemyState.Walk;
        this.changeState(Enemy_1.EnemyState.Walk, Number.MAX_VALUE);
    };
    AirborneEnemy.prototype.onTargetPointComplate = function (index) {
        if (1 == index) {
            this.DefaultState = Enemy_1.EnemyState.Run;
            this._parachuteObj.active = false;
            this.changeState(Enemy_1.EnemyState.Idel, 1000);
            this._dropComplate = true;
        }
    };
    AirborneEnemy.prototype.onUpdate = function () {
        if (this._dropComplate) {
            this.RunState();
        }
    };
    AirborneEnemy.prototype.onDead = function () {
        if (this._dropComplate) {
            this.changeState(Enemy_1.EnemyState.Dead, Number.MAX_VALUE);
            this.NavAgent.resetPath();
        }
        else {
            this.NavAgent.resetPath();
            var effect = this._level.EffectMgr.playEffect(EffectType_1.EffectType.baozha_fly, 500);
            effect.setPosByV3(this.Sprite3D.transform.position);
            Laya.timer.once(250, this, this.destroyUnit);
        }
        this._collider.enabled = false;
        this._headerWeak.Collider.enabled = false;
    };
    AirborneEnemy.prototype.onAnimationComplate = function (name) {
        if (name == ActorAniStateCtrl_1.ActorAniStates.dead) {
            var effect = this._level.EffectMgr.playEffect(EffectType_1.EffectType.baozha, 500);
            effect.setPosByV3(this.Sprite3D.transform.position);
            Laya.timer.once(250, this, this.destroyUnit);
        }
        else {
        }
    };
    AirborneEnemy.prototype.changeState = function (state, stateTime) {
        _super.prototype.changeState.call(this, state, stateTime);
        if (state == Enemy_1.EnemyState.OnHit && !this._dropComplate) {
            this.NavAgent.continue();
        }
    };
    return AirborneEnemy;
}(Enemy_1.default));
exports.default = AirborneEnemy;
},{"../../Effect/EffectType":15,"./ActorAniStateCtrl":26,"./Enemy":31}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ActorWeakPoint_1 = require("./ActorWeakPoint");
var Enemy_1 = require("./Enemy");
var SoundMgr_1 = require("../../../Mgr/SoundMgr");
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var DinosaurBoss = /** @class */ (function (_super) {
    __extends(DinosaurBoss, _super);
    function DinosaurBoss() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._weak = null;
        return _this;
    }
    DinosaurBoss.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._weak = this.owner.getChildByName("Weak").addComponent(ActorWeakPoint_1.default);
        this._weak.init(this);
    };
    DinosaurBoss.prototype.onWeakPointHit = function (weak, damage) {
        if (weak == this._headerWeak) {
            this.Hp = this.Hp - damage.value * 2;
            SoundMgr_1.default.instance.play_JDKL_Sound("headShoot");
            EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnHeanderShoot, { enemy: this });
        }
        else {
            this.Hp = this.Hp - damage.value;
        }
    };
    DinosaurBoss.prototype.onHit = function (damage) {
        this.Hp = this.Hp - damage.value;
    };
    DinosaurBoss.prototype.onMoveEnd = function () {
        this.Level.Gun.Hp = 0;
        this._hp = 0;
        this.destroyUnit();
    };
    DinosaurBoss.prototype.onDead = function () {
        _super.prototype.onDead.call(this);
        this._weak.Collider.enabled = false;
    };
    return DinosaurBoss;
}(Enemy_1.default));
exports.default = DinosaurBoss;
},{"../../../Event/EventDef":9,"../../../Event/EventMgr":10,"../../../Mgr/SoundMgr":40,"./ActorWeakPoint":28,"./Enemy":31}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Actor_1 = require("./Actor");
var ActorWeakPoint_1 = require("./ActorWeakPoint");
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var GameConfig_1 = require("../../../Config/GameConfig");
var ActorAniStateCtrl_1 = require("./ActorAniStateCtrl");
var EffectType_1 = require("../../Effect/EffectType");
var SoundMgr_1 = require("../../../Mgr/SoundMgr");
var EnemyState;
(function (EnemyState) {
    EnemyState["None"] = "None";
    EnemyState["Idel"] = "Idel";
    EnemyState["Run"] = "Run";
    EnemyState["Walk"] = "Walk";
    EnemyState["OnHit"] = "OnHit";
    EnemyState["Dead"] = "Dead";
    EnemyState["Dead2"] = "Dead2";
})(EnemyState = exports.EnemyState || (exports.EnemyState = {}));
var Enemy = /** @class */ (function (_super) {
    __extends(Enemy, _super);
    function Enemy() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.DefaultState = EnemyState.None;
        _this._curState = EnemyState.None;
        _this._randomStates = [
            EnemyState.Idel, EnemyState.Run, EnemyState.Walk
        ];
        _this._headerWeak = null;
        _this._collider = null;
        _this._stateLeftTime = 0;
        _this._hp = 1;
        _this._monsterConfigData = null;
        _this._maxHp = 0;
        _this._tagPoint = null;
        _this._weakDead = false;
        return _this;
    }
    Object.defineProperty(Enemy.prototype, "CurState", {
        get: function () {
            return this._curState;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "Hp", {
        get: function () {
            return this._hp;
        },
        set: function (value) {
            var last = this._hp;
            this._hp = value;
            if (this._hp <= 0) {
                this._hp = 0;
                if (last > 0) {
                    this.onDead();
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnEnemyDead, this);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "isDead", {
        get: function () {
            return this._hp <= 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "MaxHp", {
        get: function () {
            return this._maxHp;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "TagPoint", {
        get: function () {
            return this._tagPoint;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "EnemyType", {
        get: function () {
            if (null != this._monsterConfigData) {
                return this._monsterConfigData.monsterName;
            }
            return "";
        },
        enumerable: true,
        configurable: true
    });
    Enemy.prototype.onAwake = function () {
        this._headerWeak = this.owner.getChildByName("Header").addComponent(ActorWeakPoint_1.default);
        this._headerWeak.init(this);
        this._collider = this.owner.getComponent(Laya.PhysicsCollider);
        this._tagPoint = this.owner.getChildByName("TagPoint");
    };
    Enemy.prototype.onUpdate = function () {
        this.RunState();
    };
    Enemy.prototype.onInit = function (level, unitType) {
        _super.prototype.onInit.call(this, level, unitType);
        this.DefaultState = EnemyState.Run;
    };
    Enemy.prototype.initEnemy = function (monsterConfigData) {
        this._monsterConfigData = monsterConfigData;
        var gameConfigData = GameConfig_1.default.get_JDKL_Instance().getGameConfigData();
        this._maxHp = this._monsterConfigData.monsterBasicHp + this._level.LevelConfigData.levelId * gameConfigData.monsterHpFilter;
        this.Hp = this._maxHp;
    };
    Enemy.prototype.onHit = function (damage) {
        this.Hp = this.Hp - damage.value;
        if (!this.isDead) {
            this.changeState(EnemyState.OnHit, 260);
        }
    };
    Enemy.prototype.onWeakPointHit = function (weak, damage) {
        if (weak == this._headerWeak) {
            this._weakDead = true;
            this.Hp = 0;
            SoundMgr_1.default.instance.play_JDKL_Sound("headShoot");
            EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnHeanderShoot, { enemy: this });
        }
        if (!this.isDead) {
            this.changeState(EnemyState.OnHit, 260);
        }
    };
    Enemy.prototype.onAnimationComplate = function (name) {
        if (name == ActorAniStateCtrl_1.ActorAniStates.dead || name == ActorAniStateCtrl_1.ActorAniStates.dead2) {
            var effect = this._level.EffectMgr.playEffect(EffectType_1.EffectType.baozha, 500);
            effect.setPosByV3(this.Sprite3D.transform.position);
            Laya.timer.once(250, this, this.destroyUnit);
        }
        else {
        }
    };
    Enemy.prototype.onDead = function () {
        if (this._weakDead) {
            this.changeState(EnemyState.Dead2, Number.MAX_VALUE);
        }
        else {
            this.changeState(EnemyState.Dead, Number.MAX_VALUE);
        }
        this.NavAgent.resetPath();
        this._collider.enabled = false;
        this._headerWeak.Collider.enabled = false;
        this._weakDead = false;
    };
    Enemy.prototype.onMoveEnd = function () {
        var gameConfigData = GameConfig_1.default.get_JDKL_Instance().getGameConfigData();
        var monsterData = this._monsterConfigData;
        var damage = monsterData.monsterBasicDamage + this._level.LevelConfigData.levelId * gameConfigData.monsterDamageFilter;
        this.Level.Gun.Hp = this.Level.Gun.Hp - damage;
        this._hp = 0;
        this.destroyUnit();
        var effect = this._level.EffectMgr.playEffect(EffectType_1.EffectType.baozha, 500);
        effect.setPosByV3(this.Sprite3D.transform.position);
    };
    Enemy.prototype.RunState = function () {
        this._stateLeftTime -= Math.min(50, Laya.timer.delta);
        if (this._stateLeftTime <= 0) {
            if (!this.isDead) {
                var index = Math.floor(Math.random() * GameConfig_1.default.get_JDKL_Instance().getGameConfigData().behaviorTime.length);
                var time = GameConfig_1.default.get_JDKL_Instance().getGameConfigData().behaviorTime[index] * 1000;
                var state = this._randomStates[Math.floor(Math.random() * this._randomStates.length)];
                this.changeState(state, time);
            }
        }
    };
    Enemy.prototype.changeState = function (state, stateTime) {
        this._curState = state;
        this._stateLeftTime = stateTime;
        switch (state) {
            case EnemyState.Idel:
                this.ActorAniStateCtrl.changeState(ActorAniStateCtrl_1.ActorAniStates.idel);
                if (null != this.NavAgent) {
                    this.NavAgent.pause();
                }
                break;
            case EnemyState.Run:
                this.ActorAniStateCtrl.changeState(ActorAniStateCtrl_1.ActorAniStates.run);
                this._actorData.moveSpeed = 2;
                if (null != this.NavAgent) {
                    this.NavAgent.continue();
                }
                break;
            case EnemyState.Walk:
                this.ActorAniStateCtrl.changeState(ActorAniStateCtrl_1.ActorAniStates.walk);
                this._actorData.moveSpeed = 1;
                if (null != this.NavAgent) {
                    this.NavAgent.continue();
                }
                break;
            case EnemyState.OnHit:
                this.ActorAniStateCtrl.changeState(ActorAniStateCtrl_1.ActorAniStates.onhit);
                if (null != this.NavAgent) {
                    this.NavAgent.pause();
                }
                break;
            case EnemyState.Dead:
                this.ActorAniStateCtrl.changeState(ActorAniStateCtrl_1.ActorAniStates.dead);
                if (null != this.NavAgent) {
                    this.NavAgent.pause();
                }
                break;
            case EnemyState.Dead2:
                this.ActorAniStateCtrl.changeState(ActorAniStateCtrl_1.ActorAniStates.dead2);
                if (null != this.NavAgent) {
                    this.NavAgent.pause();
                }
                break;
            default:
                this.ActorAniStateCtrl.changeState(ActorAniStateCtrl_1.ActorAniStates.idel);
                if (null != this.NavAgent) {
                    this.NavAgent.pause();
                }
                break;
        }
    };
    return Enemy;
}(Actor_1.default));
exports.default = Enemy;
},{"../../../Config/GameConfig":5,"../../../Event/EventDef":9,"../../../Event/EventMgr":10,"../../../Mgr/SoundMgr":40,"../../Effect/EffectType":15,"./Actor":25,"./ActorAniStateCtrl":26,"./ActorWeakPoint":28}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Enemy_1 = require("./Enemy");
var ShieldEnemy = /** @class */ (function (_super) {
    __extends(ShieldEnemy, _super);
    function ShieldEnemy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ShieldEnemy.prototype.onInit = function (level, unitType) {
        _super.prototype.onInit.call(this, level, unitType);
        this.DefaultState = Enemy_1.EnemyState.Walk;
        this._actorData.moveSpeed = 1;
    };
    return ShieldEnemy;
}(Enemy_1.default));
exports.default = ShieldEnemy;
},{"./Enemy":31}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Enemy_1 = require("./Enemy");
var SoundMgr_1 = require("../../../Mgr/SoundMgr");
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var ZombieKing = /** @class */ (function (_super) {
    __extends(ZombieKing, _super);
    function ZombieKing() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ZombieKing.prototype.onWeakPointHit = function (weak, damage) {
        if (weak == this._headerWeak) {
            this.Hp = this.Hp - damage.value * 2;
            SoundMgr_1.default.instance.play_JDKL_Sound("headShoot");
            EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnHeanderShoot, { enemy: this });
        }
    };
    ZombieKing.prototype.onHit = function (damage) {
        this.Hp = this.Hp - damage.value;
    };
    ZombieKing.prototype.onMoveEnd = function () {
        this.Level.Gun.Hp = 0;
        this._hp = 0;
        this.destroyUnit();
    };
    ZombieKing.prototype.move = function (dir) {
        Laya.Vector3.normalize(dir, dir);
        var nextPos = new Laya.Vector3(this.transform.position.x + dir.x * this._actorData.moveSpeed * Math.min(50, Laya.timer.delta) / 1000, this.transform.position.y + dir.y * this._actorData.moveSpeed * Math.min(50, Laya.timer.delta) / 1000, this.transform.position.z + dir.z * this._actorData.moveSpeed * Math.min(50, Laya.timer.delta) / 1000);
        this.xzLookAtByV3(nextPos);
        this.transform.position = nextPos;
    };
    return ZombieKing;
}(Enemy_1.default));
exports.default = ZombieKing;
},{"../../../Event/EventDef":9,"../../../Event/EventMgr":10,"../../../Mgr/SoundMgr":40,"./Enemy":31}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilit_1 = require("../../Utilit");
var UnitBase = /** @class */ (function (_super) {
    __extends(UnitBase, _super);
    function UnitBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(UnitBase.prototype, "Type", {
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitBase.prototype, "Level", {
        get: function () {
            return this._level;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitBase.prototype, "Sprite3D", {
        get: function () {
            return this._ownerSprite3D;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitBase.prototype, "transform", {
        get: function () {
            return this._transform;
        },
        enumerable: true,
        configurable: true
    });
    UnitBase.prototype.onInit = function (level, unitType) {
        this._type = unitType;
        this._level = level;
        this._ownerSprite3D = this.owner;
        this._transform = this._ownerSprite3D.transform;
    };
    UnitBase.prototype.destroyUnit = function () {
        var self = this;
        this._ownerSprite3D.active = false;
        Laya.timer.frameOnce(1, this, function () {
            self._ownerSprite3D.removeSelf();
            self._ownerSprite3D.destroy(true);
        });
    };
    UnitBase.prototype.onDestroy = function () {
        Laya.Tween.clearAll(this);
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this.Sprite3D);
        Laya.timer.clearAll(this.Sprite3D);
        Laya.Tween.clearAll(this.transform);
        Laya.timer.clearAll(this.transform);
    };
    UnitBase.prototype.xzLookAt = function (unit) {
        var dir = new Laya.Vector3(unit.transform.position.x - this.transform.position.x, unit.transform.position.y - this.transform.position.y, unit.transform.position.z - this.transform.position.z);
        var r = Utilit_1.default.getRotation_JDKL_By_JDKL_DirOn3DSpace(new Laya.Point(dir.x, dir.z));
        this.transform.localRotationEulerY = r - 180;
    };
    UnitBase.prototype.xzLookAtByV3 = function (v3) {
        var dir = new Laya.Vector3(v3.x - this.transform.position.x, v3.y - this.transform.position.y, v3.z - this.transform.position.z);
        var r = Utilit_1.default.getRotation_JDKL_By_JDKL_DirOn3DSpace(new Laya.Point(dir.x, dir.z));
        this.transform.localRotationEulerY = r;
    };
    return UnitBase;
}(Laya.Script3D));
exports.default = UnitBase;
},{"../../Utilit":61}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UnitType_1 = require("./UnitType");
var UnitBase_1 = require("./UnitBase");
var Enemy_1 = require("./Actor/Enemy");
var DinosaurBoss_1 = require("./Actor/DinosaurBoss");
var AirborneEnemy_1 = require("./Actor/AirborneEnemy");
var ShieldEnemy_1 = require("./Actor/ShieldEnemy");
var ZombieKing_1 = require("./Actor/ZombieKing");
var UnitFactory = /** @class */ (function () {
    function UnitFactory(level, prefabRoot) {
        this._level = level;
        this._prefabRoot = prefabRoot;
    }
    UnitFactory.prototype.create = function (unitType, prefabName) {
        if (null == this._prefabRoot)
            return null;
        var name = null == prefabName ? String(unitType) : prefabName;
        if (name) {
            var template = this._prefabRoot.getChildByName(name);
            var ins = Laya.Sprite3D.instantiate(template, this._level.Sprite3D);
            if (ins) {
                var unitBase = null;
                switch (unitType) {
                    case UnitType_1.UnitType.Enemy:
                        unitBase = ins.addComponent(Enemy_1.default);
                        break;
                    case UnitType_1.UnitType.AirborneEnemy:
                        unitBase = ins.addComponent(AirborneEnemy_1.default);
                        break;
                    case UnitType_1.UnitType.ShieldEnemy:
                        unitBase = ins.addComponent(ShieldEnemy_1.default);
                        break;
                    case UnitType_1.UnitType.DinosaurBoss:
                        unitBase = ins.addComponent(DinosaurBoss_1.default);
                        break;
                    case UnitType_1.UnitType.ZombieKing:
                        unitBase = ins.addComponent(ZombieKing_1.default);
                        break;
                    default:
                        unitBase = ins.addComponent(UnitBase_1.default);
                        break;
                }
                if (unitType) {
                    unitBase.onInit(this._level, unitType);
                }
                return unitBase;
            }
        }
        return null;
    };
    return UnitFactory;
}());
exports.default = UnitFactory;
},{"./Actor/AirborneEnemy":29,"./Actor/DinosaurBoss":30,"./Actor/Enemy":31,"./Actor/ShieldEnemy":32,"./Actor/ZombieKing":33,"./UnitBase":34,"./UnitType":36}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UnitType;
(function (UnitType) {
    UnitType["None"] = "";
    UnitType["Enemy"] = "Enemy";
    UnitType["AirborneEnemy"] = "AirborneEnemy";
    UnitType["ShieldEnemy"] = "ShieldEnemy";
    UnitType["DinosaurBoss"] = "DinosaurBoss";
    UnitType["ZombieKing"] = "ZombieKing";
})(UnitType = exports.UnitType || (exports.UnitType = {}));
},{}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var WXAPI_1 = require("../WXAPI");
var User_1 = require("../User/User");
/**
 * 用于买量上报,以及停留时间上报的的类，本质上是对wx和买量接口做一个集成化的封装方便使用
 *
 * @export
 * @class MaiLiang
 */
var Mai_JDKL_Liang = /** @class */ (function () {
    function Mai_JDKL_Liang() {
    }
    /**
     * 发送数据的类
     *
     * @protected
     * @static
     * @param {request_JDKL_Data} req
     * @memberof MaiLiang
     */
    Mai_JDKL_Liang.req_JDKL_uest = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = Mai_JDKL_Liang.mainUrl + req.url;
        }
        var completeFunc = function (res) {
            console.log(res, "MaiLiang http Success");
            res = JSON.parse(res);
            if (res.Status == "200") {
                if (res.Result["OpenId"] != null && res.Result["OpenId"] != "") {
                    Mai_JDKL_Liang.MaiLiangOpenId = res.Result["OpenId"];
                    Mai_JDKL_Liang.time = req.data.posttime;
                    console.log("获得买量系统OpenId " + Mai_JDKL_Liang.MaiLiangOpenId);
                }
                else {
                    console.log("上报买量系统停留时间成功");
                }
                if (req.onSuccess) {
                    req.onSuccess(res);
                }
            }
            else {
                if (req.onFail) {
                    req.onFail(res);
                }
            }
            req.onSuccess = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "MaiLiang http fail");
            if (req.onFail) {
                req.onFail(res);
            }
            req.onFail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, Mai_JDKL_Liang, completeFunc);
        xhr.once(Laya.Event.ERROR, Mai_JDKL_Liang, errorFunc);
        if (req.meth == "get") {
            var para = "";
            for (var _i = 0, _a = Object.keys(req.data); _i < _a.length; _i++) {
                var key = _a[_i];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            req.url = req.url + "?" + para;
            xhr.send(req.url, null, req.meth);
        }
        else {
            var para = "";
            for (var _b = 0, _c = Object.keys(req.data); _b < _c.length; _b++) {
                var key = _c[_b];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            xhr.send(req.url, para, req.meth, null, ["Content-Type", "application/x-www-form-urlencoded"]);
        }
    };
    /**
     * 获得买量系统唯一标识ID,此ID的作用是用来上报游戏时间
     *
     * @param {Function} res
     * @memberof MaiLiang
     */
    Mai_JDKL_Liang.Get_JDKL_Mai_JDKL_LiangOpenId = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            var option = WXAPI_1.default.get_JDKL_Launch_JDKL_OptionsSync();
            if (option != null) {
                var key = option.query["key"];
                if (key != null && key != "" && User_1.default.open_JDKL_Id != "") {
                    Mai_JDKL_Liang.key = key;
                    var req = new HttpUnit_1.request_JDKL_Data();
                    req.url = Mai_JDKL_Liang.uclick;
                    req.onSuccess = onSuccess;
                    req.onFail = onFail;
                    req.data.appid = AppConfig_1.default.App_JDKL_ID;
                    req.data.openid = "";
                    var time = new Date().getTime() / 1000;
                    req.data.posttime = time;
                    req.data.auth = 0;
                    req.data.key = key;
                    req.data.wxopenid = User_1.default.open_JDKL_Id;
                    req.meth = "POST";
                    console.log("发送买量数据接口");
                    Mai_JDKL_Liang.req_JDKL_uest(req);
                }
            }
            else {
                console.log("上报买量数据失败");
                onFail(null);
            }
        }
        else {
            console.log("不在微信模式下调用，默认上报买量数据失败");
            onFail(null);
        }
    };
    /**
     * 上报买量接口停留时间
     *
        appid －主体小程序appid
        openid －买量系统唯一标识（不可空）
        posttime － 请求时间刻度（精确到秒）
        time － 停留时长（精确到秒）
     * @static
     * @memberof MaiLiang
     */
    Mai_JDKL_Liang.Report_JDKL_Stay_JDKL_Time = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            if (Mai_JDKL_Liang.MaiLiangOpenId != "") {
                var req = new HttpUnit_1.request_JDKL_Data();
                req.url = Mai_JDKL_Liang.stay;
                req.onSuccess = onSuccess;
                req.onFail = onFail;
                req.data.appid = AppConfig_1.default.App_JDKL_ID;
                req.data.openid = Mai_JDKL_Liang.MaiLiangOpenId;
                var time = new Date().getTime() / 1000;
                req.data.posttime = time;
                var staytime = Mai_JDKL_Liang.time != 0 ? time - Mai_JDKL_Liang.time : 0;
                req.data.time = staytime;
                req.meth = "POST";
                console.log("发送停留时间至买量接口");
                Mai_JDKL_Liang.req_JDKL_uest(req);
            }
        }
        else {
            console.log("不在微信模式下调用，默认发送停留时间至买量接口失败");
            onFail(null);
        }
    };
    Mai_JDKL_Liang.mainUrl = "https://swtj.mrkzx.cn";
    Mai_JDKL_Liang.uclick = "/v1.1/api/Activity/uclick.html";
    Mai_JDKL_Liang.stay = "/v1.1/api/Activity/stay.html";
    Mai_JDKL_Liang.key = ""; //推广路径中同名参数，需要调用方法WXAPi.getLaunchOptionsSync()，从返回的参数中获得。
    Mai_JDKL_Liang.MaiLiangOpenId = ""; //买量系统唯一标识,执行GetMaiLiangOpenId()方法成功后自动获得。
    Mai_JDKL_Liang.time = 0; //买量系统唯一标识后，记录当前时间（精确到秒）。
    return Mai_JDKL_Liang;
}());
exports.default = Mai_JDKL_Liang;
},{"../AppConfig":2,"../Net/HttpUnit":44,"../User/User":60,"../WXAPI":87}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var User_1 = require("./User/User");
var layaMaxUI_1 = require("./ui/layaMaxUI");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var HttpUnit_1 = require("./Net/HttpUnit");
var WXAPI_1 = require("./WXAPI");
var AppConfig_1 = require("./AppConfig");
var EventMgr_1 = require("./Event/EventMgr");
var EventDef_1 = require("./Event/EventDef");
var OPPOAPI_1 = require("./OPPOAPI");
var QQMiniGameAPI_1 = require("./QQMiniGameAPI");
var TTAPI_1 = require("./TTAPI");
var ALD_1 = require("./ALD");
var Main = /** @class */ (function () {
    function Main() {
        this._loadingUI = null;
        this._loadingView = null;
        //预加载列表
        this._preLoadRes = new Array();
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        if (true == AppConfig_1.default.on_JDKL_TTMiniGame) {
            Laya.Browser.onMiniGame = false;
        }
        if (!Laya.Browser.onMiniGame
            && !Laya.Browser.onQGMiniGame
            && !Laya.Browser.onQQMiniGame
            && !AppConfig_1.default.on_JDKL_TTMiniGame) //如果不是小游戏，资源服务器设置为本地测试地址
         {
            AppConfig_1.default.Res_JDKL_Server = AppConfig_1.default.Local_JDKL_Test_JDKL_ReServer;
        }
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        Laya.loader.maxLoader = 50;
        this.initLoadingView();
        //加载重要配置，这些配置必须在游戏启动前加载完成
        var firstConfigs = [
            { url: AppConfig_1.default.Res_JDKL_Server + "/json/appswitch.json", type: Laya.Loader.JSON }
        ];
        var self = this;
        Laya.loader.load(firstConfigs, Laya.Handler.create(this, function () {
            self.loadRes(); //加载资源
        }));
        EventMgr_1.default.instance.reg_JDKL_Once_JDKL_Event(EventDef_1.Event_JDKL_Def.App_CloseFirst_JDKL_LoadingView, this, this.closeloadingUI);
    };
    Main.prototype.initLoadingView = function () {
        this._loadingUI = new layaMaxUI_1.ui.View.LoadingUI();
        Laya.stage.addChild(this._loadingUI);
        this._loadingUI.width = Laya.stage.width;
        this._loadingUI.height = Laya.stage.height;
        this._loadingView = this._loadingUI.getComponent(LoadingView_1.default);
        this._loadingView.setProcess(0);
    };
    Main.prototype.postResToOpenDataContext = function (onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("开始透传资源数据到开放域");
            Laya.loader.load([
                "openRes/Rank.atlas",
            ], Laya.Handler.create(null, function () {
                Laya.MiniAdpter.sendAtlasToOpenDataContext("openRes/Rank.atlas");
                console.log("透传资源数据到开放域  完毕！！！");
                if (onComplate) {
                    onComplate();
                }
            }));
        }
        else {
            if (onComplate) {
                onComplate();
            }
        }
    };
    Main.prototype.preLoad = function () {
        //这里添加你需要预加载的资源
        this._preLoadRes.push({ url: AppConfig_1.default.Res_JDKL_Server + "/json/gameConfig.json", type: Laya.Loader.JSON });
        this._preLoadRes.push({ url: AppConfig_1.default.Res_JDKL_Server + "/json/levelConfig.json", type: Laya.Loader.JSON });
        this._preLoadRes.push({ url: AppConfig_1.default.Res_JDKL_Server + "/json/monsterConfig.json", type: Laya.Loader.JSON });
        this._preLoadRes.push({ url: AppConfig_1.default.Res_JDKL_Server + "/json/weaponConfig.json", type: Laya.Loader.JSON });
    };
    Main.prototype.loadRes = function () {
        var _this = this;
        this.preLoad();
        var resource = this._preLoadRes;
        var self = this;
        if (Laya.Browser.onMiniGame) {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["wx"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                self._loadingView.setProcess(res / 2);
            });
        }
        else if (Laya.Browser.onQGMiniGame) //oppo小游戏
         {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["qg"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                // 加载进度百分比
                var progress = res["progress"];
                // 下载数据
                var totalBytesWritten = res["totalBytesWritten"];
                // 总长度
                var totalBytesExpectedToWrite = res["totalBytesExpectedToWrite"];
                self._loadingView.setProcess(progress / 2);
            });
        }
        else if (Laya.Browser.onQQMiniGame) {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["qq"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                self._loadingView.setProcess(res / 2);
            });
        }
        else { //字节跳动没有分包
            if (resource.length > 0) {
                Laya.loader.load(resource, Laya.Handler.create(this, function () {
                    self.onLoadResComplate();
                }), Laya.Handler.create(this, function (res) {
                    self._loadingView.setProcess(res);
                }));
            }
            else {
                self.onLoadResComplate();
            }
        }
    };
    Main.prototype.onLoadResComplate = function () {
        var self = this;
        this._loadingView.setProcess(1);
        if (Laya.Browser.onMiniGame) {
            WXAPI_1.default.wx_JDKL_Login(function (code) {
                var _this = this;
                User_1.default.code_JDKL_ = code;
                HttpUnit_1.default._JDKL_login_JDKL_(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token_JDKL_ = res.data.token;
                        User_1.default.open_JDKL_Id = res.data.openid;
                        ALD_1.default.ald_JDKL_Send_JDKL_OpenId(User_1.default.open_JDKL_Id);
                        HttpUnit_1.default.get_JDKL_Game_JDKL_Data(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initi_JDKL_User(res.data);
                            }
                            else {
                                User_1.default.initi_JDKL_User(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token_JDKL_ = "";
                            User_1.default.open_JDKL_Id = "";
                            User_1.default.initi_JDKL_User(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initi_JDKL_User(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initi_JDKL_User(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (Laya.Browser.onQGMiniGame) //oppo小游戏
         {
            OPPOAPI_1.default.init_JDKL_AdService(function () {
            }, function () {
            }, function () {
            });
            OPPOAPI_1.default.Login_JDKL_(function (token) {
                var _this = this;
                User_1.default.code_JDKL_ = token;
                HttpUnit_1.default._JDKL_login_JDKL_(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token_JDKL_ = res.data.token;
                        User_1.default.open_JDKL_Id = res.data.openid;
                        HttpUnit_1.default.get_JDKL_Game_JDKL_Data(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initi_JDKL_User(res.data);
                                console.log("获取用户数据--------------------Start");
                                for (var key in res.data) {
                                    console.log(key, res.data[key]);
                                }
                                console.log("获取用户数据--------------------End");
                            }
                            else {
                                User_1.default.initi_JDKL_User(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token_JDKL_ = "";
                            User_1.default.open_JDKL_Id = "";
                            User_1.default.initi_JDKL_User(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！", res);
                        User_1.default.initi_JDKL_User(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！", res);
                    User_1.default.initi_JDKL_User(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            QQMiniGameAPI_1.default.Login_JDKL_(function (code) {
                var _this = this;
                User_1.default.code_JDKL_ = code;
                HttpUnit_1.default._JDKL_login_JDKL_(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token_JDKL_ = res.data.token;
                        User_1.default.open_JDKL_Id = res.data.openid;
                        ALD_1.default.ald_JDKL_Send_JDKL_OpenId(User_1.default.open_JDKL_Id);
                        HttpUnit_1.default.get_JDKL_Game_JDKL_Data(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initi_JDKL_User(res.data);
                            }
                            else {
                                User_1.default.initi_JDKL_User(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token_JDKL_ = "";
                            User_1.default.open_JDKL_Id = "";
                            User_1.default.initi_JDKL_User(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initi_JDKL_User(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initi_JDKL_User(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (AppConfig_1.default.on_JDKL_TTMiniGame) //头条，字节跳动
         {
            TTAPI_1.default.tt_JDKL_Login(function (code) {
                var _this = this;
                User_1.default.code_JDKL_ = code;
                HttpUnit_1.default._JDKL_login_JDKL_(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token_JDKL_ = res.data.token;
                        User_1.default.open_JDKL_Id = res.data.openid;
                        HttpUnit_1.default.get_JDKL_Game_JDKL_Data(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initi_JDKL_User(res.data);
                            }
                            else {
                                User_1.default.initi_JDKL_User(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token_JDKL_ = "";
                            User_1.default.open_JDKL_Id = "";
                            User_1.default.initi_JDKL_User(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initi_JDKL_User(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initi_JDKL_User(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else {
            User_1.default.testInit_JDKL_User(); //测试
            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(this, function () {
            }));
        }
    };
    Main.prototype.closeloadingUI = function () {
        if (this._loadingUI && !this._loadingUI.destroyed) {
            this._loadingUI.destroy();
        }
    };
    return Main;
}());
//激活启动类
new Main();
},{"./ALD":1,"./AppConfig":2,"./Event/EventDef":9,"./Event/EventMgr":10,"./GameConfig":11,"./Net/HttpUnit":44,"./OPPOAPI":47,"./QQMiniGameAPI":49,"./TTAPI":59,"./User/User":60,"./View/LoadingView/LoadingView":72,"./WXAPI":87,"./ui/layaMaxUI":88}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("./ViewMgr");
var User_1 = require("../User/User");
var HttpUnit_1 = require("../Net/HttpUnit");
var MaiLiang_1 = require("../MaiLiangAPI/MaiLiang");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var WXAPI_1 = require("../WXAPI");
var WudianMgr_1 = require("./WudianMgr");
var CachedWXBannerAd_1 = require("../CachedWXBannerAd");
var Level_1 = require("../GamePlay/Level");
var LevelConfig_1 = require("../Config/LevelConfig");
var SoundMgr_1 = require("./SoundMgr");
//游戏管理器，游戏代码的入口
var Game_JDKL_Mgr = /** @class */ (function (_super) {
    __extends(Game_JDKL_Mgr, _super);
    function Game_JDKL_Mgr() {
        var _this = _super.call(this) || this;
        Game_JDKL_Mgr._instance = _this;
        return _this;
    }
    Game_JDKL_Mgr.get_JDKL_Instance = function () { return Game_JDKL_Mgr._instance; };
    Object.defineProperty(Game_JDKL_Mgr.prototype, "CurLevel", {
        get: function () {
            return this._curLevel;
        },
        enumerable: true,
        configurable: true
    });
    Game_JDKL_Mgr.prototype.onAwake = function () {
        MaiLiang_1.default.Get_JDKL_Mai_JDKL_LiangOpenId(function (res) {
            console.log("GameUI 买量数据上报成功");
            Laya.Browser.window["wx"].onShow(function () {
                MaiLiang_1.default.Get_JDKL_Mai_JDKL_LiangOpenId(null, null);
            });
            Laya.Browser.window["wx"].onHide(function () {
                MaiLiang_1.default.Report_JDKL_Stay_JDKL_Time(null, null);
            });
        }, function (res) {
            console.log("GameUI 买量数据上报失败");
        });
        WXAPI_1.default.Set_JDKL_Share_JDKL_Menu("", "", function () {
        }, function () {
        }, function () {
        });
        WudianMgr_1.default.Update_JDKL_IpBlockState();
        CachedWXBannerAd_1.default.pre_JDKL_loadBanner();
        WXAPI_1.default.check_JDKL_Update();
    };
    Game_JDKL_Mgr.prototype.onStart = function () {
        this.preCreateGame();
    };
    Game_JDKL_Mgr.prototype.preCreateGame = function () {
        //todo：这里添加初始化主场景的代码。EventMgr.instance.dispatch(EventDef.App_CloseFirstLoadingView); 添加到你的关卡加载完成的回调中，关闭加载界面
        var self = this;
        ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.Main_JDKL_View, null, function () {
            ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.LeftPopAd_JDKL_View, null, function () {
                EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.App_CloseFirst_JDKL_LoadingView);
            });
            SoundMgr_1.default.instance.play_JDKL_BGM("bgm");
        });
    };
    //游戏存档,仅当作示例，实际存档根据实际项目各自实现
    Game_JDKL_Mgr.prototype.save_JDKL_Game_JDKL_Data = function () {
        HttpUnit_1.default.save_JDKL_Game_JDKL_Data(User_1.default.get_JDKL_SaveData(), function (res) {
            if (res.code == 1) {
                console.log("存档成功");
            }
            else {
                console.log("存档失败");
            }
        }, function (res) {
            console.log("存档失败");
        });
    };
    Game_JDKL_Mgr.prototype.startGame = function (onComplate) {
        var _this = this;
        Laya.Scene3D.load("subRes/LayaScene_Game/Conventional/Game.ls", Laya.Handler.create(this, function (scene) {
            Laya.stage.addChild(scene);
            _this._curLevel = scene.addComponent(Level_1.default);
            var levelConfigData = LevelConfig_1.default.getInstance().getLevelConfigDataByLevelNum(User_1.default.get_JDKL_LeveNum());
            _this._curLevel.startGame(levelConfigData);
            ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.Battle_JDKL_View, {
                levelNum: levelConfigData.levelId,
            }, function () {
                if (null != onComplate) {
                    onComplate();
                }
            });
        }));
    };
    Game_JDKL_Mgr.prototype.destroyGame = function (onComplate) {
        if (null != this._curLevel) {
            var self = this;
            var gameScene_1 = this._curLevel.Sprite3D;
            gameScene_1.active = false;
            Laya.timer.frameOnce(1, this, function () {
                gameScene_1.destroy(true);
                self._curLevel = null;
                if (null != onComplate) {
                    onComplate();
                }
            });
        }
    };
    Game_JDKL_Mgr._instance = null;
    return Game_JDKL_Mgr;
}(Laya.Script));
exports.default = Game_JDKL_Mgr;
},{"../CachedWXBannerAd":3,"../Config/LevelConfig":6,"../Event/EventDef":9,"../Event/EventMgr":10,"../GamePlay/Level":20,"../MaiLiangAPI/MaiLiang":37,"../Net/HttpUnit":44,"../User/User":60,"../WXAPI":87,"./SoundMgr":40,"./ViewMgr":41,"./WudianMgr":42}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Sound_JDKL_Mgr = /** @class */ (function () {
    function Sound_JDKL_Mgr() {
        this._enabled = true;
    }
    Object.defineProperty(Sound_JDKL_Mgr.prototype, "Enabled", {
        get: function () {
            return this._enabled;
        },
        set: function (e) {
            if (!e) {
                this.stop_JDKL_BGM();
            }
            this._enabled = e;
        },
        enumerable: true,
        configurable: true
    });
    Sound_JDKL_Mgr.prototype.get_JDKL_SoundUrl = function (name) {
        var url = Sound_JDKL_Mgr.soundResPath + name + ".mp3";
        return url;
    };
    Sound_JDKL_Mgr.prototype.play_JDKL_Sound = function (name) {
        if (!this._enabled)
            return;
        var url = this.get_JDKL_SoundUrl(name);
        if (Laya.Browser.onMiniGame) {
            var sound = laya.utils.Pool.getItem(name);
            if (sound == null) {
                sound = wx.createInnerAudioContext();
                sound.src = Sound_JDKL_Mgr.soundResPath + name + ".mp3";
                sound.onEnded(function () {
                    laya.utils.Pool.recover(name, sound);
                    sound.offEnded();
                });
            }
            sound.play();
        }
        else {
            Laya.SoundManager.playSound(url, 1);
        }
    };
    Sound_JDKL_Mgr.prototype.play_JDKL_BGM = function (name) {
        if (!this._enabled)
            return;
        var url = this.get_JDKL_SoundUrl(name);
        if (Laya.Browser.onMiniGame) {
            if (!this.bgm) {
                this.bgm = wx.createInnerAudioContext();
            }
            this.bgm.stop();
            this.bgm.src = url;
            this.bgm.loop = true;
            this.bgm.play();
        }
        else {
            Laya.SoundManager.playMusic(url, 0);
        }
    };
    Sound_JDKL_Mgr.prototype.stop_JDKL_BGM = function () {
        if (Laya.Browser.onMiniGame) {
            if (this.bgm) {
                this.bgm.stop();
            }
        }
        else {
            Laya.SoundManager.stopMusic();
        }
    };
    Sound_JDKL_Mgr.soundResPath = "subRes/sound/";
    Sound_JDKL_Mgr.instance = new Sound_JDKL_Mgr();
    return Sound_JDKL_Mgr;
}());
exports.default = Sound_JDKL_Mgr;
},{}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var View_JDKL_Def;
(function (View_JDKL_Def) {
    View_JDKL_Def["None"] = "";
    View_JDKL_Def["TipsView"] = "View/TipsView.json";
    View_JDKL_Def["Click_JDKL_GetPrize"] = "View/ClickGetPrize.json";
    //todo:添加你的界面
    View_JDKL_Def["Main_JDKL_View"] = "View/MainView.json";
    View_JDKL_Def["Battle_JDKL_View"] = "View/BattleView.json";
    View_JDKL_Def["More_JDKL_GameView"] = "View/MoreGameView.json";
    View_JDKL_Def["LeftPopAd_JDKL_View"] = "View/LeftPopAdView.json";
    View_JDKL_Def["Weapon_JDKL_View"] = "View/WeaponView.json";
    View_JDKL_Def["GameOver_JDKL_View"] = "View/GameOver.json";
    View_JDKL_Def["GameOver_JDKL_RewardView"] = "View/GameOverReward.json";
    View_JDKL_Def["Revive_JDKL_View"] = "View/ReviveView.json";
})(View_JDKL_Def = exports.View_JDKL_Def || (exports.View_JDKL_Def = {}));
//界面管理器
var View_JDKL_Mgr = /** @class */ (function () {
    function View_JDKL_Mgr() {
        this._views = {};
    }
    View_JDKL_Mgr.prototype.open_JDKL_View = function (viewType, data, oncomplate) {
        if (this._views[viewType]) {
            var view = this._views[viewType];
            var coms = view._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        viewBase.open_JDKL_View(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
            return;
        }
        var viewUrl = String(viewType);
        var self = this;
        Laya.Scene.load(viewUrl, Laya.Handler.create(this, function (owner) {
            Laya.stage.addChild(owner);
            var view = owner;
            self._views[viewType] = view;
            var coms = owner._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        element._viewDef = viewType;
                        viewBase.open_JDKL_View(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
        }));
    };
    View_JDKL_Mgr.prototype.close_JDKL_View = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var owner = view;
            var coms = owner._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.onClose();
                        break;
                    }
                }
            }
            view.removeSelf();
            view.destroy();
            this._views[viewType] = null;
        }
    };
    View_JDKL_Mgr.prototype.Show_JDKL_View = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.show();
                        break;
                    }
                }
            }
        }
    };
    View_JDKL_Mgr.prototype.hide_JDKL_View = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.hide();
                        break;
                    }
                }
            }
        }
    };
    View_JDKL_Mgr.prototype.get_JDKL_View = function (viewType) {
        return this._views[viewType];
    };
    View_JDKL_Mgr.prototype.show_JDKL_Tips = function (msg) {
        this.open_JDKL_View(View_JDKL_Def.TipsView, msg);
    };
    View_JDKL_Mgr.instance = new View_JDKL_Mgr();
    return View_JDKL_Mgr;
}());
exports.default = View_JDKL_Mgr;
},{}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var WXAPI_1 = require("../WXAPI");
var Wudian_JDKL_Mgr = /** @class */ (function () {
    function Wudian_JDKL_Mgr() {
    }
    Wudian_JDKL_Mgr.IpBlockFlag = function () {
        return Wudian_JDKL_Mgr._ipBlockFlag;
    };
    /**
     * 此方法调用很慢，所以要在游戏初始化的时候调用一次此方法
     *
     * @static
     * @memberof WudianMgr
     */
    Wudian_JDKL_Mgr.Update_JDKL_IpBlockState = function () {
        HttpUnit_1.default.Get_JDKL_Ip_JDKL_Block(function (res) {
            console.log("调用IpBlock接口成功,结果为:", res);
            Wudian_JDKL_Mgr._ipBlockFlag = res.code;
        }, null);
    };
    /**
     * IP是否被屏蔽
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    Wudian_JDKL_Mgr.GetIp_JDKL_Blocked = function () {
        return Wudian_JDKL_Mgr._ipBlockFlag == 0;
    };
    /**
     * 得到用户进入的场景值
     *
     * @static
     * @returns {number}
     * @memberof WudianMgr
     */
    Wudian_JDKL_Mgr.Get_JDKL_Entry_JDKL_Scene = function () {
        return WXAPI_1.default.get_JDKL_Launch_JDKL_OptionsSync().scene == 1006;
    };
    /**
     * 误点开关是否打开，包括了总开关和分时开关
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    Wudian_JDKL_Mgr.Is_JDKL_Switch_JDKL_Open = function () {
        var mainSwitch = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().wudian == 1;
        var isOpenTime = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().wudian_JDKL_TimeAvaliable;
        console.log("误点Flag状态: ", "总开关:", mainSwitch, "打开时间", isOpenTime);
        return mainSwitch && isOpenTime;
    };
    Object.defineProperty(Wudian_JDKL_Mgr, "Wudian_JDKL_Flag", {
        /**
         * 完全封装好的误点Flag
         *
         * @readonly
         * @static
         * @type {boolean}
         * @memberof WudianMgr
         */
        get: function () {
            var mainSwitch = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().wudian == 1;
            var launchScene = WXAPI_1.default.get_JDKL_Launch_JDKL_OptionsSync().scene;
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().wudianSceneList;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            var isOpenTime = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().wudian_JDKL_TimeAvaliable;
            var ipnotBlock = Wudian_JDKL_Mgr._ipBlockFlag == 0;
            /* 测试功能，等删 */
            // ipnotBlock = true;
            console.log("误点Flag状态: ", "总开关:", mainSwitch, "场景进入", noEnterBySearch, "IP未被屏蔽", ipnotBlock, "打开时间", isOpenTime);
            return mainSwitch && noEnterBySearch && ipnotBlock && isOpenTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Wudian_JDKL_Mgr, "No_JDKL_TimeWudian_JDKL_Flag", {
        /**
         * 没有涉及到定时开关的wudianFlag,自行整合按照时间开关的效果
         *
         * @static
         * @returns {boolean}
         * @memberof WudianMgr
         */
        get: function () {
            var mainSwitch = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().wudian == 1;
            var launchScene = WXAPI_1.default.get_JDKL_Launch_JDKL_OptionsSync().scene;
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().wudianSceneList;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            var ipnotBlock = Wudian_JDKL_Mgr._ipBlockFlag == 0;
            /* 测试功能，等删 */
            // ipnotBlock = true;
            console.log("误点Flag状态: ", "总开关:", mainSwitch, "场景进入", noEnterBySearch, "IP未被屏蔽");
            return mainSwitch && noEnterBySearch && ipnotBlock;
        },
        enumerable: true,
        configurable: true
    });
    Wudian_JDKL_Mgr._ipBlockFlag = -1;
    return Wudian_JDKL_Mgr;
}());
exports.default = Wudian_JDKL_Mgr;
},{"../Config/AppSwitchConfig":4,"../Net/HttpUnit":44,"../WXAPI":87}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CryptoJS = require("./aes.js");
var Aes_JDKL_Tools = /** @class */ (function () {
    function Aes_JDKL_Tools() {
    }
    //加密
    Aes_JDKL_Tools._JDKL_encrypt_JDKL_ = function (str) {
        var key = CryptoJS.enc.Utf8.parse(Aes_JDKL_Tools.KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(Aes_JDKL_Tools.IV); //向量iv
        var encrypted = CryptoJS.AES.encrypt(str, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
        return encrypted.toString();
    };
    //解密
    Aes_JDKL_Tools._JDKL_decrypt_JDKL_ = function (str) {
        var key = CryptoJS.enc.Utf8.parse(Aes_JDKL_Tools.KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(Aes_JDKL_Tools.IV); //向量iv
        var decrypted = CryptoJS.AES.decrypt(str, key, { iv: iv, padding: CryptoJS.pad.Pkcs7 });
        return decrypted.toString(CryptoJS.enc.Utf8);
    };
    Aes_JDKL_Tools.KEY = 'b#63fFJ6AvkK3YT*';
    Aes_JDKL_Tools.IV = 'J$f4DU%sNL73M&Go';
    return Aes_JDKL_Tools;
}());
exports.default = Aes_JDKL_Tools;
},{"./aes.js":46}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetConfig_1 = require("./NetConfig");
var User_1 = require("../User/User");
var AesTools_1 = require("./AesTools");
var AppConfig_1 = require("../AppConfig");
var request_JDKL_Data = /** @class */ (function () {
    function request_JDKL_Data() {
        this.meth = "post";
        this.url = "";
        this.onSuccess = null;
        this.onFail = null;
        this.data = {};
    }
    return request_JDKL_Data;
}());
exports.request_JDKL_Data = request_JDKL_Data;
var Http_JDKL_Unit = /** @class */ (function () {
    function Http_JDKL_Unit() {
    }
    Http_JDKL_Unit._JDKL_request_JDKL_ = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = NetConfig_1.default.server_JDKL_Url + req.url;
        }
        var completeFunc = function (res) {
            console.log(res, "http Success");
            if (req.onSuccess) {
                req.onSuccess(res);
            }
            req.onSuccess = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "http fail");
            if (req.onFail) {
                req.onFail(res);
            }
            req.onFail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, Http_JDKL_Unit, completeFunc);
        xhr.once(Laya.Event.ERROR, Http_JDKL_Unit, errorFunc);
        var dataStr = JSON.stringify(req.data);
        if (Laya.Browser.onMiniGame || AppConfig_1.default.on_JDKL_TTMiniGame) {
            req.data.code = User_1.default.code_JDKL_;
        }
        else if (Laya.Browser.onQGMiniGame) //OPPO小游戏
         {
            req.data.oppotoken = User_1.default.code_JDKL_;
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            req.data.code = User_1.default.code_JDKL_;
        }
        else {
            req.data.code = User_1.default.code_JDKL_;
        }
        var time = "time=" + String(Date.now());
        var header = [
            "Content-Type", "application/json",
            "state", NetConfig_1.default.state_JDKL_,
            "gameid", NetConfig_1.default.game_JDKL_id,
            "sign", AesTools_1.default._JDKL_encrypt_JDKL_(time),
        ];
        if (User_1.default.token_JDKL_) {
            header.push("token");
            header.push(User_1.default.token_JDKL_);
        }
        xhr.send(req.url, JSON.stringify(req.data), req.meth, "json", header);
    };
    //todo:这里添加你们和服务器相互的接口
    Http_JDKL_Unit._JDKL_login_JDKL_ = function (onSuccess, onFail) {
        var req = new request_JDKL_Data();
        req.url = NetConfig_1.default.Login;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        Http_JDKL_Unit._JDKL_request_JDKL_(req);
    };
    Http_JDKL_Unit.save_JDKL_Game_JDKL_Data = function (gameData, onSuccess, onFail) {
        var req = new request_JDKL_Data();
        req.url = NetConfig_1.default.Save_JDKL_Game_JDKL_Data;
        req.data.gameData = gameData;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        Http_JDKL_Unit._JDKL_request_JDKL_(req);
    };
    Http_JDKL_Unit.get_JDKL_Game_JDKL_Data = function (onSuccess, onFail) {
        var req = new request_JDKL_Data();
        req.url = NetConfig_1.default.Get_JDKL_User;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        Http_JDKL_Unit._JDKL_request_JDKL_(req);
    };
    /**
     * IP屏蔽方法，需要在NetConfig类中设置IpBlock的接口地址
     * onSuccess方法返回参数的范例为 Object {code: 0, msg: "准一线", time: "1571034447", data: null}
     * @static
     * @memberof HttpUnit
     */
    Http_JDKL_Unit.Get_JDKL_Ip_JDKL_Block = function (onSuccess, onFail) {
        if (-1 != NetConfig_1.default.game_JDKL_id) {
            var req = new request_JDKL_Data();
            req.url = NetConfig_1.default.Ip_JDKL_Block;
            req.onSuccess = onSuccess;
            req.onFail = onFail;
            Http_JDKL_Unit._JDKL_request_JDKL_(req);
        }
    };
    return Http_JDKL_Unit;
}());
exports.default = Http_JDKL_Unit;
},{"../AppConfig":2,"../User/User":60,"./AesTools":43,"./NetConfig":45}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Net_JDKL_Config = /** @class */ (function () {
    function Net_JDKL_Config() {
    }
    Net_JDKL_Config.state_JDKL_ = 0;
    Net_JDKL_Config.game_JDKL_id = 54;
    Net_JDKL_Config.server_JDKL_Url = "https://sysxue.5iape.com";
    Net_JDKL_Config.Login = "/api/login/login/wxclogin";
    Net_JDKL_Config.Save_JDKL_Game_JDKL_Data = "/api/sspd/index/savecd";
    Net_JDKL_Config.Get_JDKL_User = "/api/sspd/index/getuser";
    /* 用来对IP地址进行屏蔽的接口地址，可以使用接口的返回值让某些广告逻辑在微信的审核地区(广州)发生变化 */
    Net_JDKL_Config.Ip_JDKL_Block = "https://sysxue.5iape.com/api/share/ip_select";
    return Net_JDKL_Config;
}());
exports.default = Net_JDKL_Config;
},{}],46:[function(require,module,exports){
var CryptoJS = CryptoJS || function (u, p) {
  var d = {}, l = d.lib = {}, s = function () { }, t = l.Base = { extend: function (a) { s.prototype = this; var c = new s; a && c.mixIn(a); c.hasOwnProperty("init") || (c.init = function () { c.$super.init.apply(this, arguments) }); c.init.prototype = c; c.$super = this; return c }, create: function () { var a = this.extend(); a.init.apply(a, arguments); return a }, init: function () { }, mixIn: function (a) { for (var c in a) a.hasOwnProperty(c) && (this[c] = a[c]); a.hasOwnProperty("toString") && (this.toString = a.toString) }, clone: function () { return this.init.prototype.extend(this) } },
  r = l.WordArray = t.extend({
    init: function (a, c) { a = this.words = a || []; this.sigBytes = c != p ? c : 4 * a.length }, toString: function (a) { return (a || v).stringify(this) }, concat: function (a) { var c = this.words, e = a.words, j = this.sigBytes; a = a.sigBytes; this.clamp(); if (j % 4) for (var k = 0; k < a; k++)c[j + k >>> 2] |= (e[k >>> 2] >>> 24 - 8 * (k % 4) & 255) << 24 - 8 * ((j + k) % 4); else if (65535 < e.length) for (k = 0; k < a; k += 4)c[j + k >>> 2] = e[k >>> 2]; else c.push.apply(c, e); this.sigBytes += a; return this }, clamp: function () {
      var a = this.words, c = this.sigBytes; a[c >>> 2] &= 4294967295 <<
        32 - 8 * (c % 4); a.length = u.ceil(c / 4)
    }, clone: function () { var a = t.clone.call(this); a.words = this.words.slice(0); return a }, random: function (a) { for (var c = [], e = 0; e < a; e += 4)c.push(4294967296 * u.random() | 0); return new r.init(c, a) }
  }), w = d.enc = {}, v = w.Hex = {
    stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++) { var k = c[j >>> 2] >>> 24 - 8 * (j % 4) & 255; e.push((k >>> 4).toString(16)); e.push((k & 15).toString(16)) } return e.join("") }, parse: function (a) {
      for (var c = a.length, e = [], j = 0; j < c; j += 2)e[j >>> 3] |= parseInt(a.substr(j,
        2), 16) << 24 - 4 * (j % 8); return new r.init(e, c / 2)
    }
  }, b = w.Latin1 = { stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++)e.push(String.fromCharCode(c[j >>> 2] >>> 24 - 8 * (j % 4) & 255)); return e.join("") }, parse: function (a) { for (var c = a.length, e = [], j = 0; j < c; j++)e[j >>> 2] |= (a.charCodeAt(j) & 255) << 24 - 8 * (j % 4); return new r.init(e, c) } }, x = w.Utf8 = { stringify: function (a) { try { return decodeURIComponent(escape(b.stringify(a))) } catch (c) { throw Error("Malformed UTF-8 data"); } }, parse: function (a) { return b.parse(unescape(encodeURIComponent(a))) } },
  q = l.BufferedBlockAlgorithm = t.extend({
    reset: function () { this._data = new r.init; this._nDataBytes = 0 }, _append: function (a) { "string" == typeof a && (a = x.parse(a)); this._data.concat(a); this._nDataBytes += a.sigBytes }, _process: function (a) { var c = this._data, e = c.words, j = c.sigBytes, k = this.blockSize, b = j / (4 * k), b = a ? u.ceil(b) : u.max((b | 0) - this._minBufferSize, 0); a = b * k; j = u.min(4 * a, j); if (a) { for (var q = 0; q < a; q += k)this._doProcessBlock(e, q); q = e.splice(0, a); c.sigBytes -= j } return new r.init(q, j) }, clone: function () {
      var a = t.clone.call(this);
      a._data = this._data.clone(); return a
    }, _minBufferSize: 0
  }); l.Hasher = q.extend({
    cfg: t.extend(), init: function (a) { this.cfg = this.cfg.extend(a); this.reset() }, reset: function () { q.reset.call(this); this._doReset() }, update: function (a) { this._append(a); this._process(); return this }, finalize: function (a) { a && this._append(a); return this._doFinalize() }, blockSize: 16, _createHelper: function (a) { return function (b, e) { return (new a.init(e)).finalize(b) } }, _createHmacHelper: function (a) {
      return function (b, e) {
        return (new n.HMAC.init(a,
          e)).finalize(b)
      }
    }
  }); var n = d.algo = {}; return d
}(Math);
(function () {
  var u = CryptoJS, p = u.lib.WordArray; u.enc.Base64 = {
    stringify: function (d) { var l = d.words, p = d.sigBytes, t = this._map; d.clamp(); d = []; for (var r = 0; r < p; r += 3)for (var w = (l[r >>> 2] >>> 24 - 8 * (r % 4) & 255) << 16 | (l[r + 1 >>> 2] >>> 24 - 8 * ((r + 1) % 4) & 255) << 8 | l[r + 2 >>> 2] >>> 24 - 8 * ((r + 2) % 4) & 255, v = 0; 4 > v && r + 0.75 * v < p; v++)d.push(t.charAt(w >>> 6 * (3 - v) & 63)); if (l = t.charAt(64)) for (; d.length % 4;)d.push(l); return d.join("") }, parse: function (d) {
      var l = d.length, s = this._map, t = s.charAt(64); t && (t = d.indexOf(t), -1 != t && (l = t)); for (var t = [], r = 0, w = 0; w <
        l; w++)if (w % 4) { var v = s.indexOf(d.charAt(w - 1)) << 2 * (w % 4), b = s.indexOf(d.charAt(w)) >>> 6 - 2 * (w % 4); t[r >>> 2] |= (v | b) << 24 - 8 * (r % 4); r++ } return p.create(t, r)
    }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
  }
})();
(function (u) {
  function p(b, n, a, c, e, j, k) { b = b + (n & a | ~n & c) + e + k; return (b << j | b >>> 32 - j) + n } function d(b, n, a, c, e, j, k) { b = b + (n & c | a & ~c) + e + k; return (b << j | b >>> 32 - j) + n } function l(b, n, a, c, e, j, k) { b = b + (n ^ a ^ c) + e + k; return (b << j | b >>> 32 - j) + n } function s(b, n, a, c, e, j, k) { b = b + (a ^ (n | ~c)) + e + k; return (b << j | b >>> 32 - j) + n } for (var t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = 0; 64 > x; x++)b[x] = 4294967296 * u.abs(u.sin(x + 1)) | 0; r = r.MD5 = v.extend({
    _doReset: function () { this._hash = new w.init([1732584193, 4023233417, 2562383102, 271733878]) },
    _doProcessBlock: function (q, n) {
      for (var a = 0; 16 > a; a++) { var c = n + a, e = q[c]; q[c] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360 } var a = this._hash.words, c = q[n + 0], e = q[n + 1], j = q[n + 2], k = q[n + 3], z = q[n + 4], r = q[n + 5], t = q[n + 6], w = q[n + 7], v = q[n + 8], A = q[n + 9], B = q[n + 10], C = q[n + 11], u = q[n + 12], D = q[n + 13], E = q[n + 14], x = q[n + 15], f = a[0], m = a[1], g = a[2], h = a[3], f = p(f, m, g, h, c, 7, b[0]), h = p(h, f, m, g, e, 12, b[1]), g = p(g, h, f, m, j, 17, b[2]), m = p(m, g, h, f, k, 22, b[3]), f = p(f, m, g, h, z, 7, b[4]), h = p(h, f, m, g, r, 12, b[5]), g = p(g, h, f, m, t, 17, b[6]), m = p(m, g, h, f, w, 22, b[7]),
        f = p(f, m, g, h, v, 7, b[8]), h = p(h, f, m, g, A, 12, b[9]), g = p(g, h, f, m, B, 17, b[10]), m = p(m, g, h, f, C, 22, b[11]), f = p(f, m, g, h, u, 7, b[12]), h = p(h, f, m, g, D, 12, b[13]), g = p(g, h, f, m, E, 17, b[14]), m = p(m, g, h, f, x, 22, b[15]), f = d(f, m, g, h, e, 5, b[16]), h = d(h, f, m, g, t, 9, b[17]), g = d(g, h, f, m, C, 14, b[18]), m = d(m, g, h, f, c, 20, b[19]), f = d(f, m, g, h, r, 5, b[20]), h = d(h, f, m, g, B, 9, b[21]), g = d(g, h, f, m, x, 14, b[22]), m = d(m, g, h, f, z, 20, b[23]), f = d(f, m, g, h, A, 5, b[24]), h = d(h, f, m, g, E, 9, b[25]), g = d(g, h, f, m, k, 14, b[26]), m = d(m, g, h, f, v, 20, b[27]), f = d(f, m, g, h, D, 5, b[28]), h = d(h, f,
          m, g, j, 9, b[29]), g = d(g, h, f, m, w, 14, b[30]), m = d(m, g, h, f, u, 20, b[31]), f = l(f, m, g, h, r, 4, b[32]), h = l(h, f, m, g, v, 11, b[33]), g = l(g, h, f, m, C, 16, b[34]), m = l(m, g, h, f, E, 23, b[35]), f = l(f, m, g, h, e, 4, b[36]), h = l(h, f, m, g, z, 11, b[37]), g = l(g, h, f, m, w, 16, b[38]), m = l(m, g, h, f, B, 23, b[39]), f = l(f, m, g, h, D, 4, b[40]), h = l(h, f, m, g, c, 11, b[41]), g = l(g, h, f, m, k, 16, b[42]), m = l(m, g, h, f, t, 23, b[43]), f = l(f, m, g, h, A, 4, b[44]), h = l(h, f, m, g, u, 11, b[45]), g = l(g, h, f, m, x, 16, b[46]), m = l(m, g, h, f, j, 23, b[47]), f = s(f, m, g, h, c, 6, b[48]), h = s(h, f, m, g, w, 10, b[49]), g = s(g, h, f, m,
            E, 15, b[50]), m = s(m, g, h, f, r, 21, b[51]), f = s(f, m, g, h, u, 6, b[52]), h = s(h, f, m, g, k, 10, b[53]), g = s(g, h, f, m, B, 15, b[54]), m = s(m, g, h, f, e, 21, b[55]), f = s(f, m, g, h, v, 6, b[56]), h = s(h, f, m, g, x, 10, b[57]), g = s(g, h, f, m, t, 15, b[58]), m = s(m, g, h, f, D, 21, b[59]), f = s(f, m, g, h, z, 6, b[60]), h = s(h, f, m, g, C, 10, b[61]), g = s(g, h, f, m, j, 15, b[62]), m = s(m, g, h, f, A, 21, b[63]); a[0] = a[0] + f | 0; a[1] = a[1] + m | 0; a[2] = a[2] + g | 0; a[3] = a[3] + h | 0
    }, _doFinalize: function () {
      var b = this._data, n = b.words, a = 8 * this._nDataBytes, c = 8 * b.sigBytes; n[c >>> 5] |= 128 << 24 - c % 32; var e = u.floor(a /
        4294967296); n[(c + 64 >>> 9 << 4) + 15] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360; n[(c + 64 >>> 9 << 4) + 14] = (a << 8 | a >>> 24) & 16711935 | (a << 24 | a >>> 8) & 4278255360; b.sigBytes = 4 * (n.length + 1); this._process(); b = this._hash; n = b.words; for (a = 0; 4 > a; a++)c = n[a], n[a] = (c << 8 | c >>> 24) & 16711935 | (c << 24 | c >>> 8) & 4278255360; return b
    }, clone: function () { var b = v.clone.call(this); b._hash = this._hash.clone(); return b }
  }); t.MD5 = v._createHelper(r); t.HmacMD5 = v._createHmacHelper(r)
})(Math);
(function () {
  var u = CryptoJS, p = u.lib, d = p.Base, l = p.WordArray, p = u.algo, s = p.EvpKDF = d.extend({ cfg: d.extend({ keySize: 4, hasher: p.MD5, iterations: 1 }), init: function (d) { this.cfg = this.cfg.extend(d) }, compute: function (d, r) { for (var p = this.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length < q;) { n && s.update(n); var n = s.update(d).finalize(r); s.reset(); for (var a = 1; a < p; a++)n = s.finalize(n), s.reset(); b.concat(n) } b.sigBytes = 4 * q; return b } }); u.EvpKDF = function (d, l, p) {
    return s.create(p).compute(d,
      l)
  }
})();
CryptoJS.lib.Cipher || function (u) {
  var p = CryptoJS, d = p.lib, l = d.Base, s = d.WordArray, t = d.BufferedBlockAlgorithm, r = p.enc.Base64, w = p.algo.EvpKDF, v = d.Cipher = t.extend({
    cfg: l.extend(), createEncryptor: function (e, a) { return this.create(this._ENC_XFORM_MODE, e, a) }, createDecryptor: function (e, a) { return this.create(this._DEC_XFORM_MODE, e, a) }, init: function (e, a, b) { this.cfg = this.cfg.extend(b); this._xformMode = e; this._key = a; this.reset() }, reset: function () { t.reset.call(this); this._doReset() }, process: function (e) { this._append(e); return this._process() },
    finalize: function (e) { e && this._append(e); return this._doFinalize() }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function (e) { return { encrypt: function (b, k, d) { return ("string" == typeof k ? c : a).encrypt(e, b, k, d) }, decrypt: function (b, k, d) { return ("string" == typeof k ? c : a).decrypt(e, b, k, d) } } }
  }); d.StreamCipher = v.extend({ _doFinalize: function () { return this._process(!0) }, blockSize: 1 }); var b = p.mode = {}, x = function (e, a, b) {
    var c = this._iv; c ? this._iv = u : c = this._prevBlock; for (var d = 0; d < b; d++)e[a + d] ^=
      c[d]
  }, q = (d.BlockCipherMode = l.extend({ createEncryptor: function (e, a) { return this.Encryptor.create(e, a) }, createDecryptor: function (e, a) { return this.Decryptor.create(e, a) }, init: function (e, a) { this._cipher = e; this._iv = a } })).extend(); q.Encryptor = q.extend({ processBlock: function (e, a) { var b = this._cipher, c = b.blockSize; x.call(this, e, a, c); b.encryptBlock(e, a); this._prevBlock = e.slice(a, a + c) } }); q.Decryptor = q.extend({
    processBlock: function (e, a) {
      var b = this._cipher, c = b.blockSize, d = e.slice(a, a + c); b.decryptBlock(e, a); x.call(this,
        e, a, c); this._prevBlock = d
    }
  }); b = b.CBC = q; q = (p.pad = {}).Pkcs7 = { pad: function (a, b) { for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, l = [], n = 0; n < c; n += 4)l.push(d); c = s.create(l, c); a.concat(c) }, unpad: function (a) { a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255 } }; d.BlockCipher = v.extend({
    cfg: v.cfg.extend({ mode: b, padding: q }), reset: function () {
      v.reset.call(this); var a = this.cfg, b = a.iv, a = a.mode; if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor; else c = a.createDecryptor, this._minBufferSize = 1; this._mode = c.call(a,
        this, b && b.words)
    }, _doProcessBlock: function (a, b) { this._mode.processBlock(a, b) }, _doFinalize: function () { var a = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) { a.pad(this._data, this.blockSize); var b = this._process(!0) } else b = this._process(!0), a.unpad(b); return b }, blockSize: 4
  }); var n = d.CipherParams = l.extend({ init: function (a) { this.mixIn(a) }, toString: function (a) { return (a || this.formatter).stringify(this) } }), b = (p.format = {}).OpenSSL = {
    stringify: function (a) {
      var b = a.ciphertext; a = a.salt; return (a ? s.create([1398893684,
        1701076831]).concat(a).concat(b) : b).toString(r)
    }, parse: function (a) { a = r.parse(a); var b = a.words; if (1398893684 == b[0] && 1701076831 == b[1]) { var c = s.create(b.slice(2, 4)); b.splice(0, 4); a.sigBytes -= 16 } return n.create({ ciphertext: a, salt: c }) }
  }, a = d.SerializableCipher = l.extend({
    cfg: l.extend({ format: b }), encrypt: function (a, b, c, d) { d = this.cfg.extend(d); var l = a.createEncryptor(c, d); b = l.finalize(b); l = l.cfg; return n.create({ ciphertext: b, key: c, iv: l.iv, algorithm: a, mode: l.mode, padding: l.padding, blockSize: a.blockSize, formatter: d.format }) },
    decrypt: function (a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); return a.createDecryptor(c, d).finalize(b.ciphertext) }, _parse: function (a, b) { return "string" == typeof a ? b.parse(a, this) : a }
  }), p = (p.kdf = {}).OpenSSL = { execute: function (a, b, c, d) { d || (d = s.random(8)); a = w.create({ keySize: b + c }).compute(a, d); c = s.create(a.words.slice(b), 4 * c); a.sigBytes = 4 * b; return n.create({ key: a, iv: c, salt: d }) } }, c = d.PasswordBasedCipher = a.extend({
    cfg: a.cfg.extend({ kdf: p }), encrypt: function (b, c, d, l) {
      l = this.cfg.extend(l); d = l.kdf.execute(d,
        b.keySize, b.ivSize); l.iv = d.iv; b = a.encrypt.call(this, b, c, d.key, l); b.mixIn(d); return b
    }, decrypt: function (b, c, d, l) { l = this.cfg.extend(l); c = this._parse(c, l.format); d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt); l.iv = d.iv; return a.decrypt.call(this, b, c, d.key, l) }
  })
}();
(function () {
  for (var u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = 0; 256 > c; c++)a[c] = 128 > c ? c << 1 : c << 1 ^ 283; for (var e = 0, j = 0, c = 0; 256 > c; c++) { var k = j ^ j << 1 ^ j << 2 ^ j << 3 ^ j << 4, k = k >>> 8 ^ k & 255 ^ 99; l[e] = k; s[k] = e; var z = a[e], F = a[z], G = a[F], y = 257 * a[k] ^ 16843008 * k; t[e] = y << 24 | y >>> 8; r[e] = y << 16 | y >>> 16; w[e] = y << 8 | y >>> 24; v[e] = y; y = 16843009 * G ^ 65537 * F ^ 257 * z ^ 16843008 * e; b[k] = y << 24 | y >>> 8; x[k] = y << 16 | y >>> 16; q[k] = y << 8 | y >>> 24; n[k] = y; e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = 1 } var H = [0, 1, 2, 4, 8,
    16, 32, 64, 128, 27, 54], d = d.AES = p.extend({
      _doReset: function () {
        for (var a = this._key, c = a.words, d = a.sigBytes / 4, a = 4 * ((this._nRounds = d + 6) + 1), e = this._keySchedule = [], j = 0; j < a; j++)if (j < d) e[j] = c[j]; else { var k = e[j - 1]; j % d ? 6 < d && 4 == j % d && (k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255]) : (k = k << 8 | k >>> 24, k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255], k ^= H[j / d | 0] << 24); e[j] = e[j - d] ^ k } c = this._invKeySchedule = []; for (d = 0; d < a; d++)j = a - d, k = d % 4 ? e[j] : e[j - 4], c[d] = 4 > d || 4 >= j ? k : b[l[k >>> 24]] ^ x[l[k >>> 16 & 255]] ^ q[l[k >>>
          8 & 255]] ^ n[l[k & 255]]
      }, encryptBlock: function (a, b) { this._doCryptBlock(a, b, this._keySchedule, t, r, w, v, l) }, decryptBlock: function (a, c) { var d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d; this._doCryptBlock(a, c, this._invKeySchedule, b, x, q, n, s); d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d }, _doCryptBlock: function (a, b, c, d, e, j, l, f) {
        for (var m = this._nRounds, g = a[b] ^ c[0], h = a[b + 1] ^ c[1], k = a[b + 2] ^ c[2], n = a[b + 3] ^ c[3], p = 4, r = 1; r < m; r++)var q = d[g >>> 24] ^ e[h >>> 16 & 255] ^ j[k >>> 8 & 255] ^ l[n & 255] ^ c[p++], s = d[h >>> 24] ^ e[k >>> 16 & 255] ^ j[n >>> 8 & 255] ^ l[g & 255] ^ c[p++], t =
          d[k >>> 24] ^ e[n >>> 16 & 255] ^ j[g >>> 8 & 255] ^ l[h & 255] ^ c[p++], n = d[n >>> 24] ^ e[g >>> 16 & 255] ^ j[h >>> 8 & 255] ^ l[k & 255] ^ c[p++], g = q, h = s, k = t; q = (f[g >>> 24] << 24 | f[h >>> 16 & 255] << 16 | f[k >>> 8 & 255] << 8 | f[n & 255]) ^ c[p++]; s = (f[h >>> 24] << 24 | f[k >>> 16 & 255] << 16 | f[n >>> 8 & 255] << 8 | f[g & 255]) ^ c[p++]; t = (f[k >>> 24] << 24 | f[n >>> 16 & 255] << 16 | f[g >>> 8 & 255] << 8 | f[h & 255]) ^ c[p++]; n = (f[n >>> 24] << 24 | f[g >>> 16 & 255] << 16 | f[h >>> 8 & 255] << 8 | f[k & 255]) ^ c[p++]; a[b] = q; a[b + 1] = s; a[b + 2] = t; a[b + 3] = n
      }, keySize: 8
    }); u.AES = p._createHelper(d)
})();

module.exports = CryptoJS;
},{}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var OPPO_JDKL_API = /** @class */ (function () {
    function OPPO_JDKL_API() {
    }
    Object.defineProperty(OPPO_JDKL_API, "Banner_JDKL_Instance", {
        get: function () {
            return OPPO_JDKL_API._banner;
        },
        enumerable: true,
        configurable: true
    });
    OPPO_JDKL_API.Login_JDKL_ = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].login({
                success: function (res) {
                    var token = res.data.token;
                    onSuccess(token);
                    console.log("OPPO 登陆成功,获取到 token : " + token);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                },
                fail: function (res) {
                    console.log("OPPO 登陆失败", res);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                }
            });
        }
    };
    OPPO_JDKL_API.init_JDKL_AdService = function (onSuccess, onFail, onComplete) {
        Laya.Browser.window["qg"].initAdService({
            appId: AppConfig_1.default.App_JDKL_ID,
            isDebug: false,
            success: function (res) {
                console.log("oppo initAdService success");
                if (onSuccess) {
                    onSuccess(res);
                }
            },
            fail: function (res) {
                console.log("oppo initAdService fail: ", res.code, res.msg);
                if (onFail) {
                    onFail(res);
                }
            },
            complete: function (res) {
                console.log("oppo initAdService complete");
                if (onComplete) {
                    onComplete(res);
                }
            }
        });
    };
    OPPO_JDKL_API.show_JDKL_Rewarded_JDKL_VideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var videoAd = Laya.Browser.window["qg"].createRewardedVideoAd({
                posId: OPPO_JDKL_API.adUn_JDKL_itId,
            });
            videoAd.onLoad(function () {
                console.log("oppo 视频广告加载完成");
                videoAd.show();
            });
            videoAd.onVideoStart(function () {
                console.log("oppo 视频广告开始播放");
            });
            videoAd.onClose(function (res) {
                if (res.isEnded) {
                    console.log("oppo 视频广告观看 完成");
                    onAdClose(true);
                }
                else {
                    console.log("oppo 视频广告观看 未完成");
                    onAdClose(false);
                }
                videoAd.destroy();
            });
            videoAd.onError(function (err) {
                console.log("oppo 视频广告获取失败", err);
                videoAd.destroy();
                onFailed();
            });
            videoAd.load();
        }
        else {
            onAdClose(true);
        }
    };
    OPPO_JDKL_API.navigate_JDKL_ToMiniProgram = function (pkgName, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQGMiniGame) {
            console.log("OPPO 跳转游戏： " + pkgName);
            Laya.Browser.window["qg"].navigateToMiniGame({
                pkgName: pkgName,
                path: path,
                extraData: {
                    from: AppConfig_1.default.App_JDKL_ID
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    OPPO_JDKL_API.show_JDKL_Interstitial_JDKL_Ad = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var insertAd = qg.createInsertAd({
                posId: OPPO_JDKL_API.Ins_JDKL_AdUnitId
            });
            insertAd.load();
            insertAd.onLoad(function () {
                console.log("插屏广告加载完成");
                insertAd.show();
            });
            insertAd.onShow(function () {
                console.log("插屏广告显示成功");
            });
            insertAd.onError(function (err) {
                console.log("插屏广告拉取失败", err);
                insertAd.destroy();
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    OPPO_JDKL_API.show_JDKL_Bannaer = function () {
        if (OPPO_JDKL_API._banner) {
            OPPO_JDKL_API._banner.show();
            return;
        }
        var bannerAd = qg.createBannerAd({
            posId: OPPO_JDKL_API.banner_JDKL_AdUnitId
        });
        bannerAd.show();
        OPPO_JDKL_API._banner = bannerAd;
    };
    OPPO_JDKL_API.hide_JDKL_Banner = function () {
        if (OPPO_JDKL_API._banner) {
            OPPO_JDKL_API._banner.hide();
        }
    };
    OPPO_JDKL_API.get_JDKL_LaunchOptions_JDKL_Sync = function () {
        return {};
    };
    OPPO_JDKL_API.share_JDKL_ = function (complate, titel, imageUrl) {
        complate(false);
    };
    OPPO_JDKL_API.create_JDKL_DesktopIcon = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].hasShortcutInstalled({
                success: function (res) {
                    if (res == false) {
                        Laya.Browser.window["qg"].installShortcut({
                            success: function () {
                                if (onSuccess) {
                                    onSuccess();
                                }
                            },
                            fail: function (err) {
                                if (onFail) {
                                    onFail();
                                }
                                console.log("创建桌面图标失败！！！！", err);
                                for (var key in err) {
                                    console.log(key, err);
                                }
                            },
                            complete: function () {
                            }
                        });
                    }
                    else {
                        console.log("桌面图标已存在！！！！");
                        if (onFail) {
                            onFail();
                        }
                    }
                },
                fail: function (err) {
                    if (onFail) {
                        onFail();
                    }
                    console.log("判断桌面图标是否存在失败！！！", err);
                    for (var key in err) {
                        console.log(key, err);
                    }
                },
                complete: function () {
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    OPPO_JDKL_API.adUn_JDKL_itId = "134292";
    OPPO_JDKL_API.banner_JDKL_AdUnitId = "134291";
    OPPO_JDKL_API.Ins_JDKL_AdUnitId = "134294";
    OPPO_JDKL_API.Open_JDKL_ScreenAdUnitId = "134293";
    OPPO_JDKL_API._banner = null;
    return OPPO_JDKL_API;
}());
exports.default = OPPO_JDKL_API;
},{"./AppConfig":2}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ObjPool = /** @class */ (function () {
    function ObjPool() {
        this._pool = new Array();
        this._createCaller = null;
        this._createFunc = null;
    }
    //从对象池中获取对象,如果不传入key，则直接返回池中最后一个对象
    //如果对象池为空，并没有 create 函数，则返回 null
    //如果对象池为空，有 create 函数，则调用  create 实例化对象并返回。
    ObjPool.prototype.get = function (key) {
        var obj = null;
        if (null == key) {
            obj = this._pool.pop();
        }
        else {
            for (var i = 0; i < this._pool.length; ++i) {
                if (this._pool[i].OP_Key() == key) {
                    obj = this._pool[i];
                    this._pool.splice(i, 1);
                    break;
                }
            }
        }
        if (obj) {
            obj.OP_Init();
        }
        else {
            if (this._createFunc) {
                obj = this._createFunc.call(this._createCaller, [key]);
                obj.OP_Init();
            }
        }
        return obj;
    };
    //回收对象
    ObjPool.prototype.recover = function (o) {
        o.OP_Reset();
        for (var i = 0; i < this._pool.length; ++i) {
            if (this._pool[i] == o) {
                return;
            }
        }
        this._pool.push(o);
    };
    //清空对象池
    ObjPool.prototype.clear = function () {
        for (var i = 0; i < this._pool.length; ++i) {
            this._pool[i].OP_OnClear(); //调用对象的清理函数，释放对象自身维护的资源
        }
        this._pool.splice(0);
    };
    ObjPool.prototype.setCreateFunc = function (caller, createFunc) {
        this._createCaller = caller;
        this._createFunc = createFunc;
    };
    return ObjPool;
}());
exports.default = ObjPool;
},{}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var QQMini_JDKL_GameAPI = /** @class */ (function () {
    function QQMini_JDKL_GameAPI() {
    }
    QQMini_JDKL_GameAPI.Login_JDKL_ = function (onSuccess, onFail) {
        if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    QQMini_JDKL_GameAPI.onRewarded_JDKL_VideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    QQMini_JDKL_GameAPI.onRewarded_JDKL_VideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (QQMini_JDKL_GameAPI._onRewardedVideoAdFailed) {
            QQMini_JDKL_GameAPI._onRewardedVideoAdFailed();
        }
    };
    QQMini_JDKL_GameAPI.onRewardedVideo_JDKL_AdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (QQMini_JDKL_GameAPI._onRewardedVideoAdClose) {
                QQMini_JDKL_GameAPI._onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (QQMini_JDKL_GameAPI._onRewardedVideoAdClose) {
                QQMini_JDKL_GameAPI._onRewardedVideoAdClose(false);
            }
        }
    };
    QQMini_JDKL_GameAPI.regRewarded_JDKL_VideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(QQMini_JDKL_GameAPI.onRewarded_JDKL_VideoAdLoad);
        rewardedVideoAd.onError(QQMini_JDKL_GameAPI.onRewarded_JDKL_VideoAdError);
        rewardedVideoAd.onClose(QQMini_JDKL_GameAPI.onRewardedVideo_JDKL_AdClose);
        QQMini_JDKL_GameAPI._isRegRewardedVideoAdEvent = true;
    };
    QQMini_JDKL_GameAPI.show_JDKL_RewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            QQMini_JDKL_GameAPI._onRewardedVideoAdClose = onAdClose;
            QQMini_JDKL_GameAPI._onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["qq"].createRewardedVideoAd({
                adUnitId: QQMini_JDKL_GameAPI.adUnitId_JDKL_,
            });
            if (!QQMini_JDKL_GameAPI._isRegRewardedVideoAdEvent) {
                QQMini_JDKL_GameAPI.regRewarded_JDKL_VideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    QQMini_JDKL_GameAPI.navigate_JDKL_ToMini_JDKL_Program = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQQMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["qq"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    QQMini_JDKL_GameAPI.share_JDKL_ = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onQQMiniGame) {
            QQMini_JDKL_GameAPI._onShow = function () {
                Laya.Browser.window["qq"].offShow(QQMini_JDKL_GameAPI._onShow);
                QQMini_JDKL_GameAPI._onShow = null;
                var c = Date.now() - _this._lastShareTime;
                if (complate) {
                    if (Date.now() - _this._lastShareTime > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["qq"].onShow(QQMini_JDKL_GameAPI._onShow);
            QQMini_JDKL_GameAPI._lastShareTime = Date.now();
            Laya.Browser.window["qq"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    QQMini_JDKL_GameAPI.show_JDKL_Interstitial_JDKL_Ad = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            var interstitialAd = Laya.Browser.window["qq"].createInterstitialAd({
                adUnitId: QQMini_JDKL_GameAPI.Ins_JDKL_AdUnitId,
            });
            interstitialAd.onLoad(function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    if (onFailed) {
                        onFailed();
                    }
                });
            });
            interstitialAd.onError(function (err) {
                console.log('插屏广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            interstitialAd.onClose(function () {
                console.log('插屏广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    QQMini_JDKL_GameAPI.LoadApp_JDKL_BoxAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            QQMini_JDKL_GameAPI.mAppboxAd = Laya.Browser.window["qq"].createAppBox({
                adUnitId: QQMini_JDKL_GameAPI.App_JDKL_BoxId,
            });
            QQMini_JDKL_GameAPI.mAppboxAd.load().then(function () {
                console.log('盒子广告 加载完成');
            });
            QQMini_JDKL_GameAPI.mAppboxAd.onError(function (err) {
                console.log('盒子广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            QQMini_JDKL_GameAPI.mAppboxAd.onClose(function () {
                console.log('盒子广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    QQMini_JDKL_GameAPI.showAppBoxAd = function (onFailed) {
        if (QQMini_JDKL_GameAPI.mAppboxAd) {
            console.log("显示盒子广告");
            QQMini_JDKL_GameAPI.mAppboxAd.show().catch(function (err) {
                console.log('盒子广告 显示失败 ：' + err);
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            QQMini_JDKL_GameAPI.LoadApp_JDKL_BoxAd(function (onAdClose) {
            }, function (onFailed) {
            });
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene	number	启动小游戏的场景值
     * query	Object	启动小游戏的 query 参数
     * shareTicket	string	shareTicket，详见获取更多转发信息
     * referrerInfo	object	来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/qq.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof QQMiniGameAPI
     */
    QQMini_JDKL_GameAPI.get_JDKL_Launch_JDKL_OptionsSync = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onQQMiniGame) {
            var obj_1 = Laya.Browser.window["qq"].getLaunchOptionsSync();
            console.log("场景值 " + obj_1.scene);
            var str = JSON.stringify(obj_1.query);
            console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            console.log("Query参数：key " + key);
            console.log("ShareTicket " + obj_1.shareTicket);
            console.log("ReferrerInfo.appId " + obj_1.referrerInfo.appId);
            console.log("ReferrerInfo.extraData " + obj_1.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof QQMiniGameAPI
     */
    QQMini_JDKL_GameAPI.Set_JDKL_Share_JDKL_Menu = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onQQMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["qq"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["qq"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    QQMini_JDKL_GameAPI.adUnitId_JDKL_ = ""; //激励视频Id
    QQMini_JDKL_GameAPI.banner_JDKL_AdUnitId = ""; //banner广告Id
    QQMini_JDKL_GameAPI.Ins_JDKL_AdUnitId = ""; //插屏广告Id
    QQMini_JDKL_GameAPI.App_JDKL_BoxId = ""; //盒子广告Id
    //-------------------------激励视频---------------------------------
    QQMini_JDKL_GameAPI._isRegRewardedVideoAdEvent = false;
    QQMini_JDKL_GameAPI._onRewardedVideoAdFailed = null;
    QQMini_JDKL_GameAPI._onRewardedVideoAdClose = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    QQMini_JDKL_GameAPI._onShow = null;
    QQMini_JDKL_GameAPI._lastShareTime = 0;
    //--------------------盒子广告---------------------------------------
    QQMini_JDKL_GameAPI.mAppboxAd = null;
    return QQMini_JDKL_GameAPI;
}());
exports.default = QQMini_JDKL_GameAPI;
},{}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var User_1 = require("../User/User");
var Utilit_1 = require("../Utilit");
var ALD_1 = require("../ALD");
var WXAPI_1 = require("../WXAPI");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var Share_JDKL_Ad = /** @class */ (function () {
    function Share_JDKL_Ad() {
    }
    Share_JDKL_Ad.refresh_JDKL_Ad = function (complate) {
        Share_JDKL_Ad.get_JDKL_AdPos_JDKL_Data(function (res) {
            if (1 == res.code) {
                console.log("获取分享广告数据成功");
                Share_JDKL_Ad._ad_JDKL_Position = res.result;
                if (complate) {
                    complate(true);
                }
            }
            else {
                console.log("获取分享广告数据失败 ： " + res.msg);
                if (complate) {
                    complate(false);
                }
            }
        }, function (res) {
            console.log("获取分享广告数据失败");
            if (complate) {
                complate(false);
            }
        });
    };
    Share_JDKL_Ad.get_JDKL_ADVs = function (locationid, complate, useRandom, useLocalRandom) {
        if (!Share_JDKL_Ad.isNeed_JDKL_ShowAd()) {
            complate(null);
            return;
        }
        useRandom = null == useRandom ? Share_JDKL_Ad.Use_JDKL_RandomAdPos : useRandom;
        useLocalRandom = null == useLocalRandom ? true : useRandom;
        if (useRandom) {
            locationid = Share_JDKL_Ad.get_JDKL_Random_JDKL_ADPosID();
        }
        var datas = Share_JDKL_Ad._adv[locationid];
        if (datas) {
            for (var i = datas.length - 1; i >= 0; --i) {
                var randomIndex = Math.floor(Math.random() * datas.length);
                var curValue = datas[i];
                var randomValue = datas[randomIndex];
                datas[randomIndex] = curValue;
                datas[i] = randomValue;
            }
            complate(datas);
        }
        else {
            Share_JDKL_Ad.get_JDKL_ADVData(locationid, function (res) {
                if (1 == res.code) {
                    Share_JDKL_Ad._adv[locationid] = res.result;
                    datas = Share_JDKL_Ad._adv[locationid];
                    if (datas && Utilit_1.default.is_JDKL_Iphone()) {
                        for (var i = 0; i < datas.length; ++i) {
                            var data = datas[i];
                            for (var j = 0; j < Share_JDKL_Ad._iphone_JDKL_IgnoreAppIds.length; ++j) {
                                if (data.appid == Share_JDKL_Ad._iphone_JDKL_IgnoreAppIds[j]) {
                                    datas.splice(i, 1);
                                    --i;
                                    break;
                                }
                            }
                        }
                    }
                    if (datas && useLocalRandom) {
                        for (var i = datas.length - 1; i >= 0; --i) {
                            var randomIndex = Math.floor(Math.random() * datas.length);
                            var curValue = datas[i];
                            var randomValue = datas[randomIndex];
                            datas[randomIndex] = curValue;
                            datas[i] = randomValue;
                        }
                    }
                    if (complate) {
                        complate(datas);
                    }
                }
                else {
                    if (complate) {
                        complate(null);
                    }
                }
            }, function (res) {
                if (complate) {
                    complate(null);
                }
            });
        }
    };
    Share_JDKL_Ad.report_JDKL_User_JDKL_Click = function (advid) {
        Share_JDKL_Ad.req_JDKL_User_JDKL_Click(advid, function (res) {
            if (1 == res.code) {
                console.log("点击广告上报成功");
            }
            else {
                console.log("点击广告上报失败");
            }
        }, function (res) {
            console.log("点击广告上报失败");
        });
    };
    Share_JDKL_Ad.get_JDKL_Random_JDKL_ADPosID = function () {
        return Share_JDKL_Ad.Ad_JDKL_Locationids[Math.floor(Math.random() * Share_JDKL_Ad.Ad_JDKL_Locationids.length)];
    };
    Share_JDKL_Ad._JDKL_request_JDKL_ = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = Share_JDKL_Ad.main_JDKL_Url + req.url;
        }
        var completeFunc = function (res) {
            console.log(res, "http Success");
            res = JSON.parse(res);
            if (req.onSuccess) {
                req.onSuccess(res);
            }
            req.onSuccess = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "http fail");
            if (req.onFail) {
                req.onFail(res);
            }
            req.onFail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, Share_JDKL_Ad, completeFunc);
        xhr.once(Laya.Event.ERROR, Share_JDKL_Ad, errorFunc);
        if (req.meth == "get") {
            var para = "";
            for (var _i = 0, _a = Object.keys(req.data); _i < _a.length; _i++) {
                var key = _a[_i];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            req.url = req.url + "?" + para;
            var header = [
                "versions", AppConfig_1.default.Versions_JDKL_,
            ];
            xhr.send(req.url, null, req.meth, null, header);
        }
        else {
            var para = "";
            for (var _b = 0, _c = Object.keys(req.data); _b < _c.length; _b++) {
                var key = _c[_b];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            var header = [
                "Content-Type", "application/x-www-form-urlencoded",
                "versions", AppConfig_1.default.Versions_JDKL_,
            ];
            xhr.send(req.url, para, req.meth, null, header);
        }
    };
    Share_JDKL_Ad.get_JDKL_AdPos_JDKL_Data = function (onSuccess, onFail) {
        var req = new HttpUnit_1.request_JDKL_Data();
        req.url = Share_JDKL_Ad.get_JDKL_AdPostion;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.App_JDKL_ID;
        req.meth = "get";
        Share_JDKL_Ad._JDKL_request_JDKL_(req);
    };
    Share_JDKL_Ad.req_JDKL_User_JDKL_Click = function (advid, onSuccess, onFail) {
        var req = new HttpUnit_1.request_JDKL_Data();
        req.url = Share_JDKL_Ad.user_JDKL_Click;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.App_JDKL_ID;
        req.data.uid = User_1.default.open_JDKL_Id;
        req.data.advid = advid;
        Share_JDKL_Ad._JDKL_request_JDKL_(req);
    };
    Share_JDKL_Ad.get_JDKL_ADVData = function (locationid, onSuccess, onFail) {
        var req = new HttpUnit_1.request_JDKL_Data();
        req.url = Share_JDKL_Ad.get_JDKL_Adv;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.App_JDKL_ID;
        req.data.locationid = locationid;
        req.data.preview = 0;
        Share_JDKL_Ad._JDKL_request_JDKL_(req);
    };
    /**
         * 随机跳转的方法，会从广告列表中随机得到一个AppId并且跳转,输入的参数为概率，大小在0-1之间
         * 如果概率大于1，则自动将其除以100，所以千万注意！
         *
         * @static
         * @param {number} [rate=1]
         * @memberof ShareAd
         */
    Share_JDKL_Ad.Random_JDKL_Jump = function (rate) {
        if (rate === void 0) { rate = 1; }
        console.log("随机跳转,rate：" + rate);
        if (rate > 1) {
            rate = rate / 100;
        }
        var rd = Math.random();
        if (rd <= rate) {
            var adLocationID = Share_JDKL_Ad.LoopAd_JDKL_LocationID;
            var Locations = [
                Share_JDKL_Ad.LoopAd_JDKL_LocationID,
                Share_JDKL_Ad.InsertAd_JDKL_LocationID,
                Share_JDKL_Ad.BannerAd_JDKL_LocationID,
                Share_JDKL_Ad.AniAd_JDKL_LocationID,
            ];
            if (Share_JDKL_Ad.Use_JDKL_RandomAdPos) {
                for (var i = 0; i < Share_JDKL_Ad.Ad_JDKL_Locationids.length; ++i) {
                    Locations.push(Share_JDKL_Ad.Ad_JDKL_Locationids[i]);
                }
            }
            adLocationID = Locations[Math.floor(Math.random() * Locations.length)];
            var datas = Share_JDKL_Ad.get_JDKL_ADVs(adLocationID, function (datas) {
                if (datas) {
                    var rd_1 = Math.floor(datas.length * Math.random());
                    var data_1 = datas[rd_1];
                    console.log("跳转游戏： " + data_1.title);
                    WXAPI_1.default.navigate_JDKL_ToMini_JDKL_Program(data_1.appid, data_1.url, function (res) {
                        console.log("跳转成功");
                        Share_JDKL_Ad.report_JDKL_User_JDKL_Click(data_1.appid);
                        ALD_1.default.aldSend_JDKL_ReportAdClick_JDKL_Success(data_1);
                    }, function (res) {
                        console.log("跳转失败");
                        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail);
                        if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                            console.log("用户取消跳转");
                            ALD_1.default.ald_JDKL_SendReport_JDKL_AdClickFail(data_1);
                        }
                    }, function (res) {
                        console.log("跳转完成");
                    });
                }
            }, true);
        }
    };
    Share_JDKL_Ad.isNeed_JDKL_ShowAd = function () {
        if (0 == AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().adSwitch)
            return false;
        var mailiang = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().mailiang;
        var mailianglist = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().mailiang_JDKL_list;
        var mailiangscenelist = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().mailiang_JDKL_SceneList;
        if (1 == mailiang) {
            if (Laya.Browser.onMiniGame) {
                var flag = WXAPI_1.default.get_JDKL_Launch_JDKL_OptionsSync().query['chid'];
                if (null != flag && null != mailianglist && mailianglist.length > 0) {
                    for (var i = 0; i < mailianglist.length; ++i) {
                        if (flag == mailianglist[i]) {
                            return false;
                        }
                    }
                }
                var scene = WXAPI_1.default.get_JDKL_Launch_JDKL_OptionsSync().scene;
                if (null != scene && null != mailiangscenelist && mailiangscenelist.length > 0) {
                    for (var i = 0; i < mailiangscenelist.length; ++i) {
                        if (scene == mailiangscenelist[i]) {
                            return false;
                        }
                    }
                }
            }
            else if (Laya.Browser.onQGMiniGame) {
                return false;
            }
            else if (Laya.Browser.onQQBrowser) {
                return false;
            }
        }
        return true;
    };
    Share_JDKL_Ad.main_JDKL_Url = "https://swwww.mrkzx.cn";
    Share_JDKL_Ad.get_JDKL_AdPostion = "/v1.1/api/getAdPosition.html"; //获取广告位列表
    Share_JDKL_Ad.get_JDKL_Adv = "/v1.1/api/getAdv.html"; //获取第三方广告列表
    Share_JDKL_Ad.user_JDKL_Click = "/v1.1/api/userclick.html"; //用户点击上报
    Share_JDKL_Ad.LoopAd_JDKL_LocationID = 192;
    Share_JDKL_Ad.BannerAd_JDKL_LocationID = 194;
    Share_JDKL_Ad.InsertAd_JDKL_LocationID = -1;
    Share_JDKL_Ad.AniAd_JDKL_LocationID = 195;
    Share_JDKL_Ad.Use_JDKL_RandomAdPos = false;
    Share_JDKL_Ad.Ad_JDKL_Locationids = [
        192,
    ];
    Share_JDKL_Ad._ad_JDKL_Position = {};
    Share_JDKL_Ad._adv = {};
    Share_JDKL_Ad._iphone_JDKL_IgnoreAppIds = [
        "wx2d2acce3c45f4ddf",
        "wxeb93c1298ec7c62b",
        "wx8e142a9ae9318118",
        "wx1534fa9fa9ad6167"
    ];
    return Share_JDKL_Ad;
}());
exports.default = Share_JDKL_Ad;
},{"../ALD":1,"../AppConfig":2,"../Config/AppSwitchConfig":4,"../Event/EventDef":9,"../Event/EventMgr":10,"../Net/HttpUnit":44,"../User/User":60,"../Utilit":61,"../WXAPI":87}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var Banner_JDKL_AdView = /** @class */ (function (_super) {
    __extends(Banner_JDKL_AdView, _super);
    function Banner_JDKL_AdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPos_JDKL_ID = ShareAd_1.default.BannerAd_JDKL_LocationID;
        _this._data_JDKL_ = null;
        _this._wx_JDKL_Banner = null;
        return _this;
    }
    Banner_JDKL_AdView.prototype.onAwake = function () {
        this._display_JDKL_Sp = this.owner.getChildByName("Display");
        if (null == this._display_JDKL_Sp) {
            this._display_JDKL_Sp = this.owner;
        }
    };
    Banner_JDKL_AdView.prototype.onEnable = function () {
        this._display_JDKL_Sp.on(Laya.Event.CLICK, this, this.onSp_JDKL_Click);
        var banner = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().banner;
        if (0 == banner) {
            this.refresh_JDKL_BannerDis();
        }
        else if (1 == banner) {
            this.refresh_JDKL_WXBanner();
        }
    };
    Banner_JDKL_AdView.prototype.onDisable = function () {
        this._display_JDKL_Sp.off(Laya.Event.CLICK, this, this.onSp_JDKL_Click);
        this.clear_JDKL_WXBaner();
    };
    Banner_JDKL_AdView.prototype.refresh_JDKL_BannerDis = function () {
        var self = this;
        ShareAd_1.default.get_JDKL_ADVs(this.AdPos_JDKL_ID, function (datas) {
            if (datas && datas.length > 0) {
                var data = datas[Math.floor(Math.random() * datas.length)];
                self._display_JDKL_Sp.loadImage(data.logo, Laya.Handler.create(self, function () {
                    if (!self._display_JDKL_Sp.destroyed) {
                        self._display_JDKL_Sp.width = 750;
                        self._display_JDKL_Sp.height = 256;
                    }
                }));
                self._data_JDKL_ = data;
            }
        }, false);
    };
    Banner_JDKL_AdView.prototype.onSp_JDKL_Click = function () {
        var data = this._data_JDKL_;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigate_JDKL_ToMini_JDKL_Program(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_JDKL_User_JDKL_Click(data.appid);
                    ALD_1.default.aldSend_JDKL_ReportAdClick_JDKL_Success(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.ald_JDKL_SendReport_JDKL_AdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigate_JDKL_ToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_JDKL_User_JDKL_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigate_JDKL_ToMini_JDKL_Program(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_JDKL_User_JDKL_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    Banner_JDKL_AdView.prototype.refresh_JDKL_WXBanner = function () {
        if (!Laya.Browser.onMiniGame || !this.owner.visible)
            return;
        this.clear_JDKL_WXBaner();
        var self = this;
        var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this._display_JDKL_Sp.localToGlobal(new Laya.Point(0, 0));
        var left = pos.x / Laya.stage.width * sw;
        var top = pos.y / Laya.stage.height * sh;
        var width = this.WXBanner_JDKL_Width ? this.WXBanner_JDKL_Width / Laya.stage.width * sw : sw;
        this._wx_JDKL_Banner = Laya.Browser.window["wx"].createBannerAd({
            adUnitId: WXAPI_1.default.bannerAd_JDKL_UnitId,
            adIntervals: 30,
            style: {
                left: left,
                top: top,
                width: width,
            }
        });
        self._wx_JDKL_Banner.onLoad(function (res) {
            console.log("WXBanner广告 加载完成");
            console.log(res);
        });
        this._wx_JDKL_Banner.onError(function (err) {
            console.log("WXBanner广告 加载失败");
            console.log(err);
            self.refresh_JDKL_BannerDis();
            self.clear_JDKL_WXBaner();
        });
        this._wx_JDKL_Banner.onResize(function (res) {
            console.log(self._wx_JDKL_Banner.style.realWidth, self._wx_JDKL_Banner.style.realHeight);
        });
        self._wx_JDKL_Banner.show();
    };
    Banner_JDKL_AdView.prototype.clear_JDKL_WXBaner = function () {
        if (this._wx_JDKL_Banner) {
            this._wx_JDKL_Banner.destroy();
        }
        this._wx_JDKL_Banner = null;
    };
    return Banner_JDKL_AdView;
}(Laya.Script));
exports.default = Banner_JDKL_AdView;
},{"../../ALD":1,"../../Config/AppSwitchConfig":4,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../OPPOAPI":47,"../../QQMiniGameAPI":49,"../../WXAPI":87,"../ShareAd":50}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var LoopAdBox_1 = require("./LoopAdBox");
var Horizontal_JDKL_LoopAdView = /** @class */ (function (_super) {
    __extends(Horizontal_JDKL_LoopAdView, _super);
    function Horizontal_JDKL_LoopAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Ad_JDKL_PosID = ShareAd_1.default.LoopAd_JDKL_LocationID;
        _this._scrollForward_JDKL_ = true;
        return _this;
    }
    Horizontal_JDKL_LoopAdView.prototype.onAwake = function () {
        this._list_JDKL_ = this.owner.getChildByName("List");
        this._list_JDKL_.renderHandler = Laya.Handler.create(this, this.on_JDKL_ListRender, null, false);
        this._list_JDKL_.hScrollBarSkin = "";
    };
    Horizontal_JDKL_LoopAdView.prototype.onEnable = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.get_JDKL_ADVs(this.Ad_JDKL_PosID, function (datas) {
            if (self.owner && !self.owner.destroyed) {
                if (datas && datas.length > 0 && datas.length < 50) {
                    var temp = [];
                    var counter = 0;
                    for (var i = 0; i < 50; ++i) {
                        if (counter >= datas.length) {
                            counter = 0;
                        }
                        temp.push(datas[counter]);
                        ++counter;
                    }
                    var groupLen = datas.length;
                    for (var i = 0; i < temp.length; ++i) {
                        var group = Math.floor(i / groupLen);
                        var startIndex = group * groupLen;
                        var randomIndex = Math.floor(Math.random() * groupLen) + startIndex;
                        var curValue = temp[i];
                        var randomValue = temp[randomIndex];
                        temp[randomIndex] = curValue;
                        temp[i] = randomValue;
                    }
                    _this._list_JDKL_.array = temp;
                }
                else {
                    _this._list_JDKL_.array = datas;
                }
            }
        });
    };
    Horizontal_JDKL_LoopAdView.prototype.onDisable = function () {
    };
    Horizontal_JDKL_LoopAdView.prototype.onUpdate = function () {
        if (this._scrollForward_JDKL_) {
            this._list_JDKL_.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this._list_JDKL_.scrollBar.value >= this._list_JDKL_.scrollBar.max) {
                this._scrollForward_JDKL_ = false;
            }
        }
        else {
            this._list_JDKL_.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this._list_JDKL_.scrollBar.value <= 0) {
                this._scrollForward_JDKL_ = true;
            }
        }
    };
    Horizontal_JDKL_LoopAdView.prototype.on_JDKL_ListRender = function (cell, index) {
        var data = this._list_JDKL_.array[index];
        var loopAdBox = cell.getComponent(LoopAdBox_1.default);
        loopAdBox.set_JDKL_Data(data);
    };
    return Horizontal_JDKL_LoopAdView;
}(Laya.Script));
exports.default = Horizontal_JDKL_LoopAdView;
},{"../ShareAd":50,"./LoopAdBox":53}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_1 = require("../../WXAPI");
var ShareAd_1 = require("../ShareAd");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var LoopAd_JDKL_Box = /** @class */ (function (_super) {
    __extends(LoopAd_JDKL_Box, _super);
    function LoopAd_JDKL_Box() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._data = null;
        _this._originW = 150;
        _this._originH = 150;
        _this._fontSize = 25;
        return _this;
    }
    LoopAd_JDKL_Box.prototype.onAwake = function () {
        this._displaySp = this.owner.getChildByName("Display");
        this._originW = this._displaySp.width;
        this._originH = this._displaySp.height;
        this._disText = this.owner.getChildByName("TitelText");
        this._disText.text = "";
        this._fontSize = this._disText.fontSize;
    };
    LoopAd_JDKL_Box.prototype.onEnable = function () {
        this._displaySp.on(Laya.Event.CLICK, this, this.onSp_JDKL_Click);
    };
    LoopAd_JDKL_Box.prototype.onDisable = function () {
        this._displaySp.off(Laya.Event.CLICK, this, this.onSp_JDKL_Click);
    };
    LoopAd_JDKL_Box.prototype.set_JDKL_Data = function (data) {
        if (data) {
            var self = this;
            this._displaySp.loadImage(data.logo, Laya.Handler.create(this, function () {
                if (!self._displaySp.destroyed) {
                    self._displaySp.width = self._originW;
                    self._displaySp.height = self._originH;
                }
            }));
            var str = String(data.title);
            var num = str.length;
            num = Math.max(5, num);
            var fontSize = Math.floor((5 / num) * this._fontSize);
            //this._disText.fontSize = fontSize;
            this._disText.text = str;
            this._data = data;
        }
    };
    LoopAd_JDKL_Box.prototype.onSp_JDKL_Click = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigate_JDKL_ToMini_JDKL_Program(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_JDKL_User_JDKL_Click(data.appid);
                    ALD_1.default.aldSend_JDKL_ReportAdClick_JDKL_Success(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.ald_JDKL_SendReport_JDKL_AdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigate_JDKL_ToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_JDKL_User_JDKL_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigate_JDKL_ToMini_JDKL_Program(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_JDKL_User_JDKL_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return LoopAd_JDKL_Box;
}(Laya.Script));
exports.default = LoopAd_JDKL_Box;
},{"../../ALD":1,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../OPPOAPI":47,"../../QQMiniGameAPI":49,"../../WXAPI":87,"../ShareAd":50}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var LoopAdBox_1 = require("./LoopAdBox");
var LoopAd_JDKL_View = /** @class */ (function (_super) {
    __extends(LoopAd_JDKL_View, _super);
    function LoopAd_JDKL_View() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPos_JDKL_ID = ShareAd_1.default.LoopAd_JDKL_LocationID;
        _this._scroll_JDKL_Forward = true;
        return _this;
    }
    LoopAd_JDKL_View.prototype.onAwake = function () {
        this._list_JDKL_ = this.owner.getChildByName("List");
        this._list_JDKL_.renderHandler = Laya.Handler.create(this, this.onList_JDKL_Render, null, false);
        this._list_JDKL_.vScrollBarSkin = "";
    };
    LoopAd_JDKL_View.prototype.onEnable = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.get_JDKL_ADVs(this.AdPos_JDKL_ID, function (datas) {
            if (self.owner && !_this.owner.destroyed) {
                if (datas && datas.length > 0 && datas.length < 50) {
                    _this.owner.visible = true;
                    var temp = [];
                    var counter = 0;
                    for (var i = 0; i < 50; ++i) {
                        if (counter >= datas.length) {
                            counter = 0;
                        }
                        temp.push(datas[counter]);
                        ++counter;
                    }
                    var groupLen = datas.length;
                    for (var i = 0; i < temp.length; ++i) {
                        var group = Math.floor(i / groupLen);
                        var startIndex = group * groupLen;
                        var randomIndex = Math.floor(Math.random() * groupLen) + startIndex;
                        var curValue = temp[i];
                        var randomValue = temp[randomIndex];
                        temp[randomIndex] = curValue;
                        temp[i] = randomValue;
                    }
                    _this._list_JDKL_.array = temp;
                }
                else {
                    _this._list_JDKL_.array = datas;
                    _this.owner.visible = false;
                }
            }
        });
    };
    LoopAd_JDKL_View.prototype.onDisable = function () {
    };
    LoopAd_JDKL_View.prototype.onUpdate = function () {
        if (this._scroll_JDKL_Forward) {
            this._list_JDKL_.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this._list_JDKL_.scrollBar.value >= this._list_JDKL_.scrollBar.max) {
                this._scroll_JDKL_Forward = false;
            }
        }
        else {
            this._list_JDKL_.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this._list_JDKL_.scrollBar.value <= 0) {
                this._scroll_JDKL_Forward = true;
            }
        }
    };
    LoopAd_JDKL_View.prototype.onList_JDKL_Render = function (cell, index) {
        var data = this._list_JDKL_.array[index];
        var loopAdBox = cell.getComponent(LoopAdBox_1.default);
        loopAdBox.set_JDKL_Data(data);
    };
    return LoopAd_JDKL_View;
}(Laya.Script));
exports.default = LoopAd_JDKL_View;
},{"../ShareAd":50,"./LoopAdBox":53}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SingleAdView_1 = require("./SingleAdView");
var ShareAd_1 = require("../ShareAd");
var My_JDKL_Single_JDKL_AdView = /** @class */ (function (_super) {
    __extends(My_JDKL_Single_JDKL_AdView, _super);
    function My_JDKL_Single_JDKL_AdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._mask = null;
        return _this;
    }
    My_JDKL_Single_JDKL_AdView.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._display_JDKL_Sp.mask = new Laya.Sprite();
        this._display_JDKL_Sp.mask.loadImage("subRes/mask.png");
        this._display_JDKL_Sp.mask.width = this._display_JDKL_Sp.width;
        this._display_JDKL_Sp.mask.height = this._display_JDKL_Sp.height;
    };
    My_JDKL_Single_JDKL_AdView.prototype.refresh_JDKL_ADVDis = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.get_JDKL_ADVs(this.Ad_JDKL_PosID, function (datas) {
            if (self.owner && !self.owner.destroyed) {
                if (datas && datas.length > 0) {
                    self.owner.visible = true;
                    var data = datas[Math.floor(Math.random() * datas.length)];
                    self._display_JDKL_Sp.loadImage(data.logo, Laya.Handler.create(self, function () {
                        if (!self._display_JDKL_Sp.destroyed) {
                            self._display_JDKL_Sp.width = self._originW_JDKL_;
                            self._display_JDKL_Sp.height = self._origin_JDKL_H;
                            self._display_JDKL_Sp.scale(self._origin_JDKL_Size, self._origin_JDKL_Size);
                        }
                    }));
                    var str = String(data.title);
                    var num = str.length;
                    str = str.substr(0, 6);
                    if (6 < num) {
                        str += "...";
                    }
                    _this._dis_JDKL_Text.text = str;
                    self._data_JDKL_ = data;
                }
                else {
                    _this.owner.visible = false;
                }
            }
        });
    };
    return My_JDKL_Single_JDKL_AdView;
}(SingleAdView_1.default));
exports.default = My_JDKL_Single_JDKL_AdView;
},{"../ShareAd":50,"./SingleAdView":57}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoopAdView_1 = require("./LoopAdView");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var Pop_JDKL_AdView = /** @class */ (function (_super) {
    __extends(Pop_JDKL_AdView, _super);
    function Pop_JDKL_AdView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(Pop_JDKL_AdView.prototype, "is_JDKL_PopUp", {
        get: function () {
            return this._bg.x > 0;
        },
        enumerable: true,
        configurable: true
    });
    Pop_JDKL_AdView.prototype.onAwake = function () {
        this._bg = this.owner.getChildByName("BG");
        this._popBtn = this._bg.getChildByName("PopADBtn");
        this._loopAd = this._bg.getChildByName("LoopAD").getComponent(LoopAdView_1.default);
    };
    Pop_JDKL_AdView.prototype.onEnable = function () {
        this._popBtn.on(Laya.Event.CLICK, this, this.onPop_JDKL_BtnClick);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail, this, this.onShareAd_JDKL_Fail);
    };
    Pop_JDKL_AdView.prototype.onDisable = function () {
        this._popBtn.off(Laya.Event.CLICK, this, this.onPop_JDKL_BtnClick);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail, this, this.onShareAd_JDKL_Fail);
    };
    Pop_JDKL_AdView.prototype.onPop_JDKL_BtnClick = function () {
        if (this._bg.x > 0) {
            this.pop_JDKL_Down();
        }
        else {
            this.pop_JDKL_Up();
        }
    };
    Pop_JDKL_AdView.prototype.pop_JDKL_Down = function () {
        Laya.Tween.to(this._bg, { x: 0 }, 250, Laya.Ease.circIn, Laya.Handler.create(this, function () {
        }), null, true);
    };
    Pop_JDKL_AdView.prototype.pop_JDKL_Up = function () {
        Laya.Tween.to(this._bg, { x: this._bg.width }, 250, Laya.Ease.circIn, Laya.Handler.create(this, function () {
        }), null, true);
    };
    Pop_JDKL_AdView.prototype.onShareAd_JDKL_Fail = function () {
        this.pop_JDKL_Up();
    };
    return Pop_JDKL_AdView;
}(Laya.Script));
exports.default = Pop_JDKL_AdView;
},{"../../Event/EventDef":9,"../../Event/EventMgr":10,"./LoopAdView":54}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var Single_JDKL_AdView = /** @class */ (function (_super) {
    __extends(Single_JDKL_AdView, _super);
    function Single_JDKL_AdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Ad_JDKL_PosID = ShareAd_1.default.LoopAd_JDKL_LocationID;
        _this._ani_JDKL_Forward = false;
        _this._data_JDKL_ = null;
        _this._font_JDKL_Size = 25;
        _this._origin_JDKL_Size = 1;
        _this._originW_JDKL_ = 150;
        _this._origin_JDKL_H = 150;
        return _this;
    }
    Single_JDKL_AdView.prototype.onAwake = function () {
        this._owner_JDKL_Sprite = this.owner;
        this._display_JDKL_Sp = this.owner.getChildByName("Display");
        this._originW_JDKL_ = this._display_JDKL_Sp.width;
        this._origin_JDKL_H = this._display_JDKL_Sp.height;
        this._dis_JDKL_Text = this.owner.getChildByName("TitelText");
        this._dis_JDKL_Text.text = "";
        this._font_JDKL_Size = this._dis_JDKL_Text.fontSize;
        this._origin_JDKL_Size = this._display_JDKL_Sp.scaleX;
    };
    Single_JDKL_AdView.prototype.onEnable = function () {
        this.refresh_JDKL_ADVDis();
        Laya.timer.loop(3000, this, this.refresh_JDKL_ADVDis);
        this._owner_JDKL_Sprite.on(Laya.Event.CLICK, this, this.onSp_JDKL_Click);
    };
    Single_JDKL_AdView.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
        this._owner_JDKL_Sprite.off(Laya.Event.CLICK, this, this.onSp_JDKL_Click);
    };
    Single_JDKL_AdView.prototype.refresh_JDKL_ADVDis = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.get_JDKL_ADVs(this.Ad_JDKL_PosID, function (datas) {
            if (self.owner && !self.owner.destroyed) {
                if (datas && datas.length > 0) {
                    self.owner.visible = true;
                    var data = datas[Math.floor(Math.random() * datas.length)];
                    self._display_JDKL_Sp.loadImage(data.logo, Laya.Handler.create(self, function () {
                        if (!self._display_JDKL_Sp.destroyed) {
                            self._display_JDKL_Sp.width = self._originW_JDKL_;
                            self._display_JDKL_Sp.height = self._origin_JDKL_H;
                            self._display_JDKL_Sp.scale(self._origin_JDKL_Size, self._origin_JDKL_Size);
                        }
                    }));
                    var str = String(data.title);
                    var num = str.length;
                    var fontSize = Math.floor((5 / num) * _this._font_JDKL_Size);
                    self._dis_JDKL_Text.fontSize = fontSize;
                    self._dis_JDKL_Text.text = str;
                    self._data_JDKL_ = data;
                }
                else {
                    _this.owner.visible = false;
                }
            }
        });
    };
    Single_JDKL_AdView.prototype.onUpdate = function () {
        this.display_JDKL_Ani();
    };
    Single_JDKL_AdView.prototype.display_JDKL_Ani = function () {
        if (!this._ani_JDKL_Forward) {
            var scale = this._display_JDKL_Sp.scaleX - Laya.timer.delta / 3000 * 1;
            scale = Math.max(scale, 0);
            this._display_JDKL_Sp.scale(scale, scale);
            if (this._display_JDKL_Sp.scaleX <= 0.95 * this._origin_JDKL_Size) {
                this._ani_JDKL_Forward = true;
            }
        }
        else {
            var scale = this._display_JDKL_Sp.scaleX + Laya.timer.delta / 3000 * 1;
            scale = Math.min(scale, 1 * this._origin_JDKL_Size);
            this._display_JDKL_Sp.scale(scale, scale);
            if (this._display_JDKL_Sp.scaleX >= this._origin_JDKL_Size) {
                this._ani_JDKL_Forward = false;
            }
        }
    };
    Single_JDKL_AdView.prototype.onSp_JDKL_Click = function () {
        var data = this._data_JDKL_;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigate_JDKL_ToMini_JDKL_Program(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_JDKL_User_JDKL_Click(data.appid);
                    ALD_1.default.aldSend_JDKL_ReportAdClick_JDKL_Success(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.ald_JDKL_SendReport_JDKL_AdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigate_JDKL_ToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_JDKL_User_JDKL_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigate_JDKL_ToMini_JDKL_Program(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_JDKL_User_JDKL_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return Single_JDKL_AdView;
}(Laya.Script));
exports.default = Single_JDKL_AdView;
},{"../../ALD":1,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../OPPOAPI":47,"../../QQMiniGameAPI":49,"../../WXAPI":87,"../ShareAd":50}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var Single_JDKL_Ani_JDKL_ADView = /** @class */ (function (_super) {
    __extends(Single_JDKL_Ani_JDKL_ADView, _super);
    function Single_JDKL_Ani_JDKL_ADView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPos_JDKL_ID = ShareAd_1.default.AniAd_JDKL_LocationID;
        _this._data_JDKL_ = null;
        return _this;
    }
    Single_JDKL_Ani_JDKL_ADView.prototype.onAwake = function () {
        this._owner_JDKL_Sprite = this.owner;
        this._animation_JDKL_ = this.owner.getChildByName("Animation");
    };
    Single_JDKL_Ani_JDKL_ADView.prototype.onEnable = function () {
        this.refresh_JDKL_ADVDis();
        this._owner_JDKL_Sprite.on(Laya.Event.CLICK, this, this.onSp_JDKL_Click);
    };
    Single_JDKL_Ani_JDKL_ADView.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
        this._owner_JDKL_Sprite.off(Laya.Event.CLICK, this, this.onSp_JDKL_Click);
    };
    Single_JDKL_Ani_JDKL_ADView.prototype.refresh_JDKL_ADVDis = function () {
        var self = this;
        ShareAd_1.default.get_JDKL_ADVs(this.AdPos_JDKL_ID, function (datas) {
            if (datas && datas.length > 0) {
                self._owner_JDKL_Sprite.visible = true;
                var data = datas[Math.floor(Math.random() * datas.length)];
                self._animation_JDKL_.loadAtlas(data.atlas, Laya.Handler.create(self, function () {
                    self._animation_JDKL_.play(0, true);
                }));
                self._data_JDKL_ = data;
            }
            else {
                self._owner_JDKL_Sprite.visible = false;
            }
        }, false);
    };
    Single_JDKL_Ani_JDKL_ADView.prototype.onSp_JDKL_Click = function () {
        var data = this._data_JDKL_;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigate_JDKL_ToMini_JDKL_Program(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_JDKL_User_JDKL_Click(data.appid);
                    ALD_1.default.aldSend_JDKL_ReportAdClick_JDKL_Success(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.ald_JDKL_SendReport_JDKL_AdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigate_JDKL_ToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_JDKL_User_JDKL_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigate_JDKL_ToMini_JDKL_Program(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_JDKL_User_JDKL_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_On_JDKL_ShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return Single_JDKL_Ani_JDKL_ADView;
}(Laya.Script));
exports.default = Single_JDKL_Ani_JDKL_ADView;
},{"../../ALD":1,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../OPPOAPI":47,"../../QQMiniGameAPI":49,"../../WXAPI":87,"../ShareAd":50}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var TT_JDKL_API = /** @class */ (function () {
    function TT_JDKL_API() {
    }
    TT_JDKL_API.tt_JDKL_Login = function (onSuccess, onFail) {
        if (AppConfig_1.default.on_JDKL_TTMiniGame) {
            Laya.Browser.window.tt.login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
        TT_JDKL_API.init_JDKL_Record();
    };
    TT_JDKL_API.onRewarded_JDKL_VideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    TT_JDKL_API.onRewarded_JDKL_VideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (TT_JDKL_API._onRewardedVideoAdFailed) {
            TT_JDKL_API._onRewardedVideoAdFailed();
        }
    };
    TT_JDKL_API.onRewarded_JDKL_VideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (TT_JDKL_API._onRewardedVideoAdClose) {
                TT_JDKL_API._onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (TT_JDKL_API._onRewardedVideoAdClose) {
                TT_JDKL_API._onRewardedVideoAdClose(false);
            }
        }
    };
    TT_JDKL_API.reg_JDKL_Rewarded_JDKL_VideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(TT_JDKL_API.onRewarded_JDKL_VideoAdLoad);
        rewardedVideoAd.onError(TT_JDKL_API.onRewarded_JDKL_VideoAdError);
        rewardedVideoAd.onClose(TT_JDKL_API.onRewarded_JDKL_VideoAdClose);
        TT_JDKL_API._isRegRewardedVideoAdEvent = true;
    };
    TT_JDKL_API.show_JDKL_RewardedVideo_JDKL_Ad = function (onAdClose, onFailed) {
        if (AppConfig_1.default.on_JDKL_TTMiniGame) {
            TT_JDKL_API._onRewardedVideoAdClose = onAdClose;
            TT_JDKL_API._onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["tt"].createRewardedVideoAd({
                adUnitId: TT_JDKL_API.ad_JDKL_UnitId,
            });
            if (!TT_JDKL_API._isRegRewardedVideoAdEvent) {
                TT_JDKL_API.reg_JDKL_Rewarded_JDKL_VideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------TODO
    // public static navigateToMiniProgram(appId: string, path: string, onSuccess: Function, onFail: Function, onComplate: Function) {
    //     if (Laya.Browser.onMiniGame) {
    //         console.log("跳转游戏： " + appId);
    //         Laya.Browser.window["tt"].navigateToMiniProgram(
    //             {
    //                 appId: appId,
    //                 path: path,
    //                 extraData: {
    //                     foo: 'bar'
    //                 },
    //                 envVersion: 'release',
    //                 success(res) {
    //                     if (onSuccess) {
    //                         onSuccess(res)
    //                     }
    //                 },
    //                 fail(res) {
    //                     if (onFail) {
    //                         onFail(res)
    //                     }
    //                 },
    //                 complete(res) {
    //                     if (onComplate) {
    //                         onComplate(res)
    //                     }
    //                 }
    //             })
    //     }
    // }
    //-------------------------------------------------------------
    //-------------------录屏-------------------------------------------
    /**
     * 配置录屏
     */
    TT_JDKL_API.init_JDKL_Record = function () {
        TT_JDKL_API.record = Laya.Browser.window["tt"].getGameRecorderManager();
        if (TT_JDKL_API.record != null) {
            TT_JDKL_API.record.onStart(function (res) {
                console.log("录屏开始");
                TT_JDKL_API.recordRes = "";
            });
            TT_JDKL_API.record.onStop(function (res) {
                console.log("录屏结束");
                TT_JDKL_API.recordRes = res.videoPath;
            });
        }
    };
    /**
     * 开始录屏
     */
    TT_JDKL_API.start_JDKL_Record = function (duration) {
        if (duration === void 0) { duration = 300; }
        if (!AppConfig_1.default.on_JDKL_TTMiniGame)
            return;
        TT_JDKL_API.record.start({
            duration: duration
        });
    };
    /**
    * 停止录屏
    */
    TT_JDKL_API.stop_JDKL_Record = function () {
        if (!AppConfig_1.default.on_JDKL_TTMiniGame)
            return;
        TT_JDKL_API.record.stop();
    };
    //----------------------------------------------------------------------
    //---------------------分享录屏----------------------------------------
    TT_JDKL_API.share_JDKL_Record = function (callback) {
        if (callback === void 0) { callback = null; }
        if (!AppConfig_1.default.on_JDKL_TTMiniGame)
            return;
        if (TT_JDKL_API.recordRes != "") {
            window["tt"].shareAppMessage({
                channel: "video",
                extra: {
                    videoPath: TT_JDKL_API.recordRes,
                    videoTopics: ["快来和我一起玩吧！"]
                },
                success: function () {
                    if (callback != null) {
                        callback();
                    }
                    console.log("分享视频成功");
                },
                fail: function (e) {
                    console.log("分享视频失败");
                }
            });
        }
        else {
            console.log("分享视频为空");
        }
    };
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    //---------------------分享好友----------------------------------------
    TT_JDKL_API.share_JDKL_ = function (complate) {
        if (complate === void 0) { complate = null; }
        if (!AppConfig_1.default.on_JDKL_TTMiniGame)
            return;
        window["tt"].shareAppMessage({
            templateId: TT_JDKL_API._templateId_JDKL_,
            success: function () {
                if (complate != null) {
                    complate();
                }
            },
            fail: function () {
                console.log("分享失败");
            }
        });
    };
    //------------------------------------------------------------------
    //-------------------------banner-------------------------------------------
    TT_JDKL_API.showBanner = function () {
        if (!AppConfig_1.default.on_JDKL_TTMiniGame)
            return;
        if (!TT_JDKL_API._banner) {
            var _a = Laya.Browser.window["tt"].getSystemInfoSync(), windowWidth_1 = _a.windowWidth, windowHeight_1 = _a.windowHeight;
            var targetBannerAdWidth = 150;
            // 创建一个居于屏幕底部正中的广告
            TT_JDKL_API._banner = Laya.Browser.window["tt"].createBannerAd({
                adUnitId: TT_JDKL_API.banner_JDKL_AdUnitId,
                adIntervals: 30,
                style: {
                    width: targetBannerAdWidth,
                    top: windowHeight_1 - (targetBannerAdWidth / 16) * 9,
                }
            });
            TT_JDKL_API._banner.onResize(function (size) {
                console.log(size.width, size.height);
                TT_JDKL_API._banner.style.top = windowHeight_1 - size.height;
                TT_JDKL_API._banner.style.left = (windowWidth_1 - size.width) / 2;
            });
            TT_JDKL_API._banner.show();
        }
    };
    TT_JDKL_API.ad_JDKL_UnitId = "";
    TT_JDKL_API.banner_JDKL_AdUnitId = "";
    TT_JDKL_API.Ins_JDKL_AdUnitId = "";
    TT_JDKL_API._templateId_JDKL_ = ""; //分享素材id
    TT_JDKL_API.recordRes = "";
    TT_JDKL_API._banner = null;
    //-------------------------激励视频---------------------------------
    TT_JDKL_API._isRegRewardedVideoAdEvent = false;
    TT_JDKL_API._onRewardedVideoAdFailed = null;
    TT_JDKL_API._onRewardedVideoAdClose = null;
    return TT_JDKL_API;
}());
exports.default = TT_JDKL_API;
},{"./AppConfig":2}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var WeaponConfig_1 = require("../Config/WeaponConfig");
//游戏数据,为保持版本兼容，建议不要删除和修改字段名
var User_JDKL_GameData = /** @class */ (function () {
    function User_JDKL_GameData() {
        this.levelNum = 1; //当前关卡
        this.moneyNum = 0; //金币数量
        this.crystalNum = 0; //钻石数量    
        this.weaponDatas = [
            new Weapon_JDKL_Data(1, 1),
        ];
        this.equipWeaponId = 1;
    }
    return User_JDKL_GameData;
}());
exports.User_JDKL_GameData = User_JDKL_GameData;
var Weapon_JDKL_Data = /** @class */ (function () {
    function Weapon_JDKL_Data(id, level) {
        this.id = 0;
        this.level = 0;
        this.id = id;
        this.level = level;
    }
    return Weapon_JDKL_Data;
}());
exports.Weapon_JDKL_Data = Weapon_JDKL_Data;
var User_JDKL_ = /** @class */ (function (_super) {
    __extends(User_JDKL_, _super);
    function User_JDKL_() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(User_JDKL_, "is_JDKL_Login", {
        get: function () {
            return (User_JDKL_.code_JDKL_ != "") || (User_JDKL_.token_JDKL_ != "");
        },
        enumerable: true,
        configurable: true
    });
    User_JDKL_.get_JDKL_SaveData = function () {
        return JSON.stringify(User_JDKL_._gameData);
    };
    User_JDKL_.testInit_JDKL_User = function () {
        User_JDKL_._gameData.levelNum = 1;
        User_JDKL_._gameData.moneyNum = 100000;
        User_JDKL_._gameData.crystalNum = 100000;
    };
    User_JDKL_.initi_JDKL_User = function (data) {
        if (data && 0 != data) {
            User_JDKL_._gameData.levelNum = data.levelNum;
            User_JDKL_._gameData.moneyNum = data.moneyNum;
            User_JDKL_._gameData.crystalNum = data.crystalNum;
            var weaponDatas = data.weaponDatas;
            if (null != weaponDatas && weaponDatas.length > 0) {
                User_JDKL_._gameData.weaponDatas.splice(0);
                for (var i = 0; i < weaponDatas.length; ++i) {
                    var weapondata = weaponDatas[i];
                    User_JDKL_._gameData.weaponDatas.push(weapondata);
                }
            }
        }
        else {
            //todo：处理没有获取到玩家数据的情况
        }
    };
    User_JDKL_.set_JDKL_LeveNum = function (levelNum) {
        User_JDKL_._gameData.levelNum = levelNum;
    };
    User_JDKL_.get_JDKL_LeveNum = function () {
        return User_JDKL_._gameData.levelNum;
    };
    User_JDKL_.add_JDKL_Money = function (add) {
        add = Math.ceil(add);
        var last = User_JDKL_._gameData.moneyNum;
        User_JDKL_._gameData.moneyNum += add;
        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnUserMoney_JDKL_Change, {
            curr: User_JDKL_._gameData.moneyNum,
            last: last
        });
    };
    User_JDKL_.sub_JDKL_Money = function (sub) {
        sub = Math.ceil(sub);
        var last = User_JDKL_._gameData.moneyNum;
        User_JDKL_._gameData.moneyNum -= sub;
        if (User_JDKL_._gameData.moneyNum < 0) {
            User_JDKL_._gameData.moneyNum = 0;
        }
        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnUserMoney_JDKL_Change, {
            curr: User_JDKL_._gameData.moneyNum,
            last: last
        });
    };
    User_JDKL_.get_JDKL_Money = function () {
        return User_JDKL_._gameData.moneyNum;
    };
    User_JDKL_.add_JDKL_Crystal = function (add) {
        add = Math.ceil(add);
        var last = User_JDKL_._gameData.crystalNum;
        User_JDKL_._gameData.crystalNum += add;
        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnUserCrystal_JDKL_Change, {
            curr: User_JDKL_._gameData.crystalNum,
            last: last
        });
    };
    User_JDKL_.sub_JDKL_Crystal = function (sub) {
        sub = Math.ceil(sub);
        var last = User_JDKL_._gameData.crystalNum;
        User_JDKL_._gameData.crystalNum -= sub;
        if (User_JDKL_._gameData.crystalNum < 0) {
            User_JDKL_._gameData.crystalNum = 0;
        }
        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnUserCrystal_JDKL_Change, {
            curr: User_JDKL_._gameData.crystalNum,
            last: last
        });
    };
    User_JDKL_.get_JDKL_Crystal = function () {
        return User_JDKL_._gameData.crystalNum;
    };
    User_JDKL_.weaponIsUnlock = function (id) {
        for (var i = 0; i < User_JDKL_._gameData.weaponDatas.length; ++i) {
            var data = User_JDKL_._gameData.weaponDatas[i];
            if (data.id == id) {
                return true;
            }
        }
        return false;
    };
    User_JDKL_.unlockWeapon = function (id) {
        if (User_JDKL_.weaponIsUnlock(id)) {
            return false;
        }
        var newData = new Weapon_JDKL_Data(id, 1);
        User_JDKL_._gameData.weaponDatas.push(newData);
        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnWeaponUnlock, { weaponData: newData });
    };
    User_JDKL_.setWeaponLevel = function (id, level) {
        for (var i = 0; i < User_JDKL_._gameData.weaponDatas.length; ++i) {
            var data = User_JDKL_._gameData.weaponDatas[i];
            if (data.id == id) {
                data.level = level;
                EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnWeaponLevelChange, { weaponData: data });
                return true;
            }
        }
        return false;
    };
    User_JDKL_.getWeaponData = function (id) {
        for (var i = 0; i < User_JDKL_._gameData.weaponDatas.length; ++i) {
            var data = User_JDKL_._gameData.weaponDatas[i];
            if (data.id == id) {
                return data;
            }
        }
        return null;
    };
    User_JDKL_.getNextCanUnlockWeaponId = function () {
        var next = 0;
        for (var i = 0; i < User_JDKL_._gameData.weaponDatas.length; ++i) {
            var data = User_JDKL_._gameData.weaponDatas[i];
            if (data.id > next) {
                next = data.id;
            }
        }
        next = next + 1;
        var nextConfigData = WeaponConfig_1.default.getInstance().getWeaponConfigDataById(next);
        if (null != nextConfigData) {
            next = nextConfigData.weaponId;
        }
        return next;
    };
    User_JDKL_.setCurWeapon = function (id) {
        var data = User_JDKL_.getWeaponData(id);
        if (null != data) {
            User_JDKL_._gameData.equipWeaponId = data.id;
            EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnEquipWeaponChange, { weaponData: data });
            return true;
        }
        return false;
    };
    User_JDKL_.getCurWeapon = function () {
        return User_JDKL_._gameData.equipWeaponId;
    };
    User_JDKL_.getCurWeaponData = function () {
        return User_JDKL_.getWeaponData(User_JDKL_._gameData.equipWeaponId);
    };
    User_JDKL_.code_JDKL_ = "";
    User_JDKL_.open_JDKL_Id = "";
    User_JDKL_.token_JDKL_ = null;
    User_JDKL_.nick_JDKL_Name = "";
    User_JDKL_.gender_JDKL_ = 0;
    User_JDKL_._gameData = new User_JDKL_GameData();
    return User_JDKL_;
}(Laya.Script));
exports.default = User_JDKL_;
},{"../Config/WeaponConfig":8,"../Event/EventDef":9,"../Event/EventMgr":10}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilit = /** @class */ (function () {
    function Utilit() {
    }
    Utilit.Lerp_JDKL_ = function (form, to, delta) {
        if (form == to)
            return to;
        if (form > to) {
            var next = form - delta;
            if (next <= to)
                return to;
            return next;
        }
        else if (form < to) {
            var next = form + delta;
            if (next >= to)
                return to;
            return next;
        }
    };
    Utilit.lerp_JDKL_EulerAngle = function (form, to, delta) {
        var form = form % 360;
        form = form >= 0 ? form : (360 + form);
        var to = to % 360;
        to = to >= 0 ? to : (360 + to);
        var dis = Math.abs(to - form);
        if (dis > 180) {
            if (form < to)
                to = to - 360;
            else if (form > to)
                to = to + 360;
        }
        var next = Utilit.Lerp_JDKL_(form, to, delta);
        return next;
    };
    Utilit.get_JDKL_RotationBy_JDKL_Dir = function (v) {
        var dotValue = (v.x * Utilit.poin_JDKL_Down.x) + (v.y * Utilit.poin_JDKL_Down.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit.poin_JDKL_Down.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = -rotation;
        }
        return rotation;
    };
    Utilit.getRotation_JDKL_By_JDKL_DirOn3DSpace = function (v) {
        var dotValue = (v.x * Utilit.poinUp_JDKL_.x) + (v.y * Utilit.poinUp_JDKL_.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit.poinUp_JDKL_.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = rotation + (180 - rotation) * 2;
        }
        return rotation;
    };
    Utilit.get_JDKL_Dir_JDKL_ByRotation = function (rotation) {
        var radian = (rotation - 90) * Math.PI / 180; // -90 是转换到场景坐标系
        var x = Math.cos(radian);
        var y = Math.sin(radian);
        var point = new Laya.Point(x, y);
        point.normalize();
        return point;
    };
    Utilit.getDir_JDKL_DirAngle = function (dir1, dir2) {
        var dotValue = (dir1.x * dir2.x) + (dir1.y * dir2.y);
        var cos = dotValue / (dir1.distance(0, 0) * dir2.distance(0, 0));
        var radian = Math.acos(cos);
        var angle = radian / (2 * Math.PI) * 360;
        return angle;
    };
    Utilit.getDir_JDKL_Scalar_JDKL_Length = function (dir) {
        var sl = Math.sqrt(dir.x * dir.x + dir.y * dir.y);
        return sl;
    };
    Utilit.set_JDKL_SpOnParent_JDKL_Center = function (sp) {
        if (null == sp.parent)
            return;
        var psp = sp.parent;
        var x = 0;
        var y = 0;
        var x = x - sp.width / 2 * sp.scaleX + psp.width / 2;
        var y = y - sp.height / 2 * sp.scaleY + psp.height / 2;
        sp.x = x;
        sp.y = y;
    };
    Utilit.get_JDKL_Point_JDKL_To_JDKL_LineDistance = function (x, y, LineStart, LineEnd) {
        var toStartDir = new Laya.Point(x - LineStart.x, y - LineStart.y);
        var toEndDir = new Laya.Point(x - LineEnd.x, y - LineEnd.y);
        var lineDir = new Laya.Point(LineEnd.x - LineStart.y, LineEnd.y - LineStart.y);
        var dotToStartDir = (lineDir.x * toStartDir.x) + (lineDir.y * toStartDir.y);
        if (dotToStartDir <= 0) {
            return toStartDir.distance(0, 0);
        }
        var dotToEndDir = (lineDir.x * toEndDir.x) + (lineDir.y * toEndDir.y);
        if (dotToEndDir <= 0) {
            return toEndDir.distance(0, 0);
        }
        var toStartDis = toStartDir.distance(0, 0);
        var lineDirDis = lineDir.distance(0, 0);
        var cos = dotToStartDir / (toStartDis * lineDirDis);
        var radians = Math.acos(cos);
        var dis = Math.sin(radians) * toStartDis;
        return dis;
    };
    Utilit.is_JDKL_IphoneX = function () {
        if (!Laya.Browser.onIPhone)
            return false;
        if ((Laya.Browser.width == 2436 && Laya.Browser.height == 1125)
            || (Laya.Browser.height == 2436 && Laya.Browser.width == 1125)) {
            return true;
        }
        return false;
    };
    Utilit.is_JDKL_Iphone = function () {
        return Laya.Browser.onIPhone;
    };
    Utilit.get_JDKL_Child = function (node, name) {
        for (var i = 0; i < node.numChildren; ++i) {
            var child = node.getChildAt(i);
            if (child.name == name) {
                return child;
            }
            else {
                var target = Utilit.get_JDKL_Child(child, name);
                if (target)
                    return target;
            }
        }
        return null;
    };
    Utilit.Clamp_JDKL_ = function (value, min, max) {
        if (value <= min)
            return min;
        if (value >= max)
            return max;
        return value;
    };
    Utilit.lerp_JDKL_EulerAngle_JDKL_Free = function (form, to, delta) {
        var form = form % 360;
        var to = to % 360;
        var next = Utilit.Lerp_JDKL_(form, to, delta);
        return next;
    };
    Utilit.Origin_JDKL_StageWidth = 1334;
    Utilit.OriginStage_JDKL_Height = 750;
    Utilit.grays_JDKL_caleMat = [0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0, 0, 0, 1, 0];
    Utilit.grayscale_JDKL_Filter = new Laya.ColorFilter(Utilit.grays_JDKL_caleMat);
    Utilit.poin_JDKL_Down = new Laya.Point(0, -1);
    Utilit.poinUp_JDKL_ = new Laya.Point(0, 1);
    return Utilit;
}());
exports.default = Utilit;
},{}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var GameMgr_1 = require("../../Mgr/GameMgr");
var EnemyTag_1 = require("./EnemyTag");
var UnitType_1 = require("../../GamePlay/Unit/UnitType");
var GameConfig_1 = require("../../Config/GameConfig");
var BattleView = /** @class */ (function (_super) {
    __extends(BattleView, _super);
    function BattleView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._topZone = null;
        _this._levelText = null;
        _this._processBar = null;
        _this._processOriginW = null;
        _this._centerZone = null;
        _this._winTag = null;
        _this._loseTag = null;
        _this._playerHpBar = null;
        _this._crossHair = null;
        _this._redPoint = null;
        _this._screenPos = new Laya.Vector3();
        _this._hitData = null;
        _this._lastShowCrossHairTime = null;
        _this._enemyTag = null;
        _this._shootHeanderTag = null;
        _this._powerBtn = null;
        return _this;
    }
    BattleView.prototype.onAwake = function () {
        this._topZone = this.owner.getChildByName("TopZone");
        this._levelText = this._topZone.getChildByName("Level").getChildByName("LevelText");
        this._processBar = this._topZone.getChildByName("LevelProcess").getChildByName("ProcessBar");
        this._processOriginW = this._processBar.width;
        this._playerHpBar = this._topZone.getChildByName("PlayerHpBar");
        this._centerZone = this.owner.getChildByName("CenterZone");
        this._winTag = this._centerZone.getChildByName("WinTag");
        this._loseTag = this._centerZone.getChildByName("LoseTag");
        this._winTag.visible = false;
        this._loseTag.visible = false;
        this._playerHpBar.value = 1;
        this.setLevelProcess(0);
        this._redPoint = this.owner.getChildByName("RedPoint");
        var self = this;
        var template = new Laya.Templet();
        template.on(Laya.Event.COMPLETE, this, function () {
            self._crossHair = template.buildArmature();
            self.owner.addChild(self._crossHair);
            self._crossHair.visible = false;
            this._crossHair.active = false;
        });
        template.loadAni("subRes/bb.sk");
        this._enemyTag = this.owner.getChildByName("EnemyTag").getComponent(EnemyTag_1.default);
        this._shootHeanderTag = this.owner.getChildByName("ShootHeaderTag");
        this._shootHeanderTag.alpha = 0;
        this._powerBtn = this.owner.getChildByName("PowerBtn");
        this._powerBtn.visible = false;
    };
    BattleView.prototype.onUpdate = function () {
        this._shootHeanderTag.alpha = Math.max(0, this._shootHeanderTag.alpha - Laya.timer.delta / 1000 * 1);
    };
    BattleView.prototype.onLateUpdate = function () {
        if (null != this._hitData) {
            this._redPoint.visible = true;
            var x = this._screenPos.x / Laya.stage.clientScaleX;
            var y = this._screenPos.y / Laya.stage.clientScaleY;
            this._redPoint.x = x; // - 4.5;
            this._redPoint.y = y; // - 4.5;
            if (null != this._crossHair) {
                if (null != this._hitData.CanHitObj) {
                    this._crossHair.x = x + (Math.random() - 0.5) * 2 * 2.5;
                    this._crossHair.y = y + (Math.random() - 0.5) * 2 * 2.5;
                }
                else {
                    var curAniName = this._crossHair.getAniNameByIndex(this._crossHair.player.currentAnimationClipIndex);
                    if (curAniName != "newAnimation") {
                        this._crossHair.visible = false;
                        this._crossHair.active = false;
                    }
                }
                this._redPoint.visible = !this._crossHair.visible;
            }
        }
        else {
            this._redPoint.visible = false;
            if (null != this._crossHair) {
                var curAniName = this._crossHair.getAniNameByIndex(this._crossHair.player.currentAnimationClipIndex);
                if (curAniName != "newAnimation") {
                    this._crossHair.visible = false;
                    this._crossHair.active = false;
                }
            }
        }
        this._hitData = null;
    };
    BattleView.prototype.add_JDKL_Event = function () {
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnLevelProcessChange, this, this.onSetLevelProcess);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_UI_UpdateLevelNum, this, this.onUpdateLevelNum);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnLevel_JDKL_Complate, this, this.onLevelComplate);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnPlayerHpChange, this, this.onPlayerHpChange);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnGunFireCheckSomething, this, this.onGunFireCheckSomething);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnEnemyActive, this, this.onEnemyActive);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnEnemyDead, this, this.onEnemyDead);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnHeanderShoot, this, this.onHeanderShoot);
        this._powerBtn.on(Laya.Event.CLICK, this, this.onPowerBtn);
    };
    BattleView.prototype.remove_JDKL_Event = function () {
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnLevelProcessChange, this, this.onSetLevelProcess);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_UI_UpdateLevelNum, this, this.onUpdateLevelNum);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnLevel_JDKL_Complate, this, this.onLevelComplate);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnPlayerHpChange, this, this.onPlayerHpChange);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnGunFireCheckSomething, this, this.onGunFireCheckSomething);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnEnemyActive, this, this.onEnemyActive);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnEnemyDead, this, this.onEnemyDead);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnHeanderShoot, this, this.onHeanderShoot);
        this._powerBtn.off(Laya.Event.CLICK, this, this.onPowerBtn);
    };
    BattleView.prototype.open_JDKL_View = function (data) {
        _super.prototype.open_JDKL_View.call(this, data);
        this.setLevelNum(this._data.levelNum);
    };
    BattleView.prototype.setLevelProcess = function (value) {
        value = Math.max(0.001, value);
        value = Math.min(1, value);
        this._processBar.width = this._processOriginW * value;
    };
    BattleView.prototype.setLevelNum = function (levelNum) {
        this._levelText.value = String(levelNum);
    };
    BattleView.prototype.onSetLevelProcess = function (para) {
        var value = para.process;
        this.setLevelProcess(value);
    };
    BattleView.prototype.onUpdateLevelNum = function (para) {
        var levelNum = para.levelNum;
        this._levelText.value = String(levelNum);
    };
    BattleView.prototype.onPlayerHpChange = function (para) {
        var last = para.last;
        var cur = para.cur;
        var max = para.max;
        var process = Math.max(0, cur) / max;
        var value = Number(process.toFixed(2));
        this._playerHpBar.value = value;
        var trigger = GameConfig_1.default.get_JDKL_Instance().getGameConfigData().hpTrigger;
        if ((last / max > trigger) && (cur / max <= trigger)) {
            this._powerBtn.visible = true;
        }
    };
    BattleView.prototype.onLevelComplate = function (para) {
        var level = para.level;
        var isWin = para.isWin;
        this._winTag.visible = isWin;
        this._loseTag.visible = !isWin;
    };
    BattleView.prototype.onGunFireCheckSomething = function (para) {
        var hitData = para.hitData;
        this._screenPos.x = 0;
        this._screenPos.y = 0;
        this._screenPos.z = 0;
        var cam = GameMgr_1.default.get_JDKL_Instance().CurLevel.Camera;
        cam.viewport.project(hitData.HitPoint, cam.projectionViewMatrix, this._screenPos);
        this._hitData = hitData;
        if (null != this._hitData.CanHitObj) {
            this.playCrossHairAni();
        }
    };
    BattleView.prototype.playCrossHairAni = function () {
        if (null != this._crossHair) {
            this._crossHair.active = true;
            this._crossHair.visible = true;
            this._crossHair.stop();
            this._crossHair.play("newAnimation", false, true);
        }
    };
    BattleView.prototype.onEnemyActive = function (para) {
        var enemy = para.enemy;
        if (enemy.Type == UnitType_1.UnitType.DinosaurBoss
            || enemy.Type == UnitType_1.UnitType.ZombieKing) {
            this._enemyTag.setTarget(enemy);
        }
    };
    BattleView.prototype.onEnemyDead = function (para) {
        var enemy = para.enemy;
        if (enemy == this._enemyTag.Target) {
            this._enemyTag.setTarget(null);
        }
    };
    BattleView.prototype.onHeanderShoot = function () {
        this._shootHeanderTag.alpha = 1;
        this._shootHeanderTag.scaleX = 0.3;
        this._shootHeanderTag.scaleY = 0.3;
        var self = this;
        Laya.Tween.to(this._shootHeanderTag, {
            scaleX: 0.4,
            scaleY: 0.4,
        }, 100, Laya.Ease.backInOut, Laya.Handler.create(this, function () {
            self._shootHeanderTag.scaleX = 0.4;
            self._shootHeanderTag.scaleY = 0.4;
        }), 0, true);
    };
    BattleView.prototype.onPowerBtn = function () {
        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_EnterPowerState);
        this._powerBtn.visible = false;
    };
    return BattleView;
}(ViewBase_1.default));
exports.default = BattleView;
},{"../../Config/GameConfig":5,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../GamePlay/Unit/UnitType":36,"../../Mgr/GameMgr":39,"../ViewBase":84,"./EnemyTag":63}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameMgr_1 = require("../../Mgr/GameMgr");
var EnemyTag = /** @class */ (function (_super) {
    __extends(EnemyTag, _super);
    function EnemyTag() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._sp = null;
        _this._hpBar = null;
        _this._target = null;
        _this._originWidth = 0;
        _this._screenPos = new Laya.Vector3();
        return _this;
    }
    Object.defineProperty(EnemyTag.prototype, "Target", {
        get: function () {
            return this._target;
        },
        enumerable: true,
        configurable: true
    });
    EnemyTag.prototype.onAwake = function () {
        this._sp = this.owner;
        this._hpBar = this.owner.getChildByName("Bg").getChildByName("Bar");
        this._originWidth = this._hpBar.width;
    };
    EnemyTag.prototype.setTarget = function (enemy) {
        this._target = enemy;
        this._sp.visible = (null != this._target);
    };
    EnemyTag.prototype.onLateUpdate = function () {
        if (null != this._target) {
            if (this._target.isDead || this._target.destroyed) {
                this.setTarget(null);
                return;
            }
            this._screenPos.x = 0;
            this._screenPos.y = 0;
            this._screenPos.z = 0;
            var cam = GameMgr_1.default.get_JDKL_Instance().CurLevel.Camera;
            cam.viewport.project(this._target.TagPoint.transform.position, cam.projectionViewMatrix, this._screenPos);
            var x = this._screenPos.x / Laya.stage.clientScaleX;
            var y = this._screenPos.y / Laya.stage.clientScaleY;
            this._sp.x = x;
            this._sp.y = y;
            this._hpBar.width = Math.max(0.01, this._target.Hp / this._target.MaxHp * this._originWidth);
        }
    };
    return EnemyTag;
}(Laya.Script));
exports.default = EnemyTag;
},{"../../Mgr/GameMgr":39}],64:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var Input = /** @class */ (function (_super) {
    __extends(Input, _super);
    function Input() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._ownerSp = null;
        _this._press = false;
        _this._lastPoint = new Laya.Vector2();
        return _this;
    }
    Input.prototype.onAwake = function () {
        this._ownerSp = this.owner;
    };
    Input.prototype.onEnable = function () {
        this._ownerSp.on(Laya.Event.MOUSE_DOWN, this, this.onDown);
    };
    Input.prototype.onDisable = function () {
        this._ownerSp.off(Laya.Event.MOUSE_DOWN, this, this.onDown);
        this._ownerSp.off(Laya.Event.MOUSE_UP, this, this.onClickUp);
        this._ownerSp.off(Laya.Event.MOUSE_MOVE, this, this.onMove);
        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnMoveInputRelease);
    };
    Input.prototype.onDown = function () {
        var point = this._ownerSp.localToGlobal(new Laya.Point(Laya.stage.mouseX, Laya.stage.mouseY));
        this._lastPoint.x = point.x;
        this._lastPoint.y = point.y;
        this._ownerSp.on(Laya.Event.MOUSE_MOVE, this, this.onMove);
        this._ownerSp.on(Laya.Event.MOUSE_UP, this, this.onClickUp);
        this._ownerSp.on(Laya.Event.MOUSE_OUT, this, this.onClickUp);
    };
    Input.prototype.onClickUp = function () {
        this._ownerSp.off(Laya.Event.MOUSE_MOVE, this, this.onMove);
        this._ownerSp.off(Laya.Event.MOUSE_UP, this, this.onClickUp);
        this._ownerSp.off(Laya.Event.MOUSE_OUT, this, this.onClickUp);
        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnMoveInputRelease);
    };
    Input.prototype.onMove = function () {
        var mouseLocalPoint = this._ownerSp.globalToLocal(new Laya.Point(Laya.stage.mouseX, Laya.stage.mouseY));
        this._lastPoint.x = mouseLocalPoint.x - this._lastPoint.x;
        this._lastPoint.y = mouseLocalPoint.y - this._lastPoint.y;
        if (this._lastPoint.x != 0 || this._lastPoint.y != 0) {
            EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnMoveInput, { dir: this._lastPoint.clone() });
        }
        this._lastPoint.x = mouseLocalPoint.x;
        this._lastPoint.y = mouseLocalPoint.y;
    };
    return Input;
}(Laya.Script));
exports.default = Input;
},{"../../Event/EventDef":9,"../../Event/EventMgr":10}],65:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr_1 = require("../Mgr/SoundMgr");
var Button_JDKL_Anim = /** @class */ (function (_super) {
    __extends(Button_JDKL_Anim, _super);
    function Button_JDKL_Anim() {
        var _this = _super.call(this) || this;
        _this.use_JDKL_Sound = true;
        return _this;
    }
    Button_JDKL_Anim.prototype.onAwake = function () {
        this.owner.on(Laya.Event.MOUSE_DOWN, this, this.on_JDKL_Down);
        this.owner.on(Laya.Event.MOUSE_UP, this, this.on_JDKL_Up);
        this.owner.on(Laya.Event.MOUSE_OUT, this, this.on_JDKL_Up);
    };
    Button_JDKL_Anim.prototype.onDisable = function () {
        this.owner.offAll();
        Laya.Tween.clearAll(this);
    };
    Button_JDKL_Anim.prototype.on_JDKL_Down = function () {
        Laya.Tween.to(this.owner, { scaleX: 0.9, scaleY: 0.9 }, 50);
        if (this.use_JDKL_Sound) {
            SoundMgr_1.default.instance.play_JDKL_Sound("anniu");
        }
    };
    Button_JDKL_Anim.prototype.on_JDKL_Up = function () {
        Laya.Tween.to(this.owner, { scaleX: 1, scaleY: 1 }, 50);
    };
    return Button_JDKL_Anim;
}(Laya.Script));
exports.default = Button_JDKL_Anim;
},{"../Mgr/SoundMgr":40}],66:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var EventDef_1 = require("../../Event/EventDef");
var EventMgr_1 = require("../../Event/EventMgr");
var CachedWXBannerAd_1 = require("../../CachedWXBannerAd");
/**
 * 狂点窗口使用范例如下
    //首先判断狂点功能开关WudianMgr.WudianFlag是否打开，如果没打开就直接跳过整个逻辑
    WudianMgr.GetIpBlockState();//在游戏里初始化的时候调用这个方法初始化Ip屏蔽flag
    //将这段代码插入需要调用狂点窗口的地方
    let data : any = {};
    //狂点逻辑完成后的回调方法
    data.Complete = function(){
        console.log("狂点按钮结束");//在这里写入狂点窗口结束后需要调用的逻辑，例如弹出结算页面
    }
    // 完成点击之后获得的奖励数量，依照各项目不同自行实现
    data.PrizeCount = 30;
    // 在调用窗口前必须关闭当前正在显示的官方Banner广告，这个窗口才能正常运行，具体的逻辑各人需自行实现
    // 而且关闭官方Banner可以稍微提早一些，避免频繁调用出错或者不稳定
    Event_PK_Mgr.instance.dispatch(Event_PK_Def.AD_CloseBanner, true);//这句代码是我用来关闭官方Banner，各项目自行实现
    ViewMgr.instance.openView(ViewDef.ClickGetPrize,data);
 *
 * @export
 * @class ClickGetPrize
 * @extends {View_JDKL_Base}
 */
var ClickGetPrize = /** @class */ (function (_super) {
    __extends(ClickGetPrize, _super);
    function ClickGetPrize() {
        var _this = _super.call(this) || this;
        _this._totalClickTimer = 22; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._bannerClickTime = 7; //点多少次开始显示bannerr套路用户，可微调    
        return _this;
    }
    // private _wudianLoadFlag: boolean;
    ClickGetPrize.prototype.onAwake = function () {
        this._click_Btn = this.owner.getChildByName("Click_Btn");
        this._click_Btn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._arrow_Img = this._click_Btn.getChildByName("Arrow_Img");
        this._bg = this.owner.getChildByName("BG");
        this._open_Btn = this._bg.getChildByName("Open_Btn");
        this._getPrize_View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_Text = this._getPrize_View.getChildByName("PrizeCount_Text");
        this._confirm_Btn = this._getPrize_View.getChildByName("Confirm_Btn");
        this._getPrize_View.visible = false;
        this._clickTime_PBar = this._bg.getChildByName("ClickTime_PBar");
        this._clickTime_PBar$Bar = this._clickTime_PBar.getChildByName("ClickTime_PBar$Bar");
        this._clickBarOriginalWidth = this._clickTime_PBar$Bar.width;
        this._bannerAd_View = this.owner.getChildByName("BannerAd_View");
        this._clickTime_PBar$Bar.width = 0;
        this._clickTime = 0;
        this._totalClickTime = 0;
        //EventMgr.instance.regOnceEvent(EventDef.AD_WudianBanner_LoadComplete, this, this.WudianLoadComplete);
    };
    ClickGetPrize.prototype.onUpdate = function () {
        /* 箭头上下移动 */
        if (this._arrowUp) {
            this._arrow_Img.top += Laya.timer.delta / 5;
            if (this._arrow_Img.top > -140) {
                this._arrowUp = false;
            }
        }
        else {
            this._arrow_Img.top -= Laya.timer.delta / 5;
            if (this._arrow_Img.top < -180) {
                this._arrowUp = true;
            }
        }
        /* 按钮不按，进度条自动退回 */
        if (!this._bannerClicked) {
            var spd = 2 + (this._clickTime_PBar$Bar.width / this._clickBarOriginalWidth) * 6;
            if (this._clickTime_PBar$Bar.width >= spd) {
                this._clickTime_PBar$Bar.width -= spd;
            }
            if ((this._clickTime_PBar$Bar.width / this._clickBarOriginalWidth) + 0.1 < (this._clickTime / this._needClickTime)) {
                this._clickTime--;
            }
        }
        // else {
        //     if (this._clickTime_PBar$Bar.width <= this._clickBarOriginalWidth) {
        //         this._clickTime_PBar$Bar.width += 2;
        //         if (this._clickTime_PBar$Bar.width > this._clickBarOriginalWidth) {
        //             this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth
        //         }
        //     }
        // }
    };
    /**
     * 打开Banner
     *
     * @param {*} [data]
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.open_JDKL_View = function (data) {
        this._compeletFunction = data.Complete;
        this._prizeCount = data.PrizeCount;
        _super.prototype.open_JDKL_View.call(this, data);
    };
    /**
     * 用户成功获得奖励
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.OpenPrizeWindow = function () {
        this._bg.visible = false;
        var self = this;
        this._prizeCount_Text.text = this._prizeCount.toString();
        this._getPrize_View.visible = true;
        /* 确认按钮 */
        this._confirm_Btn.once(Laya.Event.CLICK, this, function () {
            if (self._compeletFunction) {
                self._compeletFunction();
            }
            self.close_JDKL_View();
        });
    };
    /**
     * 误点预加载完成
     *
     * @memberof ClickGetPrize
     */
    // WudianLoadComplete() {
    //     console.log("WudianBanner预加载完毕");
    //     this._wudianLoadFlag = true;
    // }
    /**
     * 将Banner显示
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.ShowBanner = function () {
        console.log("AD_WudianBanner_Show");
        CachedWXBannerAd_1.default.show_JDKL_();
    };
    /**
     * 狂点按钮逻辑
     *
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.ButtonClicked = function () {
        this._clickTime++;
        this._totalClickTime++;
        //nanner一直没加载成功,保持进度条
        if (this._clickTime > this._needClickTime) {
            this._clickTime = this._needClickTime;
        }
        if (this._clickTime >= this._bannerClickTime /*&& this._wudianLoadFlag*/) {
            if (this._clickTime >= this._needClickTime) {
                this._clickTime = this._needClickTime - 1;
            }
            this._bannerClicked = true;
            console.log("误点Banner套路启动");
            //用户连点，出banner
            this.ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        //用户一直没被套路到，让他继续玩
        else if (this._totalClickTime > this._totalClickTimer) {
            console.log("用户一直没点到，放他一马", this._totalClickTime);
            this.BannerClicked();
        }
        var progress = (this._clickTime / this._needClickTime) * this._clickBarOriginalWidth;
        this._clickTime_PBar$Bar.width = progress;
    };
    /**
     * Banner已经点击之后，让用户获得奖励
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.BannerClicked = function () {
        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.AD_Wudian_JDKL_Banner_Hide);
        this._bannerClicked = true;
        this._clickTime = this._needClickTime;
        this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth;
        this._click_Btn.visible = false;
        this._open_Btn.visible = true;
        // this._bannerAd_View.visible = false;
        // this._bannerAd_View.active = false;
        this.OpenPrizeWindow();
    };
    ClickGetPrize.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
        CachedWXBannerAd_1.default.hide_JDKL_();
    };
    return ClickGetPrize;
}(ViewBase_1.default));
exports.default = ClickGetPrize;
},{"../../CachedWXBannerAd":3,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../View/ViewBase":84}],67:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var User_1 = require("../../User/User");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var CrystalTips = /** @class */ (function (_super) {
    __extends(CrystalTips, _super);
    function CrystalTips() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._text = null;
        return _this;
    }
    CrystalTips.prototype.onAwake = function () {
        this._text = this.owner.getChildByName("Text");
    };
    CrystalTips.prototype.onEnable = function () {
        this.refresh();
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnUserCrystal_JDKL_Change, this, this.refresh);
    };
    CrystalTips.prototype.onDisable = function () {
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnUserCrystal_JDKL_Change, this, this.refresh);
    };
    CrystalTips.prototype.refresh = function () {
        this._text.value = String(User_1.default.get_JDKL_Crystal());
    };
    return CrystalTips;
}(Laya.Script));
exports.default = CrystalTips;
},{"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../User/User":60}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BannerAdView_1 = require("../../ShareAd/View/BannerAdView");
var UniversalBottomZone = /** @class */ (function (_super) {
    __extends(UniversalBottomZone, _super);
    function UniversalBottomZone() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UniversalBottomZone.prototype.onAwake = function () {
        this._ownerSprite = this.owner;
        this._autoZone = this._ownerSprite.getChildByName("AutoZone");
        this._loopADZone = this._ownerSprite.getChildByName("LoopAD");
        this._bannerADZone = this._ownerSprite.getChildByName("BannerAD");
        this._bannerAd = this._bannerADZone.getComponent(BannerAdView_1.default);
    };
    UniversalBottomZone.prototype.onEnable = function () {
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            this._autoZone.bottom = this._loopADZone.height + this._bannerADZone.height;
            this._loopADZone.bottom = this._bannerADZone.height;
            this._bannerADZone.visible = true;
        }
        else {
            this._autoZone.bottom = this._loopADZone.height;
            this._loopADZone.bottom = 0;
            this._bannerADZone.visible = false;
        }
    };
    UniversalBottomZone.prototype.onDisable = function () {
    };
    UniversalBottomZone.prototype.onUpdate = function () {
        if (!this._bannerADZone.visible) {
            this._bannerAd.clear_JDKL_WXBaner();
        }
    };
    return UniversalBottomZone;
}(Laya.Script));
exports.default = UniversalBottomZone;
},{"../../ShareAd/View/BannerAdView":51}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var WXAPI_1 = require("../../WXAPI");
var User_1 = require("../../User/User");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var GameOverRewardView = /** @class */ (function (_super) {
    __extends(GameOverRewardView, _super);
    function GameOverRewardView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GameOverRewardView.prototype.onAwake = function () {
        this._levelText = this.owner.getChildByName("CenterZone").getChildByName("Level").getChildByName("LevelText");
        this._rewardText = this.owner.getChildByName("CenterZone").getChildByName("Reward").getChildByName("RewardText");
        this._rewardBtn = this.owner.getChildByName("CenterZone").getChildByName("RewardBtn");
        this._skipText = this.owner.getChildByName("CenterZone").getChildByName("SkipText");
    };
    GameOverRewardView.prototype.add_JDKL_Event = function () {
        this._rewardBtn.on(Laya.Event.CLICK, this, this.onRewardBtn);
        this._skipText.on(Laya.Event.CLICK, this, this.onSkipText);
    };
    GameOverRewardView.prototype.remove_JDKL_Event = function () {
        this._rewardBtn.off(Laya.Event.CLICK, this, this.onRewardBtn);
        this._skipText.off(Laya.Event.CLICK, this, this.onSkipText);
    };
    GameOverRewardView.prototype.open_JDKL_View = function (data) {
        _super.prototype.open_JDKL_View.call(this, data);
        var levelNum = this._data.levelNum;
        var rewardNum = this._data.rewardNum;
        this._levelText.value = String(levelNum);
        this._rewardText.value = String(rewardNum);
    };
    GameOverRewardView.prototype.onRewardBtn = function () {
        var self = this;
        this._rewardBtn.visible = false;
        WXAPI_1.default.show_JDKL_Rewarded_JDKL_VideoAd(function (ok) {
            if (ok) {
                User_1.default.add_JDKL_Crystal(self._data.rewardNum * 5);
            }
            else {
                User_1.default.add_JDKL_Crystal(self._data.rewardNum);
            }
            ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.GameOver_JDKL_View, { isWin: true }, function () {
                self.close_JDKL_View();
            });
        }, function () {
            User_1.default.add_JDKL_Crystal(self._data.rewardNum);
            ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.GameOver_JDKL_View, { isWin: true }, function () {
                self.close_JDKL_View();
            });
        });
    };
    GameOverRewardView.prototype.onSkipText = function () {
        var self = this;
        ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.GameOver_JDKL_View, { isWin: true }, function () {
            self.close_JDKL_View();
        });
    };
    return GameOverRewardView;
}(ViewBase_1.default));
exports.default = GameOverRewardView;
},{"../../Mgr/ViewMgr":41,"../../User/User":60,"../../WXAPI":87,"../ViewBase":84}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var GameMgr_1 = require("../../Mgr/GameMgr");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var WXAPI_1 = require("../../WXAPI");
var GameOverView = /** @class */ (function (_super) {
    __extends(GameOverView, _super);
    function GameOverView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._bottomZone = null;
        _this._btns = null;
        return _this;
    }
    GameOverView.prototype.onAwake = function () {
        this._bottomZone = this.owner.getChildByName("BottomZone");
        this._btns = this._bottomZone.getChildByName("Btns");
        this._nextLevelBtn = this._btns.getChildByName("NextLevelBtn");
        this._backBtn = this._btns.getChildByName("BackBtn");
        this._shareBtn = this._btns.getChildByName("ShareBtn");
        this._winTag = this.owner.getChildByName("CenterZone").getChildByName("WinTag");
        this._loseTag = this.owner.getChildByName("CenterZone").getChildByName("LoseTag");
        this._nextBtnWinTag = this._nextLevelBtn.getChildByName("WinTag");
        this._nextBtnLoseTag = this._nextLevelBtn.getChildByName("LoseTag");
    };
    GameOverView.prototype.open_JDKL_View = function (data) {
        _super.prototype.open_JDKL_View.call(this, data);
        this._winTag.visible = this._data.isWin;
        this._loseTag.visible = !this._data.isWin;
        this._nextBtnWinTag.visible = this._data.isWin;
        this._nextBtnLoseTag.visible = !this._data.isWin;
        GameMgr_1.default.get_JDKL_Instance().save_JDKL_Game_JDKL_Data();
    };
    GameOverView.prototype.add_JDKL_Event = function () {
        this._nextLevelBtn.on(Laya.Event.CLICK, this, this.onNextLevelBtn);
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._shareBtn.on(Laya.Event.CLICK, this, this.onShareBtn);
    };
    GameOverView.prototype.remove_JDKL_Event = function () {
        this._nextLevelBtn.off(Laya.Event.CLICK, this, this.onNextLevelBtn);
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._shareBtn.off(Laya.Event.CLICK, this, this.onShareBtn);
    };
    GameOverView.prototype.onNextLevelBtn = function () {
        var self = this;
        GameMgr_1.default.get_JDKL_Instance().startGame(function () {
            self.close_JDKL_View();
        });
    };
    GameOverView.prototype.onBackBtn = function () {
        var self = this;
        ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.More_JDKL_GameView, null, function (v) {
            v.onCloseEvent = function () {
                ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.Main_JDKL_View, null, function () {
                });
            };
            self.close_JDKL_View();
        });
    };
    GameOverView.prototype.onShareBtn = function () {
        WXAPI_1.default.share_JDKL_(function () {
        }, "", "");
    };
    return GameOverView;
}(ViewBase_1.default));
exports.default = GameOverView;
},{"../../Mgr/GameMgr":39,"../../Mgr/ViewMgr":41,"../../WXAPI":87,"../ViewBase":84}],71:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PopAdView_1 = require("../../ShareAd/View/PopAdView");
var EventMgr_1 = require("../../Event/EventMgr");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var EventDef_1 = require("../../Event/EventDef");
var ViewBase_1 = require("../ViewBase");
var LoopAdView_1 = require("../../ShareAd/View/LoopAdView");
var LeftPopAdView = /** @class */ (function (_super) {
    __extends(LeftPopAdView, _super);
    function LeftPopAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._popAdView = null;
        _this._popBtn = null;
        _this._popBtnTag = null;
        _this._popBtnOriginY = 0;
        _this._loopAd = null;
        return _this;
    }
    LeftPopAdView.prototype.onAwake = function () {
        this._popAdView = this.owner.getChildByName("PopAdView").getComponent(PopAdView_1.default);
        this._popBtn = this._popAdView.owner.getChildByName("BG").getChildByName("PopADBtn");
        this._popBtnTag = this._popBtn.getChildByName("Tag");
        this._popBtnTag.visible = false;
        this._popBtnOriginY = this._popBtn.y;
        this._loopAd = this._popAdView.owner.getChildByName("BG").getChildByName("LoopAD").getComponent(LoopAdView_1.default);
    };
    LeftPopAdView.prototype.add_JDKL_Event = function () {
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnView_JDKL_Open, this, this.onViewOpen);
    };
    LeftPopAdView.prototype.remove_JDKL_Event = function () {
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnView_JDKL_Open, this, this.onViewOpen);
    };
    LeftPopAdView.prototype.onUpdate = function () {
        this._popBtnTag.visible = this._popAdView.is_JDKL_PopUp;
    };
    LeftPopAdView.prototype.bringToTop = function () {
        this.owner.parent.setChildIndex(this.owner, this.owner.parent.numChildren - 1);
    };
    LeftPopAdView.prototype.onViewOpen = function (para) {
        var viewDef = para.view;
        if (viewDef != ViewMgr_1.View_JDKL_Def.More_JDKL_GameView) {
            this.bringToTop();
        }
    };
    return LeftPopAdView;
}(ViewBase_1.default));
exports.default = LeftPopAdView;
},{"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../Mgr/ViewMgr":41,"../../ShareAd/View/LoopAdView":54,"../../ShareAd/View/PopAdView":56,"../ViewBase":84}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var LoadingView = /** @class */ (function (_super) {
    __extends(LoadingView, _super);
    function LoadingView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._processWidth = 0;
        return _this;
    }
    LoadingView.prototype.onAwake = function () {
        this._bg = this.owner.getChildByName("Bg");
        this._processBarBg = this._bg.getChildByName("processBarBg");
        this._processBar = this._processBarBg.getChildByName("processBar");
        this._processWidth = this._processBar.width;
        this._processText = this._processBarBg.getChildByName("ProcessText");
        this._processText.value = "0";
    };
    LoadingView.prototype.onEnable = function () {
        _super.prototype.onEnable.call(this);
    };
    LoadingView.prototype.add_JDKL_Event = function () {
        _super.prototype.add_JDKL_Event.call(this);
    };
    LoadingView.prototype.remove_JDKL_Event = function () {
        _super.prototype.remove_JDKL_Event.call(this);
    };
    LoadingView.prototype.onUpdate = function () {
        var scale = Laya.stage.width / 750;
        this._bg.scaleX = scale;
        this._bg.scaleY = scale;
        this._processBarBg.y = Laya.stage.height - 100 * scale;
    };
    LoadingView.prototype.setProcess = function (process) {
        if (process < 0)
            process = 0;
        if (process > 1)
            process = 1;
        var width = this._processWidth * process;
        if (width < 1)
            width = 1;
        this._processBar.width = width;
        this._processText.value = String(Math.floor(process * 100));
    };
    return LoadingView;
}(ViewBase_1.default));
exports.default = LoadingView;
},{"../ViewBase":84}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LevelBox = /** @class */ (function (_super) {
    __extends(LevelBox, _super);
    function LevelBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._bossIcon = null;
        _this._levelNumText = null;
        return _this;
    }
    LevelBox.prototype.onAwake = function () {
        this._bossIcon = this.owner.getChildByName("BossIcon");
        this._levelNumText = this.owner.getChildByName("LevelNumText");
    };
    LevelBox.prototype.setData = function (data) {
        if (null == data) {
            this.owner.visible = false;
            return;
        }
        this.owner.visible = true;
        var self = this;
        this._bossIcon.visible = false;
        this._bossIcon.loadImage("res/boss/" + data.bossIcon + ".png", Laya.Handler.create(this, function () {
            self._bossIcon.visible = true;
        }));
        this._levelNumText.text = "";
    };
    return LevelBox;
}(Laya.Script));
exports.default = LevelBox;
},{}],74:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var GameMgr_1 = require("../../Mgr/GameMgr");
var User_1 = require("../../User/User");
var WeaponConfig_1 = require("../../Config/WeaponConfig");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var LevelBox_1 = require("./LevelBox");
var LevelConfig_1 = require("../../Config/LevelConfig");
var MainView = /** @class */ (function (_super) {
    __extends(MainView, _super);
    function MainView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._bottomZone = null;
        _this._autoZone = null;
        _this._switchWeaponBtn = null;
        _this._weaponUpBtn = null;
        _this._moreGameBtn = null;
        _this._startGameBtn = null;
        _this._gunDisplay = null;
        _this._nameTag = null;
        _this._weaponDisScene3D = null;
        _this._gunsNode = null;
        _this._weaponDisLastX = 0;
        _this._dragWeaponDising = false;
        _this._startGameing = false;
        _this._topZone = null;
        _this._levelInfo = null;
        _this._curLevelBox = null;
        _this._lastLevelBox = null;
        _this._nextLevelBox = null;
        return _this;
    }
    MainView.prototype.onAwake = function () {
        this._bottomZone = this.owner.getChildByName("BottomZone");
        this._autoZone = this._bottomZone.getChildByName("AutoZone");
        this._switchWeaponBtn = this._autoZone.getChildByName("SwitchWeaponBtn");
        this._weaponUpBtn = this._autoZone.getChildByName("WeaponUpBtn");
        this._moreGameBtn = this._autoZone.getChildByName("MoreGameBtn");
        this._startGameBtn = this._autoZone.getChildByName("StartGameBtn");
        this._gunDisplay = this._autoZone.getChildByName("GunDisplay");
        this._gunDisplay.visible = false;
        this._nameTag = this._gunDisplay.getChildByName("NameTag");
        this._topZone = this.owner.getChildByName("TopZone");
        this._levelInfo = this._topZone.getChildByName("LevelInfo");
        this._curLevelBox = this._levelInfo.getChildByName("Cur").getComponent(LevelBox_1.default);
        this._lastLevelBox = this._levelInfo.getChildByName("Last").getComponent(LevelBox_1.default);
        this._nextLevelBox = this._levelInfo.getChildByName("Next").getComponent(LevelBox_1.default);
    };
    MainView.prototype.add_JDKL_Event = function () {
        this._switchWeaponBtn.on(Laya.Event.CLICK, this, this.openWeaponView);
        this._weaponUpBtn.on(Laya.Event.CLICK, this, this.openWeaponView);
        this._moreGameBtn.on(Laya.Event.CLICK, this, this.onMoreGameBtn);
        this._startGameBtn.on(Laya.Event.CLICK, this, this.onStartGameBtn);
        this._gunDisplay.on(Laya.Event.MOUSE_DOWN, this, this.onGunDisplayClickDown);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnEquipWeaponChange, this, this.onEquipWeaponChange);
    };
    MainView.prototype.remove_JDKL_Event = function () {
        this._switchWeaponBtn.off(Laya.Event.CLICK, this, this.openWeaponView);
        this._weaponUpBtn.off(Laya.Event.CLICK, this, this.openWeaponView);
        this._moreGameBtn.off(Laya.Event.CLICK, this, this.onMoreGameBtn);
        this._startGameBtn.off(Laya.Event.CLICK, this, this.onStartGameBtn);
        this._gunDisplay.off(Laya.Event.MOUSE_DOWN, this, this.onGunDisplayClickDown);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnEquipWeaponChange, this, this.onEquipWeaponChange);
    };
    MainView.prototype.open_JDKL_View = function (data) {
        var _this = this;
        _super.prototype.open_JDKL_View.call(this, data);
        var self = this;
        Laya.Scene3D.load("subRes/LayaScene_Game/Conventional/WeaponDis.ls", Laya.Handler.create(this, function (scene) {
            self._gunDisplay.visible = true;
            self._autoZone.addChild(scene);
            self._weaponDisScene3D = scene;
            var realW = Laya.stage.width;
            var scale = realW / 750;
            var guns = self._weaponDisScene3D.getChildByName("Guns");
            _this._gunsNode = guns;
            guns.active = true;
            guns.transform.localScaleX = guns.transform.localScaleX * scale;
            guns.transform.localScaleY = guns.transform.localScaleY * scale;
            guns.transform.localScaleZ = guns.transform.localScaleZ * scale;
            var camera = self._weaponDisScene3D.getChildByName("Main Camera");
            var screenPos = new Laya.Vector3();
            camera.viewport.project(guns.transform.position, camera.projectionViewMatrix, screenPos);
            var point = new Laya.Point(screenPos.x / Laya.stage.clientScaleX, screenPos.y / Laya.stage.clientScaleY);
            point = _this._autoZone.globalToLocal(point);
            _this._gunDisplay.y = point.y;
            var curWeaponConfigData = WeaponConfig_1.default.getInstance().getWeaponConfigDataById(User_1.default.getCurWeaponData().id);
            for (var i = 0; i < guns.numChildren; ++i) {
                var gunObj = guns.getChildAt(i);
                gunObj.active = curWeaponConfigData.weaponName == gunObj.name;
            }
            self._nameTag.loadImage("res/gunName2/" + curWeaponConfigData.weaponName + ".png", Laya.Handler.create(_this, function () {
                self._nameTag.visible = true;
            }));
        }));
        var curLevelConfig = LevelConfig_1.default.getInstance().getLevelConfigDataByLevelNum(User_1.default.get_JDKL_LeveNum());
        this._curLevelBox.setData(curLevelConfig);
        var lastLevelConfig = LevelConfig_1.default.getInstance().getLevelConfigDataByLevelNum(User_1.default.get_JDKL_LeveNum() - 1);
        this._lastLevelBox.setData(lastLevelConfig);
        var nextLevelConfig = LevelConfig_1.default.getInstance().getLevelConfigDataByLevelNum(User_1.default.get_JDKL_LeveNum() + 1);
        this._nextLevelBox.setData(nextLevelConfig);
    };
    MainView.prototype.onUpdate = function () {
        if (!this._dragWeaponDising && null != this._gunsNode && !this._gunsNode.destroyed) {
            this._gunsNode.transform.localRotationEulerY += 45 * Laya.timer.delta / 1000;
        }
    };
    MainView.prototype.openWeaponView = function () {
        ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.Weapon_JDKL_View, null, function () {
        });
    };
    MainView.prototype.onStartGameBtn = function () {
        if (this._startGameing)
            return;
        this._startGameing = true;
        var self = this;
        ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.More_JDKL_GameView, {
            showContinue: true,
            onContinue: function () {
                GameMgr_1.default.get_JDKL_Instance().startGame(function () {
                    ViewMgr_1.default.instance.close_JDKL_View(ViewMgr_1.View_JDKL_Def.More_JDKL_GameView);
                });
            }
        }, function (v) {
            self.close_JDKL_View();
            self._startGameing = false;
        });
    };
    MainView.prototype.onMoreGameBtn = function () {
        ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.More_JDKL_GameView, null, function () {
        });
    };
    MainView.prototype.onGunDisplayClickDown = function () {
        this._weaponDisLastX = Laya.stage.mouseX;
        this._gunDisplay.on(Laya.Event.MOUSE_MOVE, this, this.onGunDisplayMove);
        this._gunDisplay.on(Laya.Event.MOUSE_UP, this, this.onGunDisplayClickUp);
        this._gunDisplay.on(Laya.Event.MOUSE_OUT, this, this.onGunDisplayClickUp);
        this._dragWeaponDising = true;
    };
    MainView.prototype.onGunDisplayClickUp = function () {
        this._gunDisplay.off(Laya.Event.MOUSE_MOVE, this, this.onGunDisplayMove);
        this._gunDisplay.off(Laya.Event.MOUSE_UP, this, this.onGunDisplayClickUp);
        this._gunDisplay.off(Laya.Event.MOUSE_OUT, this, this.onGunDisplayClickUp);
        this._dragWeaponDising = false;
    };
    MainView.prototype.onGunDisplayMove = function () {
        var parentView = this.owner.parent;
        var xDir = Laya.stage.mouseX - this._weaponDisLastX;
        this._weaponDisLastX = Laya.stage.mouseX;
        if (null != this._gunsNode && !this._gunsNode.destroyed) {
            this._gunsNode.transform.localRotationEulerY += xDir;
        }
    };
    MainView.prototype.onEquipWeaponChange = function (para) {
        if (null != this._gunsNode && !this._gunsNode.destroyed) {
            var curWeaponConfigData = WeaponConfig_1.default.getInstance().getWeaponConfigDataById(User_1.default.getCurWeaponData().id);
            for (var i = 0; i < this._gunsNode.numChildren; ++i) {
                var gunObj = this._gunsNode.getChildAt(i);
                gunObj.active = curWeaponConfigData.weaponName == gunObj.name;
            }
            this._nameTag.loadImage("res/gunName2/" + curWeaponConfigData.weaponName + ".png", Laya.Handler.create(this, function () {
            }));
        }
    };
    return MainView;
}(ViewBase_1.default));
exports.default = MainView;
},{"../../Config/LevelConfig":6,"../../Config/WeaponConfig":8,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../Mgr/GameMgr":39,"../../Mgr/ViewMgr":41,"../../User/User":60,"../ViewBase":84,"./LevelBox":73}],75:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var LoopAdView_1 = require("../../ShareAd/View/LoopAdView");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var MoreGameView = /** @class */ (function (_super) {
    __extends(MoreGameView, _super);
    function MoreGameView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._loopAd = null;
        _this._continueBtn = null;
        _this._homeBtn = null;
        return _this;
    }
    MoreGameView.prototype.onAwake = function () {
        this._closeBtn = this.owner.getChildByName("TopZone").getChildByName("CloseBtn");
        this._loopAd = this.owner.getChildByName("TopZone").getChildByName("LoopAD").getComponent(LoopAdView_1.default);
        this._loopAd.AdPos_JDKL_ID = 193;
        this._continueBtn = this.owner.getChildByName("TopZone").getChildByName("ContinueBtn");
        this._homeBtn = this.owner.getChildByName("TopZone").getChildByName("HomeBtn");
    };
    MoreGameView.prototype.open_JDKL_View = function (data) {
        _super.prototype.open_JDKL_View.call(this, data);
        if (null != data && data.showContinue) {
            this._closeBtn.visible = false;
            this._continueBtn.visible = false;
            this._homeBtn.visible = false;
            var self = this;
            var time = AppSwitchConfig_1.default.get_JDKL_Instance().getApp_JDKL_SwitchData().btnDelayTime * 1000;
            Laya.timer.once(time, this, function () {
                self._continueBtn.visible = true;
                self._homeBtn.visible = true;
            });
        }
        else {
            this._closeBtn.visible = true;
            this._continueBtn.visible = false;
        }
    };
    MoreGameView.prototype.add_JDKL_Event = function () {
        this._closeBtn.on(Laya.Event.CLICK, this, this.close_JDKL_View);
        this._continueBtn.on(Laya.Event.CLICK, this, this.onContinueBtn);
        this._homeBtn.on(Laya.Event.CLICK,this,this.onHomeBtn);
    };
    MoreGameView.prototype.remove_JDKL_Event = function () {
        this._closeBtn.off(Laya.Event.CLICK, this, this.close_JDKL_View);
        this._continueBtn.off(Laya.Event.CLICK, this, this.onContinueBtn);
        this._homeBtn.off(Laya.Event.CLICK,this,this.onHomeBtn);
    };
    MoreGameView.prototype.onContinueBtn = function () {
        if (this._data && this._data.onContinue) {
            this._data.onContinue();
        }
    };
    MoreGameView.prototype.onHomeBtn = function () {
        var self = this;
        ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.Main_JDKL_View, {}, function (v) { self.close_JDKL_View(); });
    };
    return MoreGameView;
}(ViewBase_1.default));
exports.default = MoreGameView;
},{"../../Config/AppSwitchConfig":4,"../../Mgr/ViewMgr":41,"../../ShareAd/View/LoopAdView":54,"../ViewBase":84}],76:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var WXAPI_1 = require("../../WXAPI");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var GameMgr_1 = require("../../Mgr/GameMgr");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var ReviveView = /** @class */ (function (_super) {
    __extends(ReviveView, _super);
    function ReviveView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._leftTime = 0;
        return _this;
    }
    ReviveView.prototype.onAwake = function () {
        this._timingText = this.owner.getChildByName("CenterZone").getChildByName("Titel").getChildByName("Timing").getChildByName("Text");
        this._reviveBtn = this.owner.getChildByName("BottomZone").getChildByName("Btns").getChildByName("ReviveBtn");
    };
    ReviveView.prototype.add_JDKL_Event = function () {
        this._reviveBtn.on(Laya.Event.CLICK, this, this.onReviveBtn);
    };
    ReviveView.prototype.remove_JDKL_Event = function () {
        this._reviveBtn.off(Laya.Event.CLICK, this, this.onReviveBtn);
    };
    ReviveView.prototype.open_JDKL_View = function (data) {
        _super.prototype.open_JDKL_View.call(this, data);
        this._leftTime = 5;
        Laya.timer.loop(1000, this, this.timing);
    };
    ReviveView.prototype.onReviveBtn = function () {
        var self = this;
        this._reviveBtn.visible = false;
        WXAPI_1.default.show_JDKL_Rewarded_JDKL_VideoAd(function (ok) {
            if (ok) {
                Laya.timer.clear(self, self.timing);
                self.close_JDKL_View();
                self._reviveBtn.visible = true;
                GameMgr_1.default.get_JDKL_Instance().CurLevel.Revive();
            }
            else {
                self._reviveBtn.visible = true;
            }
        }, function () {
            self._reviveBtn.visible = true;
        });
    };
    ReviveView.prototype.timing = function () {
        if (this._reviveBtn.visible) {
            this._leftTime = this._leftTime - 1;
        }
        if (this._leftTime < 0) {
            var self = this;
            this._leftTime = 0;
            Laya.timer.clear(this, this.timing);
            ViewMgr_1.default.instance.open_JDKL_View(ViewMgr_1.View_JDKL_Def.GameOver_JDKL_View, { isWin: false }, function () {
                EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnLevel_JDKL_Complate, { level: self, isWin: false });
                ViewMgr_1.default.instance.close_JDKL_View(ViewMgr_1.View_JDKL_Def.Battle_JDKL_View);
                GameMgr_1.default.get_JDKL_Instance().destroyGame();
                self.close_JDKL_View();
                SoundMgr_1.default.instance.play_JDKL_Sound("lose");
            });
        }
        this._timingText.value = String(this._leftTime);
    };
    return ReviveView;
}(ViewBase_1.default));
exports.default = ReviveView;
},{"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../Mgr/GameMgr":39,"../../Mgr/SoundMgr":40,"../../Mgr/ViewMgr":41,"../../WXAPI":87,"../ViewBase":84}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scale_JDKL_BreathingAni = /** @class */ (function (_super) {
    __extends(Scale_JDKL_BreathingAni, _super);
    function Scale_JDKL_BreathingAni() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.breathing_JDKL_Speed = 2000;
        _this.max_JDKL_Scale = 1;
        _this.min_JDKL_Scale = 0.9;
        _this._add = false;
        return _this;
    }
    Scale_JDKL_BreathingAni.prototype.onAwake = function () {
        this._owner_JDKL_Sprite = this.owner;
    };
    Scale_JDKL_BreathingAni.prototype.onStart = function () {
        this._owner_JDKL_Sprite.scale(this.max_JDKL_Scale, this.max_JDKL_Scale);
    };
    Scale_JDKL_BreathingAni.prototype.onEnable = function () {
        this._owner_JDKL_Sprite.on(Laya.Event.FOCUS_CHANGE, this, this.onFocus_JDKL_Change);
    };
    Scale_JDKL_BreathingAni.prototype.onDisable = function () {
        this._owner_JDKL_Sprite.off(Laya.Event.FOCUS_CHANGE, this, this.onFocus_JDKL_Change);
    };
    Scale_JDKL_BreathingAni.prototype.onUpdate = function () {
        if (this._owner_JDKL_Sprite.visible) {
            this.bg_JDKL_Ani();
        }
    };
    Scale_JDKL_BreathingAni.prototype.bg_JDKL_Ani = function () {
        if (!this._add) {
            var value = this._owner_JDKL_Sprite.scaleX - Math.min(50, Laya.timer.delta) / this.breathing_JDKL_Speed * 1;
            value = Math.max(this.min_JDKL_Scale, value);
            this._owner_JDKL_Sprite.scale(value, value);
            if (this._owner_JDKL_Sprite.scaleX <= this.min_JDKL_Scale) {
                this._add = true;
            }
        }
        else {
            var value = this._owner_JDKL_Sprite.scaleX + Math.min(50, Laya.timer.delta) / this.breathing_JDKL_Speed * 1;
            value = Math.min(this.max_JDKL_Scale, value);
            this._owner_JDKL_Sprite.scale(value, value);
            if (this._owner_JDKL_Sprite.scaleX >= this.max_JDKL_Scale) {
                this._add = false;
            }
        }
    };
    Scale_JDKL_BreathingAni.prototype.onFocus_JDKL_Change = function () {
        this._owner_JDKL_Sprite.scale(this.max_JDKL_Scale, this.max_JDKL_Scale);
        this._add = false;
    };
    return Scale_JDKL_BreathingAni;
}(Laya.Script));
exports.default = Scale_JDKL_BreathingAni;
},{}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var TipsView = /** @class */ (function (_super) {
    __extends(TipsView, _super);
    function TipsView() {
        return _super.call(this) || this;
    }
    TipsView.prototype.onAwake = function () {
        this._bg = this.owner.getChildByName("Bg");
        this._bg.x = Laya.stage.width / 2 - this._bg.width / 2;
        this._tipsText = this._bg.getChildByName("Text");
    };
    TipsView.prototype.open_JDKL_View = function (data) {
        _super.prototype.open_JDKL_View.call(this, data);
        this.setTipsMsg(data);
        Laya.timer.clearAll(this);
        var self = this;
        Laya.timer.once(3000, this, function () {
            self.close_JDKL_View();
        });
    };
    TipsView.prototype.setTipsMsg = function (msg) {
        this._tipsText.text = msg;
    };
    return TipsView;
}(ViewBase_1.default));
exports.default = TipsView;
},{"../ViewBase":84}],79:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MiddleAnchor = /** @class */ (function (_super) {
    __extends(MiddleAnchor, _super);
    function MiddleAnchor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MiddleAnchor.prototype.onAwake = function () {
        var sp = this.owner;
        var parentSp = this.owner.parent;
        if (parentSp) {
            var pw = parentSp.width;
            var x = pw / 2;
            sp.x = x;
        }
    };
    return MiddleAnchor;
}(Laya.Script));
exports.default = MiddleAnchor;
},{}],80:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewAutoScale = /** @class */ (function (_super) {
    __extends(ViewAutoScale, _super);
    function ViewAutoScale() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ViewAutoScale.prototype.onAwake = function () {
        var realH = Laya.stage.height;
        var scale = realH / ViewAutoScale.baseHeight;
        var ps = this.owner;
        ps.scale(scale, scale);
    };
    ViewAutoScale.baseWidth = 750;
    ViewAutoScale.baseHeight = 1334;
    return ViewAutoScale;
}(Laya.Script));
exports.default = ViewAutoScale;
},{}],81:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewAutoScaleByW = /** @class */ (function (_super) {
    __extends(ViewAutoScaleByW, _super);
    function ViewAutoScaleByW() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ViewAutoScaleByW.prototype.onAwake = function () {
        var realW = Laya.stage.width;
        var scale = realW / ViewAutoScaleByW.baseWidth;
        var ps = this.owner;
        ps.scale(scale, scale);
    };
    ViewAutoScaleByW.baseWidth = 750;
    ViewAutoScaleByW.baseHeight = 1334;
    return ViewAutoScaleByW;
}(Laya.Script));
exports.default = ViewAutoScaleByW;
},{}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilit_1 = require("../Utilit");
var TopZone = /** @class */ (function (_super) {
    __extends(TopZone, _super);
    function TopZone() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TopZone.prototype.onAwake = function () {
        var clip = this.owner;
        if (Utilit_1.default.is_JDKL_IphoneX()) {
            clip.top += 70;
        }
    };
    return TopZone;
}(Laya.Script));
exports.default = TopZone;
},{"../Utilit":61}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Twinkle_JDKL_Sprite = /** @class */ (function (_super) {
    __extends(Twinkle_JDKL_Sprite, _super);
    function Twinkle_JDKL_Sprite() {
        var _this = _super.call(this) || this;
        /** @prop {name:TwinkleSpeed, tips:"闪动速度", type:Number, default:1000}*/
        _this.TwinkleSpeed = 1000;
        /** @prop {name:TwinkleMinSize, tips:"最小缩放", type:Number, default:0.95}*/
        _this.TwinkleMinSize = 0.95;
        /** @prop {name:TwinkleMaxSize, tips:"最大缩放", type:Number, default:1.05}*/
        _this.TwinkleMaxSize = 1.05;
        _this._aniForward = false;
        _this._font_JDKL_Size = 25;
        _this._origin_JDKL_Size = 1;
        return _this;
    }
    Twinkle_JDKL_Sprite.prototype.onAwake = function () {
        this._display_JDKL_Sp = this.owner;
        this._dis_JDKL_Text = this.owner.getChildByName("TitelText");
        this._origin_JDKL_Size = this._display_JDKL_Sp.scaleX;
        if (this._dis_JDKL_Text != null) {
            this._dis_JDKL_Text.text = "";
            this._font_JDKL_Size = this._dis_JDKL_Text.fontSize;
        }
    };
    Twinkle_JDKL_Sprite.prototype.onEnable = function () {
        this._display_JDKL_Sp.scale(this._origin_JDKL_Size, this._origin_JDKL_Size);
    };
    Twinkle_JDKL_Sprite.prototype.onDisable = function () {
    };
    Twinkle_JDKL_Sprite.prototype.onUpdate = function () {
        this.display_JDKL_Ani();
    };
    Twinkle_JDKL_Sprite.prototype.display_JDKL_Ani = function () {
        if (!this._aniForward) {
            var scale = this._display_JDKL_Sp.scaleX - Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.max(scale, this.TwinkleMinSize * this._origin_JDKL_Size);
            this._display_JDKL_Sp.scale(scale, scale);
            if (this._display_JDKL_Sp.scaleX <= this.TwinkleMinSize * this._origin_JDKL_Size) {
                this._aniForward = true;
            }
        }
        else {
            var scale = this._display_JDKL_Sp.scaleX + Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.min(scale, this.TwinkleMaxSize * this._origin_JDKL_Size);
            this._display_JDKL_Sp.scale(scale, scale);
            if (this._display_JDKL_Sp.scaleX >= this.TwinkleMaxSize * this._origin_JDKL_Size) {
                this._aniForward = false;
            }
        }
    };
    return Twinkle_JDKL_Sprite;
}(Laya.Script));
exports.default = Twinkle_JDKL_Sprite;
},{}],84:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../Mgr/ViewMgr");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
//界面基类，所有功能模块界面继承于这个类。这种类型的界面不能嵌套。
var View_JDKL_Base = /** @class */ (function (_super) {
    __extends(View_JDKL_Base, _super);
    function View_JDKL_Base() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onCloseEvent = null;
        _this.onOpenEvent = null;
        _this._viewBase = true;
        _this._viewDef = ViewMgr_1.View_JDKL_Def.None;
        _this._data = {};
        return _this;
    }
    View_JDKL_Base.prototype.onAwake = function () {
        //删除时自动释放
        this.owner.autoDestroyAtClosed = true;
        this.owner.height = Laya.stage.height;
    };
    View_JDKL_Base.prototype.onEnable = function () {
        this.add_JDKL_Event();
    };
    View_JDKL_Base.prototype.onDisable = function () {
        this.remove_JDKL_Event();
    };
    View_JDKL_Base.prototype.onDestroy = function () {
        this.remove_JDKL_Event();
    };
    View_JDKL_Base.prototype.open_JDKL_View = function (data) {
        this._data = data;
        this.show_JDKL_();
        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnView_JDKL_Open, { view: this._viewDef });
        if (this.onOpenEvent) {
            this.onOpenEvent();
        }
    };
    View_JDKL_Base.prototype.add_JDKL_Event = function () {
    };
    View_JDKL_Base.prototype.remove_JDKL_Event = function () {
        Laya.timer.clearAll(this);
    };
    View_JDKL_Base.prototype.close_JDKL_View = function () {
        ViewMgr_1.default.instance.close_JDKL_View(this._viewDef);
    };
    View_JDKL_Base.prototype._JDKL_hide = function () {
        this.owner.visible = false;
        this.onHide();
    };
    View_JDKL_Base.prototype.show_JDKL_ = function () {
        this.owner.visible = true;
        this.onShow();
    };
    View_JDKL_Base.prototype.view_JDKL_IsHide = function () {
        return this.owner.alpha == 0;
    };
    View_JDKL_Base.prototype.onHide = function () { };
    View_JDKL_Base.prototype.onShow = function () { };
    View_JDKL_Base.prototype.onClose = function () {
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        EventMgr_1.default.instance.dispatch_JDKL_(EventDef_1.Event_JDKL_Def.Game_OnView_JDKL_Close, { view: this._viewDef });
        if (this.onCloseEvent) {
            this.onCloseEvent();
        }
    };
    return View_JDKL_Base;
}(Laya.Script));
exports.default = View_JDKL_Base;
},{"../Event/EventDef":9,"../Event/EventMgr":10,"../Mgr/ViewMgr":41}],85:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var User_1 = require("../../User/User");
var WXAPI_1 = require("../../WXAPI");
var WeaponConfig_1 = require("../../Config/WeaponConfig");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var WeaponBox = /** @class */ (function (_super) {
    __extends(WeaponBox, _super);
    function WeaponBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._gunIcon = null;
        _this._nameTag = null;
        _this._levelInfo = null;
        _this._levelText = null;
        _this._levelUpBtn = null;
        _this._levelUpCostText = null;
        _this._freeUnLockBtn = null;
        _this._maxLevelTag = null;
        _this._lockTag = null;
        _this._damageText = null;
        _this._weaponId = 0;
        _this._weaponData = null;
        _this._bg = null;
        _this._selectTag = null;
        return _this;
    }
    WeaponBox.prototype.onAwake = function () {
        this._gunIcon = this.owner.getChildByName("GunIcon");
        this._nameTag = this.owner.getChildByName("NameTag");
        this._levelInfo = this.owner.getChildByName("Level");
        this._levelText = this._levelInfo.getChildByName("LevelText");
        this._levelUpBtn = this.owner.getChildByName("LevelUpBtn");
        this._levelUpCostText = this._levelUpBtn.getChildByName("CostText");
        this._freeUnLockBtn = this.owner.getChildByName("FreeUnLockBtn");
        this._maxLevelTag = this.owner.getChildByName("MaxLevelTag");
        this._lockTag = this.owner.getChildByName("LockTag");
        this._damageText = this.owner.getChildByName("Damage").getChildByName("DamageText");
        this._bg = this.owner.getChildByName("Bg");
        this._selectTag = this._bg.getChildByName("SelectTag");
    };
    WeaponBox.prototype.onEnable = function () {
        this._levelUpBtn.on(Laya.Event.CLICK, this, this.onLevelUpBtn);
        this._freeUnLockBtn.on(Laya.Event.CLICK, this, this.onFreeUnLockBtn);
        this._bg.on(Laya.Event.CLICK, this, this.onBg);
    };
    WeaponBox.prototype.onDisable = function () {
        this._levelUpBtn.off(Laya.Event.CLICK, this, this.onLevelUpBtn);
        this._freeUnLockBtn.off(Laya.Event.CLICK, this, this.onFreeUnLockBtn);
        this._bg.off(Laya.Event.CLICK, this, this.onBg);
        this._weaponId = 0;
        this._weaponData = null;
    };
    WeaponBox.prototype.setData = function (id, data) {
        this._gunIcon.visible = false;
        this._nameTag.visible = false;
        this._levelUpBtn.visible = false;
        this._freeUnLockBtn.visible = false;
        this._maxLevelTag.visible = false;
        this._lockTag.visible = false;
        this._levelInfo.visible = false;
        this._selectTag.visible = false;
        this._weaponId = id;
        this._weaponData = data;
        var configData = WeaponConfig_1.default.getInstance().getWeaponConfigDataById(this._weaponId);
        var self = this;
        this._gunIcon.loadImage("res/gunPic/" + configData.weaponName + ".png", Laya.Handler.create(this, function (tex) {
            self._gunIcon.visible = true;
            self._gunIcon.width = self._gunIcon.texture.width;
            self._gunIcon.height = self._gunIcon.texture.height;
        }));
        this._nameTag.loadImage("res/gunName1/" + configData.weaponName + ".png", Laya.Handler.create(this, function () {
            self._nameTag.visible = true;
        }));
        if (null == this._weaponData) {
            var next = User_1.default.getNextCanUnlockWeaponId();
            if (next == this._weaponId) {
                this._freeUnLockBtn.visible = true;
            }
            else {
                this._lockTag.visible = true;
            }
            this._damageText.value = String(configData.weaponDamage[0]);
        }
        else {
            if (this._weaponData.id == User_1.default.getCurWeapon()) {
                this._selectTag.visible = true;
            }
            var maxLevel = WeaponConfig_1.default.getInstance().getWeaponMaxLevelById(this._weaponId);
            if (this._weaponData.level >= maxLevel) {
                this._maxLevelTag.visible = true;
            }
            else {
                this._levelUpBtn.visible = true;
                var cost = configData.weaponUpLevel[this._weaponData.level];
                this._levelUpCostText.value = String(cost);
            }
            this._levelInfo.visible = true;
            this._levelText.value = String(this._weaponData.level);
            this._damageText.value = String(configData.weaponDamage[this._weaponData.level - 1]);
        }
    };
    WeaponBox.prototype.onBg = function () {
        if (null != this._weaponData) {
            User_1.default.setCurWeapon(this._weaponData.id);
            SoundMgr_1.default.instance.play_JDKL_Sound("changeWeapon");
        }
    };
    WeaponBox.prototype.onLevelUpBtn = function () {
        var configData = WeaponConfig_1.default.getInstance().getWeaponConfigDataById(this._weaponId);
        if (null != configData) {
            var cost = configData.weaponUpLevel[this._weaponData.level];
            if (User_1.default.get_JDKL_Crystal() >= cost) {
                User_1.default.sub_JDKL_Crystal(cost);
                User_1.default.setWeaponLevel(this._weaponId, this._weaponData.level + 1);
            }
            else {
                ViewMgr_1.default.instance.show_JDKL_Tips("钻石不足");
            }
        }
    };
    WeaponBox.prototype.onFreeUnLockBtn = function () {
        var self = this;
        WXAPI_1.default.show_JDKL_Rewarded_JDKL_VideoAd(function (ok) {
            if (ok) {
                User_1.default.unlockWeapon(self._weaponId);
            }
        }, function () {
        });
    };
    return WeaponBox;
}(Laya.Script));
exports.default = WeaponBox;
},{"../../Config/WeaponConfig":8,"../../Mgr/SoundMgr":40,"../../Mgr/ViewMgr":41,"../../User/User":60,"../../WXAPI":87}],86:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var WeaponBox_1 = require("./WeaponBox");
var User_1 = require("../../User/User");
var WeaponConfig_1 = require("../../Config/WeaponConfig");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var WeaponView = /** @class */ (function (_super) {
    __extends(WeaponView, _super);
    function WeaponView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._closeBtn = null;
        _this._list = null;
        return _this;
    }
    WeaponView.prototype.onAwake = function () {
        this._closeBtn = this.owner.getChildByName("CenterZone").getChildByName("CloseBtn");
        this._list = this.owner.getChildByName("CenterZone").getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.vScrollBarSkin = "";
    };
    WeaponView.prototype.add_JDKL_Event = function () {
        this._closeBtn.on(Laya.Event.CLICK, this, this.close_JDKL_View);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnWeaponUnlock, this, this.refreshList);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnWeaponLevelChange, this, this.refreshList);
        EventMgr_1.default.instance.reg_JDKL_Evemt(EventDef_1.Event_JDKL_Def.Game_OnEquipWeaponChange, this, this.refreshList);
    };
    WeaponView.prototype.remove_JDKL_Event = function () {
        this._closeBtn.off(Laya.Event.CLICK, this, this.close_JDKL_View);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnWeaponUnlock, this, this.refreshList);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnWeaponLevelChange, this, this.refreshList);
        EventMgr_1.default.instance.remove_JDKL_Event(EventDef_1.Event_JDKL_Def.Game_OnEquipWeaponChange, this, this.refreshList);
    };
    WeaponView.prototype.open_JDKL_View = function (data) {
        _super.prototype.open_JDKL_View.call(this, data);
        this.refreshList();
    };
    WeaponView.prototype.refreshList = function () {
        var allIds = WeaponConfig_1.default.getInstance().AllIds;
        this._list.array = allIds;
    };
    WeaponView.prototype.onListRender = function (cell, index) {
        var id = this._list.array[index];
        var loopAdBox = cell.getComponent(WeaponBox_1.default);
        var weaponData = User_1.default.getWeaponData(id);
        loopAdBox.setData(id, weaponData);
    };
    return WeaponView;
}(ViewBase_1.default));
exports.default = WeaponView;
},{"../../Config/WeaponConfig":8,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../User/User":60,"../ViewBase":84,"./WeaponBox":85}],87:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WX_JDKL_API = /** @class */ (function () {
    function WX_JDKL_API() {
    }
    WX_JDKL_API.wx_JDKL_Login = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window.wx.login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    WX_JDKL_API.onRewarded_JDKL_VideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    WX_JDKL_API.onRewarded_JDKL_VideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (WX_JDKL_API._onRewardedVideoAdFailed) {
            WX_JDKL_API._onRewardedVideoAdFailed();
        }
    };
    WX_JDKL_API.onRewarded_JDKL_VideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (WX_JDKL_API._onRewardedVideoAdClose) {
                WX_JDKL_API._onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (WX_JDKL_API._onRewardedVideoAdClose) {
                WX_JDKL_API._onRewardedVideoAdClose(false);
            }
        }
    };
    WX_JDKL_API.regRewarded_JDKL_VideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(WX_JDKL_API.onRewarded_JDKL_VideoAdLoad);
        rewardedVideoAd.onError(WX_JDKL_API.onRewarded_JDKL_VideoAdError);
        rewardedVideoAd.onClose(WX_JDKL_API.onRewarded_JDKL_VideoAdClose);
        WX_JDKL_API._isRegRewardedVideoAdEvent = true;
    };
    WX_JDKL_API.show_JDKL_Rewarded_JDKL_VideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            WX_JDKL_API._onRewardedVideoAdClose = onAdClose;
            WX_JDKL_API._onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["wx"].createRewardedVideoAd({
                adUnitId: WX_JDKL_API.adUnit_JDKL_Id,
            });
            if (!WX_JDKL_API._isRegRewardedVideoAdEvent) {
                WX_JDKL_API.regRewarded_JDKL_VideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败', err);
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败', err);
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    WX_JDKL_API.navigate_JDKL_ToMini_JDKL_Program = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["wx"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    WX_JDKL_API.share_JDKL_ = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onMiniGame) {
            WX_JDKL_API._onShow = function () {
                Laya.Browser.window["wx"].offShow(WX_JDKL_API._onShow);
                WX_JDKL_API._onShow = null;
                var c = Date.now() - _this._last_JDKL_ShareTime;
                if (complate) {
                    if (Date.now() - _this._last_JDKL_ShareTime > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["wx"].onShow(WX_JDKL_API._onShow);
            WX_JDKL_API._last_JDKL_ShareTime = Date.now();
            Laya.Browser.window["wx"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    WX_JDKL_API.show_JDKL_Interstitial_JDKL_Ad = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            var interstitialAd = Laya.Browser.window["wx"].createInterstitialAd({
                adUnitId: WX_JDKL_API.InsAd_JDKL_UnitId,
            });
            interstitialAd.onLoad(function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    if (onFailed) {
                        onFailed();
                    }
                });
            });
            interstitialAd.onError(function (err) {
                console.log('插屏广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            interstitialAd.onClose(function () {
                console.log('插屏广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene	number	启动小游戏的场景值
     * query	Object	启动小游戏的 query 参数
     * shareTicket	string	shareTicket，详见获取更多转发信息
     * referrerInfo	object	来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof WXAPI
     */
    WX_JDKL_API.get_JDKL_Launch_JDKL_OptionsSync = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onMiniGame) {
            var obj_1 = Laya.Browser.window["wx"].getLaunchOptionsSync();
            console.log("场景值 " + obj_1.scene);
            var str = JSON.stringify(obj_1.query);
            console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            console.log("Query参数：key " + key);
            console.log("ShareTicket " + obj_1.shareTicket);
            console.log("ReferrerInfo.appId " + obj_1.referrerInfo.appId);
            console.log("ReferrerInfo.extraData " + obj_1.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof WXAPI
     */
    WX_JDKL_API.Set_JDKL_Share_JDKL_Menu = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["wx"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["wx"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    //检测更新
    WX_JDKL_API.check_JDKL_Update = function () {
        if (Laya.Browser.onMiniGame) {
            var updateManager = Laya.Browser.window["wx"].getUpdateManager();
            updateManager.onCheckForUpdate(function (res) {
                console.log("是否需要更新 : ", res.hasUpdate);
            });
            updateManager.onUpdateReady(function () {
                Laya.Browser.window["wx"].showModal({
                    title: '更新提示',
                    content: '新版本已经准备好，是否重启小游戏？',
                    success: function (res) {
                        if (res.confirm) {
                            updateManager.applyUpdate();
                        }
                    }
                });
            });
            updateManager.onUpdateFailed(function () {
                console.log("新版本下载失败!!!");
            });
        }
    };
    WX_JDKL_API.adUnit_JDKL_Id = "adunit-013fab13a60a6bb1";
    WX_JDKL_API.bannerAd_JDKL_UnitId = "adunit-1b33caa51e550546";
    WX_JDKL_API.InsAd_JDKL_UnitId = "adunit-442aef55944b15b2";
    //-------------------------激励视频---------------------------------
    WX_JDKL_API._isRegRewardedVideoAdEvent = false;
    WX_JDKL_API._onRewardedVideoAdFailed = null;
    WX_JDKL_API._onRewardedVideoAdClose = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    WX_JDKL_API._onShow = null;
    WX_JDKL_API._last_JDKL_ShareTime = 0;
    return WX_JDKL_API;
}());
exports.default = WX_JDKL_API;
},{}],88:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var View;
    (function (View) {
        var LoadingUI = /** @class */ (function (_super) {
            __extends(LoadingUI, _super);
            function LoadingUI() {
                return _super.call(this) || this;
            }
            LoadingUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(LoadingUI.uiView);
            };
            LoadingUI.uiView = { "type": "Scene", "props": { "width": 750, "top": 0, "right": 0, "left": 0, "height": 1334, "bottom": 0 }, "compId": 2, "child": [{ "type": "Clip", "props": { "y": 0, "x": 0, "skin": "Loading/狙击恐龙loading.png", "name": "Bg" }, "compId": 6, "child": [{ "type": "Clip", "props": { "y": 1100, "x": 38, "skin": "Loading/进度条3.png", "name": "processBarBg" }, "compId": 9, "child": [{ "type": "Clip", "props": { "y": 20, "x": 8, "width": 658, "skin": "Loading/进度条2.png", "pivotY": 11, "name": "processBar", "left": 8, "height": 30, "bottom": 9 }, "compId": 5 }, { "type": "FontClip", "props": { "y": 1, "x": 330, "width": 86, "value": "100", "skin": "Loading/金币数字.png", "sheet": "0123456789", "pivotY": 25, "pivotX": 51, "name": "ProcessText", "height": 49, "align": "center" }, "compId": 11, "child": [{ "type": "Sprite", "props": { "y": 4, "x": 107, "texture": "Loading/123.png" }, "compId": 12 }] }] }, { "type": "Sprite", "props": { "y": 67, "x": 375, "width": 432, "texture": "Loading/logo.png", "pivotX": 216, "name": "Logo", "height": 131 }, "compId": 10 }] }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "View/LoadingView/LoadingView.ts" }, "compId": 7 }], "loadList": ["Loading/狙击恐龙loading.png", "Loading/进度条3.png", "Loading/进度条2.png", "Loading/金币数字.png", "Loading/123.png", "Loading/logo.png"], "loadList3D": [] };
            return LoadingUI;
        }(Scene));
        View.LoadingUI = LoadingUI;
        REG("ui.View.LoadingUI", LoadingUI);
    })(View = ui.View || (ui.View = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[38])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
